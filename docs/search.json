[{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"créer-un-document-blog-à-laide-du-package-ofce","dir":"Articles","previous_headings":"","what":"Créer un document blog à l’aide du package ofce","title":"Procédures du blog","text":"La première étape est de générer un template d’un document quarto intégrant l’ensemble des méta-données assurant sa compilation dans le format souhaité (render) par Rstudio. Il suffit pour cela d’executer la commande suivante: setup_blog() qui va automatiquement générer un document quarto, l’ajout des extensions qui regroupent les métadonnées associées aux questions de style, ainsi qu’un document de gestion des références bibliographiques .bib","code":""},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"yaml-du-document","dir":"Articles","previous_headings":"","what":"Yaml du document","title":"Procédures du blog","text":"Le Yaml est le préambule au script inclus entre les caractères suivants --- --- qui regroupe les métadonnées du document ainsi que certains paramètres comme le titre ou le nom des auteurs. Il se présente de la façon suivante: Les seules informations à modifier par l’auteur sont les suivantes: title: name: url: categories: description: Dans le cas où l’auteur aurait d’autres affiliation, il conviendrait de modifier également les deux lignes suivantes: affiliation: affiliation-url:","code":"--- title: \"Titre du billet\" date: today author:   - name: Albertine Retrouvée     url: https://www.ofce.sciences-po.fr/ofce/chercheurs1.php     affiliation: OFCE      affiliation-url: https://www.ofce.sciences-po.fr/      institution: \"Observatoire Français des Conjonctures Économiques\"  format:   blog-html: default   blog-pdf: default categories: [\"keyword1\", \"keyword2\"] image: image.jpg description: \"Chapeau du texte qui apparait dans la vignette du billet sur le menu\"  # A activer pour permettre les commentaires via hypothesis (https://web.hypothes.is/) # comments: #   hypothesis: true  bibliography: billet_exemple_references.bib ---"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"rédaction-du-document","dir":"Articles","previous_headings":"","what":"Rédaction du document","title":"Procédures du blog","text":"La rédaction peut se faire sur Rstudio en mode source ou en mode visual (en haut à gauche de la fenêtre). Le mode source montre le code tel qu’il est écrit, tandis que le mode visual procède à donner un rendu visuel qui s’approche de celui final (See Get). Le mode visuel intègre un menu qui permet d’accéder aux différentes commandes de mise en forme via une interface ergonomique. Les templates suivants L’ajout de notes de bas de page se fait via la commande suivante sous Quarto [^] et comprends deux manières. Une première où est intégré dans le texte une balise [^] associée à un repère (un numéro) et auquel est ensuite associé une note de bas de page. La seconde est l’intégration directe de la note de bas de page au sein de la balise [^] (Exemple 2). Les citations sont indiqué par le caractère @ suivi de la référence bibliographique du bibtex de l’article à citer. Comme la souffrance va plus loin en psychologie que la psychologie [@ryan1991vanishing] L’auteur pourra se référer à l’aide en ligne Quarto pour des explications complémentaires sur ces deux points.","code":"# Exemple 1 «Mademoiselle Albertine est revenue!»[^1]  [^1]: Elle n'a jamais été perdue.  # Exemple 2  «Mademoiselle Albertine est revenue!»[^Elle n'a jamais été perdue.] Comme la souffrance va plus loin en psychologie que la psychologie [@ryan1991vanishing]  avec le BibteX dans le fichier .bib associé au billet:     @book{ryan1991vanishing,   title={The vanishing subject: early psychology and literary modernism},   author={Ryan, Judith},   year={1991},   publisher={University of Chicago Press} }"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"gestion-des-notes-de-bas-de-page-et-des-références-bibliographiques","dir":"Articles","previous_headings":"","what":"Gestion des notes de bas de page et des références bibliographiques","title":"Procédures du blog","text":"L’ajout de notes de bas de page se fait via la commande suivante sous Quarto [^] et comprends deux manières. Une première où est intégré dans le texte une balise [^] associée à un repère (un numéro) et auquel est ensuite associé une note de bas de page. La seconde est l’intégration directe de la note de bas de page au sein de la balise [^] (Exemple 2).","code":"# Exemple 1 «Mademoiselle Albertine est revenue!»[^1]  [^1]: Elle n'a jamais été perdue.  # Exemple 2  «Mademoiselle Albertine est revenue!»[^Elle n'a jamais été perdue.]"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"gestion-des-références-bibliographiques","dir":"Articles","previous_headings":"","what":"Gestion des références bibliographiques","title":"Procédures du blog","text":"Les citations sont indiqué par le caractère @ suivi de la référence bibliographique du bibtex de l’article à citer. Comme la souffrance va plus loin en psychologie que la psychologie [@ryan1991vanishing] L’auteur pourra se référer à l’aide en ligne Quarto pour des explications complémentaires sur ces deux points.","code":"Comme la souffrance va plus loin en psychologie que la psychologie [@ryan1991vanishing]  avec le BibteX dans le fichier .bib associé au billet:     @book{ryan1991vanishing,   title={The vanishing subject: early psychology and literary modernism},   author={Ryan, Judith},   year={1991},   publisher={University of Chicago Press} }"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"transmission-au-responsable-du-blog-et-circuit-de-relecture","dir":"Articles","previous_headings":"","what":"Transmission au responsable du blog et circuit de relecture","title":"Procédures du blog","text":"La transmission du billet au responsable du blog doit se faire directement sur le repo du blog du Github de l’OFCE à l’aide d’un pull request, et en assignant le responsable (pour plus d’information, voir la page suivante). Ce dernier aura ensuite la charge de l’organisation du circuit de relecture (pour plus d’information, voir la page blog_reviewers). La transmission du billet au responsable du blog s’effectue par un envoi du dossier du billet comprenant l’ensemble des élements nécessaires à sa compilation (le document .qmd, le fichier de références .bib, les images et les données): Dossier du billet en format .qmd L’organisation de la relecture et du versionnage du document se fait sur une branche Github dédiée. L’auteur se verra notifier par mail des évolutions du statut du document, et le cas échéant de l’intégration des remarques et commentaires. Une fois le processus de relecture aboutit, le responsable pourra accepter le pull_request, et introduire la version finalisée du billet sur la branche principale à partir de laquelle le site est généré. PS: Dans le cas où des modifications ultérieures devraient être apportées, l’auteur devra réitérer la même procédure de pull_request que pour la soumission initiale, et ce sera au responsable de s’assurer de leur intégration à la branche principale.","code":"├── Billet.qmd              // Document texte du billet ├── figures/                // Dossier des images utilisées dans le document │   ├── IMG_01.png          // fichier image 1 │   └── ...                 // fichier image ... ├── data/                   // Dossier des dataset associés aux graphiques │   ├── dataset_01.csv      // fichier csv 1 │   └── ...                 // fichier csv ... └── billet_references.bib   // fichier des citations en format .bibtex"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"procédure-principale-via-github","dir":"Articles","previous_headings":"","what":"Procédure principale via Github","title":"Procédures du blog","text":"La transmission du billet au responsable du blog doit se faire directement sur le repo du blog du Github de l’OFCE à l’aide d’un pull request, et en assignant le responsable (pour plus d’information, voir la page suivante). Ce dernier aura ensuite la charge de l’organisation du circuit de relecture (pour plus d’information, voir la page blog_reviewers).","code":""},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"procédure-alternative-et-de-dernier-recours","dir":"Articles","previous_headings":"","what":"Procédure alternative et de dernier recours","title":"Procédures du blog","text":"La transmission du billet au responsable du blog s’effectue par un envoi du dossier du billet comprenant l’ensemble des élements nécessaires à sa compilation (le document .qmd, le fichier de références .bib, les images et les données): Dossier du billet en format .qmd L’organisation de la relecture et du versionnage du document se fait sur une branche Github dédiée. L’auteur se verra notifier par mail des évolutions du statut du document, et le cas échéant de l’intégration des remarques et commentaires. Une fois le processus de relecture aboutit, le responsable pourra accepter le pull_request, et introduire la version finalisée du billet sur la branche principale à partir de laquelle le site est généré. PS: Dans le cas où des modifications ultérieures devraient être apportées, l’auteur devra réitérer la même procédure de pull_request que pour la soumission initiale, et ce sera au responsable de s’assurer de leur intégration à la branche principale.","code":"├── Billet.qmd              // Document texte du billet ├── figures/                // Dossier des images utilisées dans le document │   ├── IMG_01.png          // fichier image 1 │   └── ...                 // fichier image ... ├── data/                   // Dossier des dataset associés aux graphiques │   ├── dataset_01.csv      // fichier csv 1 │   └── ...                 // fichier csv ... └── billet_references.bib   // fichier des citations en format .bibtex"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ofce.github.io/ofce/articles/charte_graphique.html","id":"ggplot2","dir":"Articles","previous_headings":"","what":"ggplot2","title":"Charte graphique","text":"Un graphique ggplot2 par défaut aura le rendu suivant:  L’ajout de la commande theme_XXX permet d’appliquer un thème spécifique au graphe produit (ici theme_classic). Plusieurs sont déjà pré-enregistrés dans ggplot2.  Un thème spécifique à l’OFCE existe dans le package ofce et permet d’appliquer des modifications de forme qui reprenne les élements de la charte graphique définie par ailleurs.","code":"p <- ggplot(iris) +    aes(x = Sepal.Width, y = Sepal.Length, group = Species, color = Species) +   geom_point(size = 2)  p p + theme_classic() p + ofce::theme_ofce()"},{"path":"https://ofce.github.io/ofce/articles/charte_graphique.html","id":"palettes-de-couleur","dir":"Articles","previous_headings":"","what":"Palettes de couleur","title":"Charte graphique","text":"Il est également possible de spécifier manuellement les couleurs dans un graphe à l’aide de la commande scale_XXX_manual 1, en y associant un vecteur de couleur.  Ou en reprenant la palette intégrée au package ofce qui intègre les couleurs définies dans la charte graphique.  Pour le choix des couleurs de pays, il est également possible de passer par une fonction de type scale_manual dans le package ofce scale_color_pays qui intègre directement l’application des codes couleurs de la charte graphique en plus d’offrir des options supplémentaires en termes de labelling. Note: Il est essentiel à ce qu’il existe une colonne dans le dataframe qui contiennent les codes pays au format ISO 3166-1 alpha-3.","code":"p +  ofce::theme_ofce() +    scale_color_manual(values = c(\"darkred\", \"darkblue\", \"darkgreen\")) p +  ofce::theme_ofce() +    scale_color_manual(values = ofce::ofce_palette(n=3)) vec_iso <- c(\"ESP\", \"DEU\", \"FRA\") data <- data.frame(\"value\" = c(1:30),                      \"iso\" = vec_iso) |>    arrange(iso) |>    mutate(date = c(2011:2020, 2011:2020, 2011:2020)) data |>    ggplot()  +   geom_line(aes(x= date, y = value, color = iso )) +   ofce::scale_color_pays(vec_iso,                    lang = \"en\") +   ofce::theme_ofce()"},{"path":"https://ofce.github.io/ofce/articles/charte_graphique.html","id":"documentation-charte-graphique","dir":"Articles","previous_headings":"","what":"Documentation Charte Graphique","title":"Charte graphique","text":"Les références de code couleurs peuvent être consultés dans les documents suivants:  x","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/articles/charte_graphique.html","id":"pour-les-palettes-principales","dir":"Articles","previous_headings":"","what":"Pour les palettes principales","title":"Charte graphique","text":"x","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ofce.github.io/ofce/articles/graphiques.html","id":"ggplot2","dir":"Articles","previous_headings":"","what":"ggplot2","title":"Faire un graphique","text":"La façon préférée de faire un graphique est ggplot2. Elle est la plus flexible, permet d’avoir une source unique, peut être facilement modifiée (uniformisation, traduction, correction, raffinements) et s’intègre parfaitement en html et en pdf. Avec un faible coût peut rendre le graphique interactif (avec plotly ou ggiraph). Un graphique ggplot doit contenir une couche (layer) theme_ofce() et limiter au maximum les définitions de taille (par exemple de police de caractère). Ces définitions doivent être faites de façon globale pour assurer l’homogénéité. Il est important de ne pas définir la taille de la figure, ça risque de produire des images avec des caractères trop petits. Pour changer les dimensions d’un graphique, il faut utiliser1 #| fig-asp : x ou x est le ratio entre la hauteur et la longueur. 0.61 est la valeur par défaut et correspond au nombre d’soit entre 16/9 et 16/10. Pour des graphiques particuliers (par exemple deux graphiques empilés ou une carte) peut mettre 1 (format carré) ou 1.4 quand veut prendre toute la page A4. Le code d’un graphique ggplot2 : 1 Les données sont dans excel – elles pourraient venir de R ou d’ailleurs. La feuille tapp est formattée simplement 2 Utilisez le theme_ofce pour uniformiser l’aspect des graphiques 3 scale_date est important lorsqu’présente des données temporelles, il faut penser à convertir les dates en dates (.Date() ou lubridate::ymd() et consorts), même si les dates ne sont que des années. 4 Le choix des couleurs est tjrs délicat, Paul Malliet est un maître en la matière, uniformiser ses choix de couleurs le long d’un document c’est bien, donner une signification à ses couleurs c’est mieux, quand en plus c’est harmonieux, c’est PM (plus que mieux ou Paul Malliet) 5 Les sources – notez qu’ne met pas de titre au graphique (voir la section références croisées)","code":"#| label: fig-tauxapp #| fig-cap: Taux de taxation apparent sur le patrimoine des ménages #| fig-asp: 0.61 # pas besoin d'en mettre plus, echo, message, warning sont déjà définis  data <- readxl::read_xlsx(   \"analyses/Tables/patrimoine menages.v2.xlsx\", 1  sheet = \"tapp\")  names(data) <- c(\"date\", \"vn\", \"pib\") data <- data |> mutate(date = lubridate::ym(str_c(date, \"-01\"))) |>    pivot_longer(cols  = c(vn, pib)) |>    mutate(name = factor(name, c(\"vn\", \"pib\"),                        c(\"En % de la valeur nette\", \"En % du PIB\")))                         # un ggplot et ses différentes couches ggplot(data) +    aes(x = date, y = value, group = name, col = name, fill = name) +   geom_line(linewidth = 1) +   geom_point(shape = 21, col = \"white\", size = 2) + 2  theme_ofce(legend.position = \"bottom\") +   scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\",  3               date_minor_breaks = \"year\") + 4  PrettyCols::scale_color_pretty_d(name = NULL, palette = \"Summer\") +   PrettyCols::scale_fill_pretty_d(name = NULL, palette = \"Summer\") +   ylab(\"Taux apparent\") + xlab(NULL) +   scae_y_continuous(labels = \\(x) str_c(x, \"%\")) +   labs(caption =          \"La fiscalité sur le patrimoine est composée ici de la taxe foncière payée par les ménages, <br>        des droits d'enregistrement sur les transactions immobilières, des droits de mutation sur les successions et les donations et de l'Impôt sur la Fortune Immobilière (ex-ISF)<br> 5       *Sources* : Insee, calculs OFCE\")"},{"path":"https://ofce.github.io/ofce/articles/graphiques.html","id":"copier-coller","dir":"Articles","previous_headings":"","what":"Copier-coller","title":"Faire un graphique","text":"peut copier coller un graphique (de word, d’excel, d’ailleurs) dans le mode visuel de RStudio. Ça marche mais c’est pas le mieux. Quand copie colle, fait quelque chose qui ressemble à l’option qui suit.","code":""},{"path":"https://ofce.github.io/ofce/articles/graphiques.html","id":"image-au-format-pngjpegjpgsvg","dir":"Articles","previous_headings":"","what":"Image au format png/jpeg/jpg/svg","title":"Faire un graphique","text":"peut enregistrer une image (au format que l’veut, quarto accepte pas mal d’options, dont les plus courantes) et l’insérer dans le texte. Il y deux façon de faire soit en markdown (dans le qmd, comme un lien ou autre chose), soit en utilisant include_graphics. L’intérêt par rapport au copier-coller est que si change le fichier qui contient l’image, à chaque render du document, la bonne (la dernière version) image sera utilisée. Si utilise des images venant de eviews 💀 ou stata 😵, c’est la meilleure méthode. Le répertoire est toujours relatif. Jamais de chemin absolu comme “c:/user/machin/montravail/monrepo/monimage.png” parce que ça ne marchera pas sur un autre ordinateur et en plus github ne copiera pas l’image) et par celui qui contient le .qmd. Il est toujours possible de mettre les images dans un sous dossier. Plus c’est simple et clair, mieux c’est (.e. gardez les noms courts, explicites, pas de majuscules, bien rangés, conservateurs dans l’utilisation des caractères (pas d’accents, pas de blancs, pas de symboles spéciaux). Donc donnees/img.png ou donnees/graphique 1a5.png ne sont pas des bons noms. Mais figures/revenu.png ou figures/pib_par_tete.png sont mieux. Notez la cohérence des id, nom et titre.","code":"[Titre de la figure](rep/fig.png) #| label fig-pib2008_2024 #| fig-cap: PIB entre 2008 et 2024  knitr::include_graphics(\"pib2008_2024.png\")"},{"path":"https://ofce.github.io/ofce/articles/graphiques.html","id":"les-autres-packages","dir":"Articles","previous_headings":"","what":"Les autres packages","title":"Faire un graphique","text":"peut faire des graphiques avec d’autres packages dans R, voire même utiliser base R. Nous ne recommandons pas cette voie, parce qu’elle rend très difficile l’harmonisation des graphiques et les fonctionnalités avancées. Parfois, cependant, il n’y pas d’autres solutions.","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"r-julia-python-ou-stata-ou-eviews","dir":"Articles","previous_headings":"","what":"R, Julia, Python ou Stata ou Eviews","title":"Outils","text":"Pour faire les calculs, traiter les données, produire les graphiques, il faut un logiciel. Le choix est parmi quelques languages qui permettent : la reproductibilité : les traitements sont fait de façon séquentielle par un code ; ce code réalise toutes les opérations, du téléchargement des données brutes jusqu’à la production des analyses. C’est une différence importante par rapport à Excel et Eviews où il n’est pas possible de définir les opérations permettant d’arriver à un résultat. La reproductibilité est assurée par l’utilisation d’un logiciel open source accessible facilement – Stata est un cas limite. La reproductibilité facilite le travail collaboratif (reproduire dans l’équipe), la mise à jour (reproduire dans 6 mois), la détection des erreurs (relecture, reproduction) et la diffusion des bonnes pratiques. la transparence : la transparence repose en partie sur la reproductibilité. Elle consiste à permettre l’accès à l’ensemble des codes, données source1 et de les documenter de façon à rendre possible leur utilisation par quiconque. La transparence repose sur des outils dont github est un des plus importants. Les logiciels open source en font partie. Pour aller un cran plus loin dans la transparence, s’attache à produire des documents exécutables, c’est-à-dire que le résultat final (pdf, site internet, document docx) est produit par un code, si possible exécutable avec des outils open source. Donc, R, Julia, Python sont clairement dans cette catégorie. Stata n’est pas libre, mais largement répandu et donc acceptable. Excel et Eviews ne sont pas utilisables parce qu’ils ne sont pas séquentiels. L’épisode Reihnart-Rogoff découle de ça. Mais il y des trillions d’erreurs qui continuent de se propager à cause des pratiques induites par Excel. R est un logiciel de traitement statistique libre. Il y un grand nombre de packages qui étendent les fonctionnalités de R, certaines modifiant profondément son fonctionnement comme tidyverse, ajoutant un écosystème de production de graphiques comme ggplot2 + ggiraph + ggtext + …, de production de tableaux comme gt ou encore de procédures statistiques comme fixest ou d’interface avec des librairies de calcul comme xgboost. Bien que R ne soit pas un langage très rapide, son interface avec le C/C++ ou la possibilité de faire du calcul parallèle ou d’utiliser des systèmes avancés comme torch permet d’atteindre des performances de calculs maximales (.e. utilisant au mieux le hardware dont dispose). R est multi-platerforme peut l’utiliser sur de nombreux systèmes y compris distants ce qui ouvre la porte au calcul haute performance. Pour installer R (la dernière version est 4.4.1) : sur MacOS : R macOS (r-project.org) sur Windows : Download R-4.4.1 Windows. R-project statistical computing. et Rtools44 Windows (r-project.org) Il est recommandé d’installer les versions fixes (non variables) d’Open Sans Open Sans - Google Fonts et de Fira Code Fira Code - Google Fonts.","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"r","dir":"Articles","previous_headings":"","what":"R","title":"Outils","text":"R est un logiciel de traitement statistique libre. Il y un grand nombre de packages qui étendent les fonctionnalités de R, certaines modifiant profondément son fonctionnement comme tidyverse, ajoutant un écosystème de production de graphiques comme ggplot2 + ggiraph + ggtext + …, de production de tableaux comme gt ou encore de procédures statistiques comme fixest ou d’interface avec des librairies de calcul comme xgboost. Bien que R ne soit pas un langage très rapide, son interface avec le C/C++ ou la possibilité de faire du calcul parallèle ou d’utiliser des systèmes avancés comme torch permet d’atteindre des performances de calculs maximales (.e. utilisant au mieux le hardware dont dispose). R est multi-platerforme peut l’utiliser sur de nombreux systèmes y compris distants ce qui ouvre la porte au calcul haute performance. Pour installer R (la dernière version est 4.4.1) : sur MacOS : R macOS (r-project.org) sur Windows : Download R-4.4.1 Windows. R-project statistical computing. et Rtools44 Windows (r-project.org)","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"quelques-détails","dir":"Articles","previous_headings":"","what":"Quelques détails","title":"Outils","text":"Il est recommandé d’installer les versions fixes (non variables) d’Open Sans Open Sans - Google Fonts et de Fira Code Fira Code - Google Fonts.","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"quarto","dir":"Articles","previous_headings":"","what":"Quarto","title":"Outils","text":"Quarto est un ensemble de commandes, accessibles par le terminal ou à partir de R. Il est développé par RStudio et sert à transformer les .qmd en documents publiables (.docx, .html, .pdf). Quarto est distinct de RStudio – ce qui explique que la version de Quarto n’est pas liée à celle de RStudio. Règle 4 : Il faut utiliser au moins Quarto 1.5 (la version actuelle est 1.5.54). Il y des mises à jour fréquentes, qui sont nécessaires et qui apportent de nombreuses corrections ou des fonctionalités importantes. Quarto besoin d’être installé, mais il n’y pas d’interface quarto à manipuler. Vous pouvez installer dans R le package quarto qui est un lien entre R et Quarto (et permet d’excuter Quarto par des commandes R, comme par exemple quarto::quarto_version() qui vous indique quelle est la version de quarto installée). Installer le package R quarto n’installe pas la dernière version de Quarto.","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"rstudio","dir":"Articles","previous_headings":"","what":"RStudio","title":"Outils","text":"RStudio est l’outil central (pour le moment). C’est un IDE qui permet à la fois d’éditer les textes (.r, .qmd), d’organiser son travail en projets et d’exécuter le code R ou Pyhton. Il comporte de nombreux outils pour simplifier la vie (en compliquant un peu l’interface) en automatisant la publication, la construction des sites, le débugage de code, l’interface entre R et Python, le fonctionnement multiplaterforme, etc…. Pour certaines opérations, il faut utiliser le terminal comme pour la commande quarto publish gh-pages. Règle 5 : Il faut utiliser une version récente (2024.07 au moins, disponible ici). Les mises à jour sont moins fréquentes que pour Quarto. Mettre à jour RStudio induit une mise à jour de Quarto, mais généralement pas la dernière version de Quarto. L’interface de RStudio est assez touffue et peut effrayer au premier abord. C’est pourtant une interface qui été soigneusement élaborée au fil du temps. finit par en comprendre la logique et elle est assez efficace. Il y de nombreux tutoriaux, cheat sheet, manuels. Lisez les, ça aide. RStudio permet d’éditer les documents .qmd avec le mode “visual”. Ce mode s’active facilement et permet de disposer d’une interface moderne pour éditer un texte en markdown avancé. dispose de nombreux outils comme la gestion de la bibliographie, des références croisées, le dictionnaire, le copier coller de graphiques externes et bien sûr l’interface avec le code R, Python, Julia, SQL, etc…","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"git-github-github-com-github-desktop","dir":"Articles","previous_headings":"","what":"git, github, github.com, github desktop","title":"Outils","text":"git est l’outil charnière qui permet le travail collaboratif, le versionnage du code, son archivage mais aussi toute une chaîne d’outils qui permettent par exemple la mise en ligne de sites. Le fonctionnement de git est déroutant (son concepteur Linus Torwald l’voulu impénétrable et réservé aux geeks hard core). Mais c’est un outil puissant qui est incontournable et maintenant enveloppé d’un ensemble d’outils qui en facilitent l’usage, github, github desktop, github.com.  Github est une version particulière de git (rachetée par Microsoft). github.com est un service de cloud associé à github. Il donne des espaces sécurisés sur lesquels peut mettre ses dépôts et définir qui peut y accéder. github.com fournit aussi de nombreux outils de consultation du code, du code à divers moment, d’outils pour merger, gérer les pull resquest, ouvrir des issues, cloner ou forker des dépôts, diffuser des nouvelles à propos d’un dépôt, rechercher des solutions, publier un site, définir de nombreux paramètres de votre dépôt, le fermer, le rendre pivé ou public, l’archiver, le détruire. C’est en fait l’outil central de gestion des dépôt, qui facilite la tâche par rapport au plan initial de Linus Torwald (si vous êtes plus hard core, allez voir gitlab ou l’alterntive open source française adulac). github desktop est une application (que l’installe sur son ordinateur donc) qui sert d’interface pour certaines opérations avec github.com. y fait simplement les commit, les pull, les push, les merge et les pull request. peut aussi examiner les commit, les fichiers modifiés, les modifications des fichiers et annuler un commit. Dans 95% des cas, besoin que de github desktop. Le vocabulaire de git est particulier : un commit est une balise dans votre travail. git vous permet de revenir à un commit passé.  git consiste à avoir une copie en local et une copie sur un serveur, dans le cloud, qui dans notre cas sera systématiquement github.com, qui sert de référence. Un pull consiste à prendre sur le serveur les derniers commit et à les ajouter sur le disque local. C’est un ajout et non un remplacement. Il est toujours possible de revenir en arrière, d’examiner les changements apportés par les commit. La collaboration se fait par les commit qui sont additionnés les uns aux autres. Warning Attention, pour les fichiers non différentiables (Excel, word, rds, données non csv), la fusion des modifications n’est pas possible et devra choisir (résolution des conflits) quelle est la version que l’conserve. C’est pour cela qu’ne peut pas utiliser ces fichiers dans un travail collaboratif sans une grande discipline. Un push est l’opération qui consiste à envoyer sur le serveur les commit qui sont sur votre disque local.  Et il y potentiellement des conflits : c’est lorsque des commit (les vôtres et ceux d’autres) opèrent sur un même endroit dans un même fichier. Il n’est pas possible simplement d’ajouter ces commit les uns aux autres et c’est donc un conflit. Pour sortir d’un conflit, le plus simple est d’utiliser VSCode ou, plus root, d’éditer le fichier mergé avec les conflits pour résoudre à la main les conflits. Dans github desktop, lorsqu’il détecte des conflits, vous avec la possibilité de résoudre les conflits en donnant la priorité à votre version ou celle du serveur. Attention, faire ça efface le travail de quelqu’un.","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"commit-push-pull-conflit","dir":"Articles","previous_headings":"","what":"commit, push, pull, conflit","title":"Outils","text":"Le vocabulaire de git est particulier : un commit est une balise dans votre travail. git vous permet de revenir à un commit passé.  git consiste à avoir une copie en local et une copie sur un serveur, dans le cloud, qui dans notre cas sera systématiquement github.com, qui sert de référence. Un pull consiste à prendre sur le serveur les derniers commit et à les ajouter sur le disque local. C’est un ajout et non un remplacement. Il est toujours possible de revenir en arrière, d’examiner les changements apportés par les commit. La collaboration se fait par les commit qui sont additionnés les uns aux autres. Warning Attention, pour les fichiers non différentiables (Excel, word, rds, données non csv), la fusion des modifications n’est pas possible et devra choisir (résolution des conflits) quelle est la version que l’conserve. C’est pour cela qu’ne peut pas utiliser ces fichiers dans un travail collaboratif sans une grande discipline. Un push est l’opération qui consiste à envoyer sur le serveur les commit qui sont sur votre disque local.  Et il y potentiellement des conflits : c’est lorsque des commit (les vôtres et ceux d’autres) opèrent sur un même endroit dans un même fichier. Il n’est pas possible simplement d’ajouter ces commit les uns aux autres et c’est donc un conflit. Pour sortir d’un conflit, le plus simple est d’utiliser VSCode ou, plus root, d’éditer le fichier mergé avec les conflits pour résoudre à la main les conflits. Dans github desktop, lorsqu’il détecte des conflits, vous avec la possibilité de résoudre les conflits en donnant la priorité à votre version ou celle du serveur. Attention, faire ça efface le travail de quelqu’un.","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"branches","dir":"Articles","previous_headings":"","what":"Branches","title":"Outils","text":"Comme il est expliqué dans la vignette(\"blog\") ou dans la vignette(\"site\"), le travail collaboratif peut demander quelques sécurités supplémentaires. La branche master (ou main pour ceux qui pensent que l’utilisation du mot master fait de vous sans le dire un esclavagiste) est alors protégée. Seul l’administrateur du site peut la modifier ou autoriser les modifications. Chaque intervention sur le contenu doit se faire sur une branche ad hoc créée pour l’occasion. Le process est représenté sur le diagramme. copie tout le contenu dans une branche, le modifie, le teste. Puis demande à l’intégrer dans master à l’administrateur du dépôt par une pull request. L’administrateur peut alors vérifier que les modifications sont OK et les merger dans master. Pourquoi faire comme ça et pas limiter les droits de modifications à seulement quelques fichiers. 1. Parce que c’est plus simple et flexible que de figer des accès fichier par fichier 2. ca permet à chacun de tester et de débugger ses modifs 3. ça permet de vérifier que les modifications ne sont pas allé trop loin. 4. peut blamer c’est-à-dire savoir qui fait quoi.     Ce fichier, à la racine du projet, permet d’exclure de github des fichiers ou des dossiers. C’est très utile, par exemple pour les données ou les informations confidentielles (mot de passe, token) ou encore les nombreux fichiers générés par les programmes ou les générations de site ou le render. Les données ne sont pas les bienvenues sur github : les fichiers (sauf .csv) ne sont pas différentiables, cela génère beaucoup de conflits et le risque d’écraser des données modifiées par quelqu’un d’autre. github n’accepte pas les fichiers supérieurs à 100Mo. peut dépasser cette limite en utilisant git LFS. Malgré tout, il est parfois pratique d’avoir des données dans son github. Il est parfois très pratique de les avoir dans Excel. perd alors toute possibilité de reproductibilité et de transparence, sauf si s’astreint à ne stocker que des fichiers téléchargés sur un site. Mais il est mieux de remplacer le stockage par une instruction qui fait le téléchargement (dans un dossier spécifique, data par exemple, qui peut être mis dans .gitgnore et qui éventuellement ne le télécharge que si le fichier n’est pas présent). peut parfois quand même préférer la solution de données dans le dépôt, sur le serveur quand ne sait pas faire autrement (calculs exclusifs à Excel ☠️, données entrées manuellement). Sinon, il est préférable d’utiliser un drive partagé pour les données. Je recommande l’utilisation du package pins en conjonction avec Azure (encore Microsoft, mais ça marche avec d’autres systèmes). cela permet d’avoir un espace partagé, sur lequel peut définir facilement des droits d’accès et avec un simple token d’avoir tout ce qu’il faut pour ouvrir l’accès. C’est multi-plateforme et cela intègre un versioning intégral qui peut être pratique pour les accès simultanés et très robuste. Un système de cache automatique évite les téléchargements multiples. Cela permet aussi le partage des données entre projets. Il y des cas plus lourds, où veut des accès concurrents à une même base de données. Pas d’autre solution que d’utiliser des outils plus sophistiqués (serveur SQL par exemple). Règle 6 : la façon dont les données sont stockées peut entrainer de nombreux problèmes. Une architecture spécifique doit être réfléchie et communiquée à tous les contributeurs du projet. pins est une solution simple, sûre et rapide à déployer.","code":"flowchart LR A[contenu dans branch master]   A -->|\"<i>clone<i/>\"| B(modifications)   B -->|\"<i>pull request<\/i>\"| D   A -->|\"<b>master est protégé<b/>\"| D[master modifié]"},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"gitignore","dir":"Articles","previous_headings":"","what":".gitignore","title":"Outils","text":"Ce fichier, à la racine du projet, permet d’exclure de github des fichiers ou des dossiers. C’est très utile, par exemple pour les données ou les informations confidentielles (mot de passe, token) ou encore les nombreux fichiers générés par les programmes ou les générations de site ou le render.","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"données","dir":"Articles","previous_headings":"","what":"Données","title":"Outils","text":"Les données ne sont pas les bienvenues sur github : les fichiers (sauf .csv) ne sont pas différentiables, cela génère beaucoup de conflits et le risque d’écraser des données modifiées par quelqu’un d’autre. github n’accepte pas les fichiers supérieurs à 100Mo. peut dépasser cette limite en utilisant git LFS. Malgré tout, il est parfois pratique d’avoir des données dans son github. Il est parfois très pratique de les avoir dans Excel. perd alors toute possibilité de reproductibilité et de transparence, sauf si s’astreint à ne stocker que des fichiers téléchargés sur un site. Mais il est mieux de remplacer le stockage par une instruction qui fait le téléchargement (dans un dossier spécifique, data par exemple, qui peut être mis dans .gitgnore et qui éventuellement ne le télécharge que si le fichier n’est pas présent). peut parfois quand même préférer la solution de données dans le dépôt, sur le serveur quand ne sait pas faire autrement (calculs exclusifs à Excel ☠️, données entrées manuellement). Sinon, il est préférable d’utiliser un drive partagé pour les données. Je recommande l’utilisation du package pins en conjonction avec Azure (encore Microsoft, mais ça marche avec d’autres systèmes). cela permet d’avoir un espace partagé, sur lequel peut définir facilement des droits d’accès et avec un simple token d’avoir tout ce qu’il faut pour ouvrir l’accès. C’est multi-plateforme et cela intègre un versioning intégral qui peut être pratique pour les accès simultanés et très robuste. Un système de cache automatique évite les téléchargements multiples. Cela permet aussi le partage des données entre projets. Il y des cas plus lourds, où veut des accès concurrents à une même base de données. Pas d’autre solution que d’utiliser des outils plus sophistiqués (serveur SQL par exemple). Règle 6 : la façon dont les données sont stockées peut entrainer de nombreux problèmes. Une architecture spécifique doit être réfléchie et communiquée à tous les contributeurs du projet. pins est une solution simple, sûre et rapide à déployer.","code":""},{"path":"https://ofce.github.io/ofce/articles/outils.html","id":"vscode-et-positron","dir":"Articles","previous_headings":"","what":"VSCode et Positron","title":"Outils","text":"VSCode est une alternative à RStudio. Développé par Microsoft (et oui, Microsoft est partout et ne fait pas que Word, Excel et Powerpoint), il est en train de s’imposer comme standard dans le domaine des usages avancés. VSCode est organisé autour d’un éditeur de texte (de code en fait) repose sur une structure très (un peu trop) ouverte. Il peut être étendu facilement et articulé avec de nombreux outils : formateurs, linteurs, highlighters, debogguers, compilateurs, accès distants, dockers, correcteurs, IA. La liste est presque infinie et en tout cas grossit chaque jour. C’est aussi un outil assez léger, rapide, sûr et très fonctionnel. Il dispose d’un module d’extension github très bien fait et très facile à utiliser. Avec gitlens peut par ailleurs très simplement examiner son code et connaître toutes les modifications apportées au cours des commit. C’est très utile pour s’y retrouver et bénéficier de la puissance de git instantanément. pusher ou commiter se fait avec une grande sécurité et un minimum de manipulation (généralement 1 click). Il est possible d’éditer les documents .qmd en mode visuel dans VSCode et avec son module github, le travail y est plus facile que dans RStudio. Pour ceux qui ne font que la review et l’editing, c’est une excellente alternative, avec une interface moins riche (moins confuse surtout) que celle de RStudio. Positron est la fusion entre RStudio et VSCode. C’est encore une version en développement (la pre release date de juin 2024), mais elle fonctionne à peu près. Il n’est pas recommandé de l’utiliser pour le moment pour des projets, sauf si vous avez le goût de l’aventure et un peu de patience.","code":""},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"quelques-conseils-décriture-et-de-format","dir":"Articles","previous_headings":"","what":"Quelques conseils d’écriture et de format","title":"Premiers pas avec Quarto","text":"Tout commence par un .qmd. Il doit être placé dans un sous dossier du projet général, pour être rangé de façon compréhensible par tout le monde. Demandez à votre administratrice de projet les règles qu’elle souhaite voir appliquées. Un exemple de projet est ci-dessous. Il ne respecte pas toutes les règles recommandées, mais c’est souvent comme ça. Notez les fichiers importants : _quarto.yml : dans lequel sont spécifiés les options principales et communes ainsi que les menus et la structure du site index.qmd qui est la page de démarrage du site et qui doit toujours être à la racine du projet et s’appeler index.qmd rinit.r qui contient des options par défaut pour les chunks R (c’est important pour le rendu des graphiques) README.md qui apparaît sur la première page du projet sur github.com _extensions qui contient tous les templates quarto, il faut absolument que ce dossier soit présent (et il ne faut pas y toucher). Donnez un nom simple (court, explicite, pas de majuscules, pas de caractères spéciaux), pour que le contenu soit clair, mais aussi qu’il soit facile à retaper quelque part si nécessaire. Les noms à rallonge sont donc à proscrire. Tâchez aussi d’éviter la multiplication des versions dans le dossier (dont une seule est ok), si vous avez des déchets, mettez dans un sous dossier spécifique (moi je l’appelle rkiv) de façon à garder les vieux morceaux d’essais. Le .qmd est très simple, l’entête yaml n’besoin que d’un champ : le titre. L’auteur est aussi utile, mais pas obligatoire. Pas besoin d’ajouter un format (ils sont communs au site et défini dans _quarto.yml), ni d’options spécifiques (définies aussi ailleurs). Eventuellement, peut ajouter des éléments spécifiques au texte comme le champ date ou keyword ou bibliography. Notez qu’il n’y pas de section de niveau header 1. Ce n’est pas possible parce qu’il y un titre et que le titre est considéré comme la section header 1 : une alternative au titre dans le yml est une section de niveau header 1 ou simple #. S’il n’y pas d’auteur ou d’autre champ, l’ensemble yml peut être omis avec simplement le header 1. Dernier petit détail, il faut sourcer le fichier rinit.r. Ce fichier définit les options par défaut des chunks et permet d’avoir les bonnes polices de caractère dans la bonne taille pour tous les graphiques. La fonction ofce::init_qmd() simplifie le process et toruve ce fichier même s’il est bien caché. Il faut le mettre au début et à part pour que ces options s’appliquent aux chunks suivants. Il est toujours possible de modifier le rinit.r de votre projet pour des variables globales, comme la taille de la police de tous les graphiques, et des fonctions disponibles dans chaque .qmd. Si vos graphiques sont moches, si les polices de caractère sont toutes petites ou trop grandes, avant d’appeler à l’aide, vérifiez 1. sur rinit.r est bien sourcé 2. que vous n’avez pas un fig-width ou un fig-heigth quelque part dans le chunk ou dans le yml. Gardez vos yml les plus simples possibles, c’est le moyen d’assurer l’homogénéité des documents sur le site. Quarto.org est une excellente source d’informations et d’aide sur l’écriture en markdown et la variante particulière que nous utilisons ici. La section “Authoring” est à avoir lu au moins une fois. Grace à quarto et un filtre développé par Romain Lesur de l’INSEE, les règles typographiques standards au français sont appliquées automatiquement. Par exemple les guillemets sont mis conformément à la pratique en France «…» à partir du caractère tapé directement (“). Les espaces avant les signes de ponctuation ( : ;) sont remplacés par des demi cadratins et les espaces séparateurs des milliers sont remplacés par des espaces insécables. Pas besoin donc de s’embêter avec ça. Juste, pensez à mettre les espaces avant”:“. Pour un document en anglais, il suffit de rajouter dans le yml la langue anglaise pour que la typographie correspondante soit appliquée. Les principaux champs (date, auteur, tableau, figure, graphique) sont aussi traduits. Les références croisées demandent un peu de soin, mais permettent de produire des documents plus riches dans lesquels : La numérotation des tableaux et figures, mais aussi tout autre type de documents (un encadré par ex.) est faite automatiquement. La mise en page est automatisée (avec quelques gains en html), les mots récurrents sont traduits automatiquement. peut appeler la référence croisée dans le texte. En html, cela créé un lien qui permet de naviguer directement vers la référence croisée. peut générer des tables des tableaux et des figures. Le secret d’une référence croisée c’est l’instruction (le tag) #| label: xxx que l’met en tête d’un chunk. “xxx” est l’id du document. Il définit le type (fig pour un graphique ; tbl pour un tableau ; tip pour un encadré ; eq pour une équation) et après le tiret le nom (sans espace ni tiret) qui sera appelé dans le texte par la séquence @fig-id ou @tbl-id (voir quarto cross references pour plus de détails). définit également le titre du graphique qui est donc identifié pour être mis en page, utilisé par ailleurs (par exemple la table des figures) et agrémenté des mots récurrents (par exemple tableau pour un tableau, donc ne met pas dans le titre tableau ou son numéro). Le titre est déini par le tag #| fig-caption: xxx Pour un graphique (ne met pas le numéro du graphique dans le titre, c’est fait automatiquement) : Si c’est un graphique produit autrement que par R, la syntaxe standard de markdown fonctionne aussi de cette façon (en changeant image en fonction du contexte !): Pour un tableau (ne met pas le numéro du tableau dans le titre, c’est fait automatiquement) : Pour un encadré, c’est un peu plus compliqué (pour le moment). tip est le hack pour la catégorie, .callout-tip pour le style. Le champ collapse permet de replier l’encadré par défaut et l’option \"false\" (notez les guillemets et les minuscules) permet de le déplier par défaut. peut être dans le cas où le contenu n’est pas une image ou un tableau (par exemple une composition d’images, un tableau sous forme d’un png). Dans ce cas quarto protestera. C’est dans la documentation de Quarto et cela prend la forme suivante (l’utilisation du tag fig implique une figure, la première ligne est le contenu, la dernière est le titre, les autres lignes sont affichées comme CONTENT) : Par ailleurs, peut définir d’autres catégories de références croisées si nécessaire, par exemple en distinguant les cartes des figures. Les tabsets sont un moyen commode de proposer des options pour un tableau, un graphique sans entrer dans des complications trop grandes d’interactivité. Il est facile d’insérer une bibliographie. La première chose est d’indiquer un (ou plusieurs) fichier .bib à quarto : Le fichier references.bib doit être à la racine du projet et contient dans la syntaxe bibtex les références. Pour entrer une référence, avec RStudio, il y plusieurs façon de faire. Dans RStudio, en mode visuel, fait insérer une citation. Plusieurs sources sont possibles : Zotero, un DOI, une recherche sur Crossref, etc… Directement en copiant dans le .bib les références (peut ainsi utiliser la biblio d’un autre document). Les appels de références sont alors simplement fait en utilisant @angel2021 où angel2021 est l’id de la référence. L’appel de référence, la biblio sera insérée et formattée automatiquement. Les appels de référence peuvent se mettre également en note de bas de page ou dans un tableau en syntaxe markdown.","code":"legislatives2024     _quarto.yml     index.qmd     about.qmd     rinit.r     README.md     .gitignore         _extensions/             ofce/             ...     programmes/         rn.qmd         nfp.qmd         Comparatif programmes législatives 2024.xlsx         ...     analyses/         transition.qmd         tissu_productif.qmd         ...         Tables/             Tableau_retraite.xlsx             Spreads.xlsx             spread.rds             ... --- title: Mon texte en qmd author: Georgette --- ```{r, include=FALSE} ofce::init_qmd() ``` ## section 1 blabla ## section 2 blabla --- title: English Version of the Document author: William  lang: en --- ``` {{r}} #| label: fig-id #| fig-cap: Le titre du graphique #| fig-asp: 0.8 ``` ![Le titre de l'image](limage.png){#fig-image}  This is illustrated well by @fig-image. ``` {{r}} #| label: tbl-id #| tbl-cap: Le titre du tableau ``` ::: {#tip-id .callout-tip collapse=\"true\"} ## titre  l'encadré texte de l'encadré ::: ::: {#fig-example}  CONTENT  Caption  ::: ::: {.panel-tabset} ## tab 1  du code R, du texte, des images  ## tab2  du code R, du texte, des images ::: --- title: Mon titre bibliography: references.bib ---"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"au-commencement","dir":"Articles","previous_headings":"","what":"Au commencement","title":"Premiers pas avec Quarto","text":"Tout commence par un .qmd. Il doit être placé dans un sous dossier du projet général, pour être rangé de façon compréhensible par tout le monde. Demandez à votre administratrice de projet les règles qu’elle souhaite voir appliquées. Un exemple de projet est ci-dessous. Il ne respecte pas toutes les règles recommandées, mais c’est souvent comme ça. Notez les fichiers importants : _quarto.yml : dans lequel sont spécifiés les options principales et communes ainsi que les menus et la structure du site index.qmd qui est la page de démarrage du site et qui doit toujours être à la racine du projet et s’appeler index.qmd rinit.r qui contient des options par défaut pour les chunks R (c’est important pour le rendu des graphiques) README.md qui apparaît sur la première page du projet sur github.com _extensions qui contient tous les templates quarto, il faut absolument que ce dossier soit présent (et il ne faut pas y toucher). Donnez un nom simple (court, explicite, pas de majuscules, pas de caractères spéciaux), pour que le contenu soit clair, mais aussi qu’il soit facile à retaper quelque part si nécessaire. Les noms à rallonge sont donc à proscrire. Tâchez aussi d’éviter la multiplication des versions dans le dossier (dont une seule est ok), si vous avez des déchets, mettez dans un sous dossier spécifique (moi je l’appelle rkiv) de façon à garder les vieux morceaux d’essais. Le .qmd est très simple, l’entête yaml n’besoin que d’un champ : le titre. L’auteur est aussi utile, mais pas obligatoire. Pas besoin d’ajouter un format (ils sont communs au site et défini dans _quarto.yml), ni d’options spécifiques (définies aussi ailleurs). Eventuellement, peut ajouter des éléments spécifiques au texte comme le champ date ou keyword ou bibliography. Notez qu’il n’y pas de section de niveau header 1. Ce n’est pas possible parce qu’il y un titre et que le titre est considéré comme la section header 1 : une alternative au titre dans le yml est une section de niveau header 1 ou simple #. S’il n’y pas d’auteur ou d’autre champ, l’ensemble yml peut être omis avec simplement le header 1. Dernier petit détail, il faut sourcer le fichier rinit.r. Ce fichier définit les options par défaut des chunks et permet d’avoir les bonnes polices de caractère dans la bonne taille pour tous les graphiques. La fonction ofce::init_qmd() simplifie le process et toruve ce fichier même s’il est bien caché. Il faut le mettre au début et à part pour que ces options s’appliquent aux chunks suivants. Il est toujours possible de modifier le rinit.r de votre projet pour des variables globales, comme la taille de la police de tous les graphiques, et des fonctions disponibles dans chaque .qmd. Si vos graphiques sont moches, si les polices de caractère sont toutes petites ou trop grandes, avant d’appeler à l’aide, vérifiez 1. sur rinit.r est bien sourcé 2. que vous n’avez pas un fig-width ou un fig-heigth quelque part dans le chunk ou dans le yml. Gardez vos yml les plus simples possibles, c’est le moyen d’assurer l’homogénéité des documents sur le site. Quarto.org est une excellente source d’informations et d’aide sur l’écriture en markdown et la variante particulière que nous utilisons ici. La section “Authoring” est à avoir lu au moins une fois.","code":"legislatives2024     _quarto.yml     index.qmd     about.qmd     rinit.r     README.md     .gitignore         _extensions/             ofce/             ...     programmes/         rn.qmd         nfp.qmd         Comparatif programmes législatives 2024.xlsx         ...     analyses/         transition.qmd         tissu_productif.qmd         ...         Tables/             Tableau_retraite.xlsx             Spreads.xlsx             spread.rds             ... --- title: Mon texte en qmd author: Georgette --- ```{r, include=FALSE} ofce::init_qmd() ``` ## section 1 blabla ## section 2 blabla"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"les-règles-typographiques","dir":"Articles","previous_headings":"","what":"les règles typographiques","title":"Premiers pas avec Quarto","text":"Grace à quarto et un filtre développé par Romain Lesur de l’INSEE, les règles typographiques standards au français sont appliquées automatiquement. Par exemple les guillemets sont mis conformément à la pratique en France «…» à partir du caractère tapé directement (“). Les espaces avant les signes de ponctuation ( : ;) sont remplacés par des demi cadratins et les espaces séparateurs des milliers sont remplacés par des espaces insécables. Pas besoin donc de s’embêter avec ça. Juste, pensez à mettre les espaces avant”:“. Pour un document en anglais, il suffit de rajouter dans le yml la langue anglaise pour que la typographie correspondante soit appliquée. Les principaux champs (date, auteur, tableau, figure, graphique) sont aussi traduits.","code":"--- title: English Version of the Document author: William  lang: en ---"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"les-références-croisées","dir":"Articles","previous_headings":"","what":"Les références croisées","title":"Premiers pas avec Quarto","text":"Les références croisées demandent un peu de soin, mais permettent de produire des documents plus riches dans lesquels : La numérotation des tableaux et figures, mais aussi tout autre type de documents (un encadré par ex.) est faite automatiquement. La mise en page est automatisée (avec quelques gains en html), les mots récurrents sont traduits automatiquement. peut appeler la référence croisée dans le texte. En html, cela créé un lien qui permet de naviguer directement vers la référence croisée. peut générer des tables des tableaux et des figures. Le secret d’une référence croisée c’est l’instruction (le tag) #| label: xxx que l’met en tête d’un chunk. “xxx” est l’id du document. Il définit le type (fig pour un graphique ; tbl pour un tableau ; tip pour un encadré ; eq pour une équation) et après le tiret le nom (sans espace ni tiret) qui sera appelé dans le texte par la séquence @fig-id ou @tbl-id (voir quarto cross references pour plus de détails). définit également le titre du graphique qui est donc identifié pour être mis en page, utilisé par ailleurs (par exemple la table des figures) et agrémenté des mots récurrents (par exemple tableau pour un tableau, donc ne met pas dans le titre tableau ou son numéro). Le titre est déini par le tag #| fig-caption: xxx Pour un graphique (ne met pas le numéro du graphique dans le titre, c’est fait automatiquement) : Si c’est un graphique produit autrement que par R, la syntaxe standard de markdown fonctionne aussi de cette façon (en changeant image en fonction du contexte !): Pour un tableau (ne met pas le numéro du tableau dans le titre, c’est fait automatiquement) : Pour un encadré, c’est un peu plus compliqué (pour le moment). tip est le hack pour la catégorie, .callout-tip pour le style. Le champ collapse permet de replier l’encadré par défaut et l’option \"false\" (notez les guillemets et les minuscules) permet de le déplier par défaut. peut être dans le cas où le contenu n’est pas une image ou un tableau (par exemple une composition d’images, un tableau sous forme d’un png). Dans ce cas quarto protestera. C’est dans la documentation de Quarto et cela prend la forme suivante (l’utilisation du tag fig implique une figure, la première ligne est le contenu, la dernière est le titre, les autres lignes sont affichées comme CONTENT) : Par ailleurs, peut définir d’autres catégories de références croisées si nécessaire, par exemple en distinguant les cartes des figures.","code":"``` {{r}} #| label: fig-id #| fig-cap: Le titre du graphique #| fig-asp: 0.8 ``` ![Le titre de l'image](limage.png){#fig-image}  This is illustrated well by @fig-image. ``` {{r}} #| label: tbl-id #| tbl-cap: Le titre du tableau ``` ::: {#tip-id .callout-tip collapse=\"true\"} ## titre  l'encadré texte de l'encadré ::: ::: {#fig-example}  CONTENT  Caption  :::"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"graphiques","dir":"Articles","previous_headings":"","what":"graphiques","title":"Premiers pas avec Quarto","text":"Pour un graphique (ne met pas le numéro du graphique dans le titre, c’est fait automatiquement) : Si c’est un graphique produit autrement que par R, la syntaxe standard de markdown fonctionne aussi de cette façon (en changeant image en fonction du contexte !):","code":"``` {{r}} #| label: fig-id #| fig-cap: Le titre du graphique #| fig-asp: 0.8 ``` ![Le titre de l'image](limage.png){#fig-image}  This is illustrated well by @fig-image."},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"tableaux","dir":"Articles","previous_headings":"","what":"tableaux","title":"Premiers pas avec Quarto","text":"Pour un tableau (ne met pas le numéro du tableau dans le titre, c’est fait automatiquement) :","code":"``` {{r}} #| label: tbl-id #| tbl-cap: Le titre du tableau ```"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"encadrés","dir":"Articles","previous_headings":"","what":"encadrés","title":"Premiers pas avec Quarto","text":"Pour un encadré, c’est un peu plus compliqué (pour le moment). tip est le hack pour la catégorie, .callout-tip pour le style. Le champ collapse permet de replier l’encadré par défaut et l’option \"false\" (notez les guillemets et les minuscules) permet de le déplier par défaut.","code":"::: {#tip-id .callout-tip collapse=\"true\"} ## titre  l'encadré texte de l'encadré :::"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"un-cas-plus-général","dir":"Articles","previous_headings":"","what":"un cas plus général","title":"Premiers pas avec Quarto","text":"peut être dans le cas où le contenu n’est pas une image ou un tableau (par exemple une composition d’images, un tableau sous forme d’un png). Dans ce cas quarto protestera. C’est dans la documentation de Quarto et cela prend la forme suivante (l’utilisation du tag fig implique une figure, la première ligne est le contenu, la dernière est le titre, les autres lignes sont affichées comme CONTENT) : Par ailleurs, peut définir d’autres catégories de références croisées si nécessaire, par exemple en distinguant les cartes des figures.","code":"::: {#fig-example}  CONTENT  Caption  :::"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"les-tabsets","dir":"Articles","previous_headings":"","what":"Les tabsets","title":"Premiers pas avec Quarto","text":"Les tabsets sont un moyen commode de proposer des options pour un tableau, un graphique sans entrer dans des complications trop grandes d’interactivité.","code":"::: {.panel-tabset} ## tab 1  du code R, du texte, des images  ## tab2  du code R, du texte, des images :::"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"la-bibliographie","dir":"Articles","previous_headings":"","what":"La bibliographie","title":"Premiers pas avec Quarto","text":"Il est facile d’insérer une bibliographie. La première chose est d’indiquer un (ou plusieurs) fichier .bib à quarto : Le fichier references.bib doit être à la racine du projet et contient dans la syntaxe bibtex les références. Pour entrer une référence, avec RStudio, il y plusieurs façon de faire. Dans RStudio, en mode visuel, fait insérer une citation. Plusieurs sources sont possibles : Zotero, un DOI, une recherche sur Crossref, etc… Directement en copiant dans le .bib les références (peut ainsi utiliser la biblio d’un autre document). Les appels de références sont alors simplement fait en utilisant @angel2021 où angel2021 est l’id de la référence. L’appel de référence, la biblio sera insérée et formattée automatiquement. Les appels de référence peuvent se mettre également en note de bas de page ou dans un tableau en syntaxe markdown.","code":"--- title: Mon titre bibliography: references.bib ---"},{"path":"https://ofce.github.io/ofce/articles/site.html","id":"comment-contribuer-pull-request","dir":"Articles","previous_headings":"","what":"Comment contribuer : pull request","title":"Des sites dédiés","text":"Pour contribuer nous vous demandons de suivre une procédure stricte. Elle peut paraître compliquée, mais elle est fluide et permet d’éviter des bêtises. En effet, la branche master et la branche du site (gh-pages) sont protégées : il faut des droits administrateur pour les modifier. Cela évite les mauvaises manipulations et sécurise le site. Il est possible d’utiliser plusieurs outils pour travailler. Le premier combo est RStudio, combiné à github desktop et github.com. Une alternative est VSCode qui regroupe l’éditeur quarto et l’interface github dans un même logiciel. La vignette(\"outils\") détaille les configurations et les instructions d’installation. créer une branche à partir de master. C’est simple avec github desktop (menu branch/new branch). Cette branche est modifiable par celui qui l’créée (mais aussi par d’autres, s’il le souhaite, ce qui peut permettre la mise au point). Elle contient une copie de master donc vous pouvez tout modifier dedans. Cependant, afin d’éviter le chaos, il est préférable de modifier le contenu pour lequel est contributeur et s’en tenir à ça. Si vous voulez corriger le contenu d’autres auteurs ou intervenir sur la structure générale c’est bien sûr possible. Si vous continuez sur votre branche, elle est sans doute en retard. Vous pouvez la mettre à jour à partir de master (menu branch/Update master dans github desktop) afin d’éviter de vous trouver trop en retard et Vous pouvez aussi faire un merge de master dans votre branche. Ne pas le faire va multiplier les conflits et rendre l’inclusion de vos modifications pénibles. Modifier, ajouter, bricoler et… tester. Dans RStudio vous pouvez à tout moment faire un render du site (bouton render). Si ça ne marche pas dans votre branche, il y peu de chance que ça s’arrange tout seul en suite. Vous pouvez toujours appeler à l’aide quand ça ne marche pas. Vérifiez que les liens sont bons, que la mise en page vous convient, etc. chaque fois que vous avez franchi une étape dans votre travail, faites un commit. Pas besoin nécessairement de le pusher (c’est mieux pour sauvegarder ou partager avec quelqu’un ce qu’il y dans votre branche). Un commit c’est une sauvegarde. Avant de lancer une nouvelle tâche, faites le commit, ça pourra toujours servir et il n’y pas d’excès de commit. Quand vous êtes satisfait, vous faites une pull request (facile dans github desktop, il le propose une fois pushé votre dernier commit). La pull request n’est possible que lorsque tous vos changements sont commités et que votre branche est pushée. La possibilité de le faire apparaît dans la fenêtre principale de github desktop lorsque les conditions sont réunies. Si vous êtes consciencieux, vous pouvez vérifier que votre branche est compatible avec master et faire le merge. Passez par le menu branch/update master avant de faire la pull request. Cela permet de vérifier (et de résoudre) les éventuels conflits qui existeraient entre votre branche la branche master. Une fois la pull request envoyée, elle va être validée par les administrateurs (et les conflits résolus si vous ne l’avez pas fait). Au moment de la pull request vous pouvez assigner un reviewer. Une fois validée, votre branche est intégrée (mergée) à la branche master ce qui permettra de mettre à jour le site en ligne et de détruire votre branche. (Pourquoi la détruire ? 1. votre travail est intégré dans master donc il est en sécurité, 2. si vous refaites des modifications, il faut partir de la dernière version disponible, .e. master et non pas votre branche qui va devenir très en retard).","code":""},{"path":"https://ofce.github.io/ofce/articles/site.html","id":"comment-faire","dir":"Articles","previous_headings":"","what":"Comment faire ?","title":"Des sites dédiés","text":"créer une branche à partir de master. C’est simple avec github desktop (menu branch/new branch). Cette branche est modifiable par celui qui l’créée (mais aussi par d’autres, s’il le souhaite, ce qui peut permettre la mise au point). Elle contient une copie de master donc vous pouvez tout modifier dedans. Cependant, afin d’éviter le chaos, il est préférable de modifier le contenu pour lequel est contributeur et s’en tenir à ça. Si vous voulez corriger le contenu d’autres auteurs ou intervenir sur la structure générale c’est bien sûr possible. Si vous continuez sur votre branche, elle est sans doute en retard. Vous pouvez la mettre à jour à partir de master (menu branch/Update master dans github desktop) afin d’éviter de vous trouver trop en retard et Vous pouvez aussi faire un merge de master dans votre branche. Ne pas le faire va multiplier les conflits et rendre l’inclusion de vos modifications pénibles. Modifier, ajouter, bricoler et… tester. Dans RStudio vous pouvez à tout moment faire un render du site (bouton render). Si ça ne marche pas dans votre branche, il y peu de chance que ça s’arrange tout seul en suite. Vous pouvez toujours appeler à l’aide quand ça ne marche pas. Vérifiez que les liens sont bons, que la mise en page vous convient, etc. chaque fois que vous avez franchi une étape dans votre travail, faites un commit. Pas besoin nécessairement de le pusher (c’est mieux pour sauvegarder ou partager avec quelqu’un ce qu’il y dans votre branche). Un commit c’est une sauvegarde. Avant de lancer une nouvelle tâche, faites le commit, ça pourra toujours servir et il n’y pas d’excès de commit. Quand vous êtes satisfait, vous faites une pull request (facile dans github desktop, il le propose une fois pushé votre dernier commit). La pull request n’est possible que lorsque tous vos changements sont commités et que votre branche est pushée. La possibilité de le faire apparaît dans la fenêtre principale de github desktop lorsque les conditions sont réunies. Si vous êtes consciencieux, vous pouvez vérifier que votre branche est compatible avec master et faire le merge. Passez par le menu branch/update master avant de faire la pull request. Cela permet de vérifier (et de résoudre) les éventuels conflits qui existeraient entre votre branche la branche master. Une fois la pull request envoyée, elle va être validée par les administrateurs (et les conflits résolus si vous ne l’avez pas fait). Au moment de la pull request vous pouvez assigner un reviewer. Une fois validée, votre branche est intégrée (mergée) à la branche master ce qui permettra de mettre à jour le site en ligne et de détruire votre branche. (Pourquoi la détruire ? 1. votre travail est intégré dans master donc il est en sécurité, 2. si vous refaites des modifications, il faut partir de la dernière version disponible, .e. master et non pas votre branche qui va devenir très en retard).","code":""},{"path":"https://ofce.github.io/ofce/articles/site.html","id":"quelques-conseils-aux-administrateurs-de-projets","dir":"Articles","previous_headings":"","what":"Quelques conseils aux administrateurs de projets","title":"Des sites dédiés","text":"Définissez à l’avance la structure du projet et communiquez là aux auteurs. Parfois, envie de changer en cours de route, c’est toujours possible, mais source de confusion et potentiellement d’erreurs. Protégez la branche master et définissez ceux qui ont droit de la modifier. Cela évitera aussi de nombreuses erreurs. Protégez aussi gh-pages. Ces opérations se réalisent très simplement depuis github.com. Si votre dépôt est sur OFCE, il sera lisible par les membres de l’OFCE et les admins d’OFCE pourront intervenir dessus. Si il est dans votre espace personnel, vous êtes seul maître à bord et donc sans assistance possible. Au démarrage du projet, il y quelques configurations à faire. Rien de compliqué, mais c’est dispersé dans de nombreux écrans. Une fois configuré, c’est assez simple à faire fonctionner. Ne bricolez pas trop le _quarto.yml. Certaines options assurent l’homogénéité des sites entre eux. Pensez faire aussi ofce::quarto_setup() dans R pour s’assurer d’avoir la dernière version des templates. Attention, il faut quand même modifier le _quarto.yml puisqu’il contient la structure des menus et l’architecture du site, ainsi que les twitter cards ou le numéro google analytics. N’hésitez pas à la faire la police (qmd dans les bons dossiers, yml nettoyés, chasse aux chemins absolus. force, les déviances devraient se réduire. Répondez rapidement aux pull request. est souvent impatient de voir son travail déployé.","code":""},{"path":"https://ofce.github.io/ofce/articles/tableaux.html","id":"comment-faire-un-tableau","dir":"Articles","previous_headings":"","what":"Comment faire un tableau","title":"Recommandations pour les tableaux OFCE","text":"Pour faire un tableau, nous conseillons vivement d’utiliser gt. Le principe est assez simple, un peu comme dans ggplot2 ajoute des couches qui petit à petit construisent le tableau. Ca peut paraître fastidieux, mais ça ne l’est pas tant que ça : c’est ce qu’fait dans excel ou word pour mettre en forme un tableau. L’intérêt de gt c’est de dissocier la phase données de la phase mise en page. Le manuel de gt est d’une lecture simple, avec plein d’exemples : Easily Create Presentation-Ready Display Tables • gt (rstudio.com) Le code d’un gt est du genre : Le pire du pire est de mettre le tableau comme une copie d’écran d’excel ou d’un pdf. C’est à banir. Moins pire est d’utiliser la syntaxe markdown. Ca peut paraître plus simple mais c’est rapidement dépassé et permet très peu de présentation avancée.","code":"library(gt)  # le fichier excel est préformaté, un onglet contient les données  # prêtes à l'utilisation readxl::read_xlsx(   \"analyses/Tables/patrimoine menages.v2.xlsx\",    sheet = \"masspat\") |>    # on filtre les lignes les colonnes dont on a besoin   filter(tranche %in% c(\"0-90%\", \"90-99%\", \"99-100%\", \"Total\")) |>    select(-revraw) |>    # on les met dans l'ordre souhaité,    # plus le tibble est comme le tableau final le mieux c'est   relocate(tranche, revdisp) |>    # pour avoir les chiffres par tête on fait un dernier mutate   mutate(across(c(revdisp, tot, fi, pro, imm, autre), ~.x/30.5*1000/men)) |>   select(-men) |>    mutate(tranche = str_replace(tranche, \"Total\", \"Moyenne\")) |>   # gt sert à fabriquer le tableau mis en forme   # a partir de là, plus de manip possible    gt() |>    # le spanner regroupe des colonnes sous un même label    tab_spanner(columns = -c(tranche, revdisp), label  = \"Patrimoine\") |>    # on a gardé les noms simples dans les données, on les traduit en clair ici   # on privilégie cette approche : qui permet de corriger dans le qmd le texte   # qui permet de traduire   # qui permet d'uniformiser les labels si on a plusieurs tableaux   cols_label(tranche = \"\", revdisp = \"Revenu disponible\",               tot = \"Total\", fi = \"Financier\",               pro  = \"Professionnel\", imm = \"Immobilier\",               autre = \"Autres\") |>    # idem, on passe des nombres, on les formatte ici   fmt_number(columns = -tranche, scale = 1,              n_sigfig = 3,  decimals = 0, sep_mark = \" \" ) |>    # on met en gras en en darkred une ligne -- notez la syntaxe élégante de gt   tab_style(style = cell_text(weight = \"bold\", color = \"darkred\"),              locations = cells_body(rows = tranche == \"Moyenne\")) |>    # indispensable, les sources. md() permet d'avoir un texte enrichi qui comprend markdown   # <br> retourne à la ligne dans la note   # on met les notes ici, ca permet corrections, uniformisation et traduction   tab_source_note(     md(       \"Revenu disponible brut et actifs bruts (hors passif) par ménage, en euros, année 2022       <br>Calculs réalisés à partir de l'enquête patrimoine des ménages 2017-2018 de l'Insee croisés avec les comptes nationaux du patrimoine de l'Insee de 2022       <br>*Sources* : Insee, calculs OFCE\"))"},{"path":"https://ofce.github.io/ofce/articles/tableaux.html","id":"dautres-solutions-pour-les-tableaux","dir":"Articles","previous_headings":"","what":"D’autres solutions pour les tableaux","title":"Recommandations pour les tableaux OFCE","text":"Le pire du pire est de mettre le tableau comme une copie d’écran d’excel ou d’un pdf. C’est à banir. Moins pire est d’utiliser la syntaxe markdown. Ca peut paraître plus simple mais c’est rapidement dépassé et permet très peu de présentation avancée.","code":""},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"règles-dor","dir":"Articles","previous_headings":"","what":"Règles d’or","title":"Séries temporelles","text":"Règle 1 : utilise theme_ofce() ! Règle 2 : Les dates sont au format <date> même lorsque la fréquence est annuelle. Règle 3 : utilise scale_x_date(date_breaks = \"5 years\", date_minor_breaks = \"1 year\", guide = \"minor_ticks\") en définissant date_breaks à la fréquence souhaitée (en évitant trop de dates) et date_minor_breaks à une année (\"1 year\"). Règle 4 : Si les y sont en %, alors mettre “%” dans le format de l’axe des y. Règle 5 : choisit un line_width entre 0.5 et 1 pour le geom_line(), ajoute un geom_point(shape=21, stroke=0.25, col=\"white\") pour marquer les points auxquels des données. Si peut mettre la légende sous forme de labels, c’est mieux car cela allège le graphique.","code":""},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"données","dir":"Articles","previous_headings":"","what":"Données","title":"Séries temporelles","text":"Pour les séries temporelles, il y deux recommandations pour les données : utilisez le format long pour les données du graphique. Il peut être plus simple pour calculer des taux de croissance ou des ratios de passer en format large, mais c’est mieux de passer en format long pour la partie graphique, avec une ou plusieurs colonnes pour différencier les lignes. Cela permettra d’associer une couleur à chaque série et une facette à chaque pays par exemple. le champ décrivant les dates doit être en type date. ce n’est pas toujours évident quand les séries sont à fréquence annuelle, mais c’est très utile pour mélanger des séries de fréquence irrégulière, pour homogénéiser l’aspect des axes de dates et mieux maîtriser le formatage des dates. Pour convertir une date en date, soit elle est au format <character> sous la forme \"2022-12-01\" et la fonction base::.Date() fonctionne très bien. Sinon, pour les autres cas, le package lubridate (formation R niv. 1) est très pratique et propose de nombreuses fonctions permettant d’absorber beaucoup de cas (les fonctions sont par exemple lubridate::ymd lubridate::dmy lubridate::etc…). Dans le cas où les données proviennent d’Excel et sont en format numérique peut utiliser .Date(df$date, origin = \"1899-12-30\") pour les convertir en <date>. Prenons l’exemple du graphiques sur les spreads (legislatives2024, Blot Geerolf Plane). Les données sont générées par un scrapping sur investing.com (en attendant une solution API sur une banque de données bien faite). Les données se présentent sous la forme. Les données sont au format long (avec deux modalités pour pays et donc 3 colonnes), les dates sont au format <date>, donc tout va presque bien. La colonne pays est un peu brute. la transforme pour avoir un label plus propre et en facteur, pour contrôler l’ordre (met France en premier, Italie en second). Il y plusieurs méthodes pour arriver à ce résultat. Ici, reste très simple parce qu’il n’y que deux modalités. Si il y en avait plus de deux (et surtout un grand nombre, possiblement évolutif), aurait fait quelques manipulations de chaînes et aurait utilisé le package countrycode pour transformer les code pays en texte lisible, possiblement traduit dans différentes langues.","code":"dates <- c(2023, 2024, 2025) as.Date(as.character(dates), format  = \"%Y\") [1] \"2023-07-18\" \"2024-07-18\" \"2025-07-18\" # si on veut préciser le moment de l'année as.Date(str_c(dates, \"-01-01\")) [1] \"2023-01-01\" \"2024-01-01\" \"2025-01-01\" dates <- c(\"1/2023\", \"2/2024\", \"3/2025\") lubridate::my(dates) [1] \"2023-01-01\" \"2024-02-01\" \"2025-03-01\" spreads # A tibble: 10,117 × 3    date       pays        taux    <date>     <chr>      <dbl>  1 2007-01-02 spreadfra 0.0130  2 2007-01-03 spreadfra 0.0360  3 2007-01-04 spreadfra 0.0280  4 2007-01-05 spreadfra 0.0190  5 2007-01-08 spreadfra 0.0440  6 2007-01-09 spreadfra 0.0430  7 2007-01-10 spreadfra 0.0290  8 2007-01-11 spreadfra 0.0370  9 2007-01-12 spreadfra 0.0340 10 2007-01-15 spreadfra 0.0380 # ℹ 10,107 more rows spreads_data <- spreads |>   distinct(date, pays, .keep_all = TRUE) |>   mutate(pays = factor( pays, c(\"spreadfra\", \"spreadita\"), c(\"France\", \"Italie\"))) spreads # A tibble: 10,117 × 3    date       pays        taux    <date>     <chr>      <dbl>  1 2007-01-02 spreadfra 0.0130  2 2007-01-03 spreadfra 0.0360  3 2007-01-04 spreadfra 0.0280  4 2007-01-05 spreadfra 0.0190  5 2007-01-08 spreadfra 0.0440  6 2007-01-09 spreadfra 0.0430  7 2007-01-10 spreadfra 0.0290  8 2007-01-11 spreadfra 0.0370  9 2007-01-12 spreadfra 0.0340 10 2007-01-15 spreadfra 0.0380 # ℹ 10,107 more rows"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"la-base-du-graphique","dir":"Articles","previous_headings":"","what":"La base du graphique","title":"Séries temporelles","text":"Le graphique de base est alors simple à construire. utilise une couche geom_line et geom_point, une couche aes avec comme x les dates, y les taux et couleurs les pays. Pour geom_line, il faut préciser le groupe (cela peut paraître redondant, mais cela peut servir si veut colorer en fonction d’une autre variable). L’ordre est important et le geom_line est en premier et donc en dessous du geom_point.  utilise la palette summer de PrettyCols (affaire de goût). utilise la fonction theme_ofce() pour homogénéiser la présentation des graphiques. précise les labels des axes inutile pour x, explicite pour y. Et la source, en notant que l’peut utiliser markdown dans le texte de la source, ce qui permet de mettre Source en italique. Le recours à scale_x_date permet de spécifier facilement le format des dates (avec la syntaxe de base::strptime()) et la fonction scale::label_date_short() permet un formatage élégant des dates (voir plus bas la partie insert). ajoute au graphique des annotations. C’est ici faid de façon laborieuse, peut construire des fonctions (formation R niv. 2) ou utiliser esquisse ou {gganotate} mais ces deux solutions ont des défauts.","code":"library(ofce) cc <- PrettyCols::prettycols(\"Summer\", n=2) date_maj <- \"2024-07-01\" main <- ggplot(spreads_data) +   aes(x=date, y=taux, fill = pays, color=pays, group=pays) +   geom_line(linewidth = 0.75, alpha = 0.5, show.legend = FALSE) +   geom_point(stroke = 0.5, size = 1,   col = \"white\", shape = 21, show.legend = FALSE)+       scale_color_manual(         aesthetics = c(\"fill\", \"color\"),         name = NULL, values = cc) +   theme_ofce()+   guides(     x = guide_axis(minor.ticks = TRUE),     y = guide_axis(minor.ticks = TRUE)) +   labs(         y=\"Ecart de taux à 10 ans\",         x=NULL,         colour=NULL,         caption = glue::glue(\"*Source* : investing.com<br>Mis à jour : {date_maj}\")) +       scale_x_date(         labels = scales::label_date_short(format = c(\"%Y\")),         date_breaks = \"5 years\",         date_minor_breaks = \"1 year\",         guide = \"minor_ticks\") +       scale_y_continuous(         labels = ~str_c(.x, \"%\"),         minor_breaks = scales::breaks_width(0.1),         guide = \"axis_minor\")   main |> add_logo()"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"les-annotations","dir":"Articles","previous_headings":"","what":"Les annotations","title":"Séries temporelles","text":"Pour les annotations peut utiliser différentes méthodes. La plus laborieuse est la fonction ggplot2::annotate(). La plus élégante est ggforce::geom_mark_circle() ou ggrepel::geom_repel_text().   Le résultat est intéressant, mais le graphique cependant un défaut, il y trop de points, ce qui est du à la fréquence quotidienne et donc il perd en clarté. va donc faire deux choses : réduire la fréquence en agrégeant les données par mois, puis va ajouter un insert.","code":"# méthode 1 : annotate  annotations <-  list(   annotate(     \"text\", x = as.Date(\"2013-12-01\"), y= 1,     label=\"France\" , color=cc[[1]] , size=3, fontface =\"bold\"),   annotate(     \"text\", x = as.Date(\"2010-06-01\"), y= 3 ,     label=\"Italie\" , color=cc[[2]], size=3, fontface =\"bold\"),   annotate(     \"text\",     x = as.Date(\"2009-12-01\"),     y= 5 ,     label=\"Crise des dettes souveraines\\n26 juillet 2012 : Mario Draghi \\n 'Whatever it takes'\" ,     color= \"grey33\",     size=2,     hjust=1),   annotate(     \"segment\",     x = as.Date(\"2010-03-01\"),     xend = as.Date(\"2011-07-01\"),     y = 5,     yend = 4.6,     colour = \"grey33\",     linewidth=0.25,     arrow= arrow(length = unit(4, \"point\"))),   annotate(     \"text\",         x = as.Date(\"2016-9-01\"),     y= 4.5 ,     size = 2,     label=\"4 mars 2018 : Élections italiennes\\n1er juin : gouvernement de coalition\" ,     color= \"grey33\"),   annotate(     \"segment\",     x = as.Date(\"2016-09-01\"),     xend = as.Date(\"2018-05-01\"),     y = 4.2,     yend = 3,     colour = \"grey33\",     linewidth=0.25,     arrow=arrow(length = unit(4, \"point\"))),   annotate(     \"text\",     x = as.Date(\"2022-01-01\"),     hjust = 1,     y= 0.8,     label=\"Annonce de la dissolution\" ,     color= \"grey33\",     size=2),   annotate(     \"segment\",     x = as.Date(\"2022-03-01\"),     xend = as.Date(\"2024-04-01\"),     y = 0.8,     yend = 0.7,     colour = \"grey33\",     linewidth=0.25,     arrow= arrow(length = unit(4, \"point\"))))  (main + annotations) |> add_logo() # méthode 2 : ggrepel # on enrichit les données des labels, # le code est plus compact et surtout plus facile à manier # (pour modifier les annotations, on le fait dans les deux tribbles)  library(ggrepel)  events <- tribble(   ~date, ~pays, ~event,   \"2012-01-02\", \"Italie\", \"Crise des dettes souveraines\\n26 juillet 2012 : Mario Draghi \\n 'Whatever it takes'\",   \"2018-06-01\", \"Italie\", \"4 mars 2018 : Élections italiennes\\n1er juin : gouvernement de coalition\",   \"2024-06-10\", \"France\", \"Annonce de la dissolution\" ) |>   mutate(date = as.Date(date) |> floor_date(\"week\", week_start = 1))  label_pays <- tribble(   ~date, ~pays,   \"2009-01-01\", \"Italie\",   \"2013-12-01\", \"France\" ) |>   mutate(     date = as.Date(date),     date = floor_date(date, \"week\", week_start = 1),     label_pays = pays   )  ss <- spreads_data |>   left_join(events, by = c(\"date\", \"pays\")) |>   left_join(label_pays, by = c(\"date\", \"pays\")) |>   mutate(     label_pays = replace_na(label_pays, \"\"),     event = replace_na(event, \"\")   ) |>   arrange(pays, date)  add_logo(main %+% ss) +   ggrepel::geom_text_repel(     aes(label = label_pays, color = pays),     fontface = \"bold\",     size = 3, show.legend = FALSE,     min.segment.length = Inf,     max.overlaps = Inf, hjust = 0.5   ) +   ggrepel::geom_text_repel(     aes(label = event),     color = \"black\",     size = 2, show.legend = FALSE,     segment.size = 0.2, min.segment.length = 0.1,     max.overlaps = Inf, hjust = 0.5,     nudge_x = c(-500, -250, -250), nudge_y = c(-0.3, 1, -0.5),     arrow = arrow(length = unit(0.015, \"npc\"))   ) +   scale_y_continuous(labels = ~ str_c(.x, \"%\"), limits = c(0, 6),                      minor_breaks = scales::breaks_width(0.1),                      guide = \"axis_minor\") +   scale_x_date(     labels = scales::label_date_short(format = c(\"%Y\")),     date_breaks = \"5 years\",     date_minor_breaks = \"1 year\",     guide = \"minor_ticks\",     limits = c(as.Date(\"2008-01-01\"), NA))"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"fréquence-mensuelle-et-insert","dir":"Articles","previous_headings":"","what":"Fréquence mensuelle et insert","title":"Séries temporelles","text":"Pour construire les données à la fréquence mensuelle, va créer un champ de date, mais retenant une seule date par mois (au milieu du mois). En agrégeant par mois (summarise) construit la série en mensuel. peut alors facilement modifier le graphique main en utilisant %+% (cette instruction modifie les données en entrée du graphique par le nouveau jeu de données qu’vient de construire qui exactement la même structure, comme utilisé les dates le passage du quotidien au mensuel se fait automatiquement, les axes sont parfaitement construits) :  L’insert est le même graphique, en enlevant les annotations, en simplifiant les axes et en zoomant sur les deux derniers mois.  l’insère dans le graphique principal en utilisant patchwork, ce qui donne le graphique, plus lisible et plus élégant. Les paramètres de inset sont choisis après quelques essais et erreurs. réduit la taille de la police de caractère pour accentuer l’effet visuel.  Tip 1: Une alternative avec {ggmagnify} Le package ggmagnify simplifie la tâche et offre quelques améliorations esthétiques. Il faut cependant que les dataset principal et inset soit les mêmes [pas sûr en fait]. reprend l’agrégation temporelle en l’arrêtant aux deux derniers mois. complexifie l’insert pour intégrer plus d’éléments en utilisant l’argument plot de ggmagnify::geom_magnify().","code":"dates <- spreads_data$date # on force le jour à être le 15 du mois, il n'y aura qu'une date par mois! lubridate::day(dates) <- 15 spreads_m <- spreads_data |>   mutate( date = dates) |>   group_by(date, pays) |>   summarize(taux_max = max(taux, na.rm=TRUE),             taux_min = min(taux, na.rm=TRUE),             taux = mean(taux, na.rm=TRUE)) spreads_m # A tibble: 422 × 5 # Groups:   date [211]    date       pays   taux_max taux_min   taux    <date>     <fct>     <dbl>    <dbl>  <dbl>  1 2007-01-15 France   0.0580   0.0130 0.0409  2 2007-01-15 Italie   0.278    0.154  0.229  3 2007-02-15 France   0.0560   0.0380 0.0440  4 2007-02-15 Italie   0.284    0.17   0.211  5 2007-03-15 France   0.0630   0.0350 0.0466  6 2007-03-15 Italie   0.318    0.192  0.239  7 2007-04-15 France   0.0690   0.0410 0.0496  8 2007-04-15 Italie   0.285    0.153  0.225  9 2007-05-15 France   0.0980   0.0330 0.0464 10 2007-05-15 Italie   0.291    0.175  0.222 # ℹ 412 more rows add_logo(main %+% spreads_m) inset <- main +   theme_ofce(     base_size = 7,     axis.line.x = element_blank(),     axis.line.y = element_blank(),     plot.background = element_rect(fill = \"white\")   ) +   scale_x_date(     labels = scales::label_date_short(format = c(\"%Y\", \"%B\")),     date_breaks = \"1 month\",     limits = c(Sys.Date() - months(2), NA),     guide = \"minor_ticks\"   ) +   geom_vline(     xintercept = as.Date(\"2024-06-09\"),     linewidth = 0.1,     color = \"grey50\"   ) +   geom_vline(     xintercept = as.Date(\"2024-07-08\"),     linewidth = 0.1,     color = \"grey50\"   ) +   scale_y_continuous(labels = ~ str_c(.x, \"%\"), limits = c(0, 2),                      minor_breaks = scales::breaks_width(0.1),                      guide = \"axis_minor\") +   labs(y = NULL, caption = NULL, color = NULL, fill = NULL) inset library(patchwork) main_m <- add_logo((main + annotations) %+% spreads_m) main_m  + inset_element(inset, 0.75, 0.66, 1, 1) # pak::pak(\"hughjonesd/ggmagnify\") library(ggmagnify)  spreads_hyb <- spreads_data |>   mutate(     agg = date < now() - months(2),     date_h = floor_date(date, unit = \"month\"),     date_h = if_else(agg, date_h, date)   ) |>   group_by(date_h, pays) |>   summarize(     taux = mean(taux, na.rm = TRUE),     n = n(), .groups = \"drop\"   ) |>   rename(     date = date_h   ) |>   mutate(     date_label = ifelse(n > 1,       stamp(         orders = \"%B %Y\",         locale = \"fr_FR.utf8\", exact = TRUE, quiet = TRUE       )(date),       stamp(\"22/12/2024\",         orders = \"%d/%m/%Y\",         locale = \"fr_FR.utf8\", quiet = TRUE       )(date)     ),     tooltip = str_c(       \"<b>\", pays, \"<\/b><br>\",       date_label,       \"<br>Ecart de taux avec l'Allemagne : \", f_taux(taux)     ),   ) inset_plot <- ggplot(spreads_hyb) +   aes(x = date, y = taux, fill = pays, color = pays, group = pays) +   geom_line(linewidth = 0.75, alpha = 0.5, show.legend = FALSE) +   geom_point_interactive(     aes(tooltip = tooltip, data_id = date),     stroke = 0.5, size = 1,     col = \"white\", shape = 21, show.legend = FALSE   ) +   scale_color_manual(     aesthetics = c(\"fill\", \"color\"),     name = NULL, values = cc   ) +   theme_ofce(     base_size = 7,     panel.grid.major.y = element_line(color = \"gray\", linewidth = 0.25),     axis.line = element_blank()   ) +   geom_vline(xintercept = as.Date(\"2024-6-30\"), linewidth = 0.25, color = \"grey\") +   labs(     y = NULL,     x = NULL,     colour = NULL,     caption = NULL   ) +   scale_x_date(     labels = scales::label_date_short(format = c(\"%Y\", \"%B\")),     date_breaks = \"1 month\"   ) +   scale_y_continuous(     labels = ~ str_c(.x, \"%\"), breaks = seq(0, 2))  md <- max(spreads_hyb$date) from <- list(md - days(50), md, 0, 2) to <- list(md - years(4), md + years(1), 3.75, 5) sh <- ggplot(spreads_hyb) +   aes(x = date, y = taux, fill = pays, color = pays, group = pays) +   geom_line(linewidth = 0.75, alpha = 0.5, show.legend = FALSE) +   geom_point_interactive(     aes(tooltip = tooltip, data_id = date),     stroke = 0.5, size = 1,     col = \"white\", shape = 21, show.legend = FALSE   ) +   scale_color_manual(     aesthetics = c(\"fill\", \"color\"),     name = NULL, values = cc   ) +   theme_ofce(plot.margin = ggplot2::margin(10, 60, 10, 10)) +   guides(     x = guide_axis(minor.ticks = TRUE),     y = guide_axis(minor.ticks = TRUE)   ) +   labs(     y = \"Ecart de taux à 10 ans\",     x = NULL,     colour = NULL,     caption = glue::glue(\"*Source* : investing.com<br>Mis à jour : {date_maj}\")   ) +   scale_x_date(     labels = scales::label_date_short(format = c(\"%Y\")),     date_breaks = \"5 years\",     date_minor_breaks = \"1 year\",     guide = \"minor_ticks\"   ) +   scale_y_continuous(     labels = ~ str_c(.x, \"%\"), breaks = seq(0, 5),     minor_breaks = scales::breaks_width(0.1),     guide = \"axis_minor\",     expand = expansion(), limits = c(-0.25, NA),   ) +   annotations +   coord_cartesian(clip = \"off\") +   ggmagnify::geom_magnify(     from = from, to = to, linewidth = 0.1,     colour = \"grey25\", shadow = TRUE,     plot = inset_plot, axes = \"xy\",     shadow.args = list(sigma = 5, colour = \"grey80\", x_offset = 5, y_offset = 5)   )  girafy(add_logo(sh), r = 2.5)"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"interactif","dir":"Articles","previous_headings":"","what":"Interactif","title":"Séries temporelles","text":"La dernière étape est l’interactivité. utilise le package ggiraph qui va permettre d’intégrer des tooltips très simplement et très efficacement. peut aussi avec des sélections dynamiques ou encore des zooms. Pour ajouter l’interactivité, la première étape est de générer le texte des tooltips dans le tableau de données. Notez l’utilisation de lubridate::stamp_date() pour formater les dates simplement. L’interactivité est alors ajoutée par des instructions spécifiques qui se substituent aux geom_* en ajoutant un suffix, geom_*_interactive. Ces geom_*_interactive acceptent un aes avec deux paramètres supplémentaire, le premier définissant le tooltip et le second, data_id, une variable qui relie les éléments graphiques entre eux pour qu’ils soient modifiés lors du survol avec la souris. La fonction girafy qui est définie par source(\"rinit.r\") et finalise le rendu. ggiraph conserve tous les éléments du graphique et il est possible de l’appliquer avec patchwork pour combiner les interactivités. La clef pour l’interactivité est d’apporter de l’information à l’utilisateur par le texte du tooltip. Il est possible d’avoir des interactivités plus avancées, en déclenchant une action sur un click par exemple. L’approche par ggiraph est applicable simplement à de nombreux graphiques avec un rendu satisfaisant. Cela marche également pour des facet et donc ça ouvre beaucoup de possibilités.","code":"spreads_m <- spreads_m |>   mutate(     tooltip = str_c(\"<b>\", pays, \"<\/b><br>\",                     stamp(exact = TRUE, orders = \"%B %Y\",                           locale = \"fr_FR.utf8\", quiet = TRUE)(date),                     \"<br>Ecart de taux avec l'Allemagne : \", f_taux(taux))) library(ggiraph) main_i <- ggplot(spreads_m) +   aes(x = date, y = taux, color = pays, group = pays, fill = pays) +   geom_line(linewidth = 0.75, alpha = 0.5, show.legend = FALSE) +   geom_point_interactive(aes(tooltip = tooltip, data_id = date),     stroke = 0.5, size = 1, col = \"white\", shape = 21,     hover_nearest = TRUE, show.legend = FALSE   ) +   scale_color_manual(name = NULL, values = cc, aesthetics = c(\"fill\", \"color\")) +   labs(     y = \"Ecart de taux à 10 ans\",     x = NULL,     caption = \"Source: investing.com\"   ) +   theme_ofce() +   guides(     x = guide_axis(minor.ticks = TRUE),     y = guide_axis(minor.ticks = TRUE)   ) +   labs(     colour = NULL,     caption = glue::glue(\"*Source* : investing.com<br>Mis à jour : {date_maj}\")   ) +   scale_x_date(     labels = scales::label_date_short(format = c(\"%Y\", \"%B\")),     date_breaks = \"5 years\",     date_minor_breaks = \"1 year\",     guide = \"minor_ticks\"   ) +   scale_y_continuous(labels = ~ str_c(.x, \"%\"))  spreads_data <- spreads_data |>   mutate(     tooltip = str_c(       \"<b>\", pays, \"<\/b><br>\",       stamp_date(\"24/7/2024\", locale = \"fr_FR.utf8\", quiet = TRUE)(date),       \"<br>Ecart de taux avec l'Allemagne : \", f_taux(taux)     )   )  inset_i <- (main_i %+% spreads_data) +   theme_ofce(     base_size = 7,     axis.line.x = element_blank(),     axis.line.y = element_blank(),     plot.background = element_rect(fill = \"white\")   ) +   scale_x_date(     labels = scales::label_date_short(format = c(\"%Y\", \"%B\")),     date_breaks = \"1 month\",     date_minor_breaks = \"1 week\",     limits = c(Sys.Date() - months(2), NA),     guide = \"minor_ticks\"   ) +   geom_vline(     xintercept = as.Date(\"2024-06-09\"),     linewidth = 0.1,     color = \"grey50\"   ) +   scale_y_continuous(labels = ~ str_c(.x, \"%\"),                       limits = c(0, 2),                       minor_breaks = scales::breaks_width(0.1),                      guide = \"axis_minor\") +   labs(y = NULL, caption = NULL, color = NULL, fill = NULL)  main_i <- ((main_i + annotations) %+% spreads_m) |> add_logo() main_i <- main_i + inset_element(inset_i, 0.75, 0.66, 1, 1) girafy(main_i, r = 2.5)"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"fréquence-trimestrielle","dir":"Articles","previous_headings":"","what":"Fréquence trimestrielle","title":"Séries temporelles","text":"transforme les données en fréquence trimestrielle en utilisant la fonction lubridate::floor_date(). En calculant les variables année (y) et trimestre (q), peut avec le package ggh4x produire facilement un joli graphique trimestriel. Les clefs sont de mettre en x l’interaction entre ces deux éléments discrets (attention à l’ordre, attention à trier les données avec arrange). La magie opère ensuite avec guide = \"axis_nested\". Cete fonction est généralisable à bien des cas.","code":"library(lubridate) # pak::pak(\"teunbrand/ggh4x\") library(ggh4x)  spreads_q <- spreads_data |>   mutate(     y = lubridate::year(date),     q = str_c(\"T\", lubridate::quarter(date)),     date_q = lubridate::floor_date(date, unit = \"quarter\")   ) |>   group_by(date_q, y, q, pays) |>   summarize(     taux_max = max(taux, na.rm = TRUE),     taux_min = min(taux, na.rm = TRUE),     taux = mean(taux, na.rm = TRUE), .groups = \"drop\"   ) |>   rename(date = date_q) |>   arrange(date) |>   filter(date >= \"2018-01-01\")  (ggplot(spreads_q) +   aes(x = interaction(q, y), y = taux, fill = pays, color = pays, group = pays) +   geom_line(linewidth = 0.75, alpha = 0.5, show.legend = FALSE) +   geom_point(     stroke = 0.5, size = 1,     col = \"white\", shape = 21, show.legend = FALSE   ) +   scale_color_manual(     aesthetics = c(\"fill\", \"color\"),     name = NULL, values = cc   ) +   theme_ofce(     axis.text.x = element_text(size = rel(0.8), margin = margin(t = 6)),     ggh4x.axis.nesttext.x = element_text(size = rel(1.2), margin = margin(t = 3))   ) +   labs(     y = \"Ecart de taux à 10 ans\",     x = NULL,     colour = NULL,     caption = glue::glue(\"*Source* : investing.com<br>Mis à jour : {date_maj}\")   ) +   scale_y_continuous(labels = ~ str_c(.x, \"%\"),                      minor_breaks = scales::breaks_width(0.1),                      guide = \"axis_minor\") +   scale_x_discrete(guide = \"axis_nested\")) |> add_logo()"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"double-échelle","dir":"Articles","previous_headings":"","what":"Double échelle","title":"Séries temporelles","text":"Non mais ca va pas ?","code":""},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"une-dernière-chose-transparence","dir":"Articles","previous_headings":"","what":"Une dernière chose : transparence","title":"Séries temporelles","text":"Une bonne pratique est de mettre à disposition les données et le code ayant servi à produire le graphique. Une façon est d’utiliser les boutons code présents dans ce document pour publier le code. La seconde est de mettre tous les codes sur un dépôt github 😸 public. Une autre option est d’ajouter un bouton pour télécharger les données. C’est simple à faire avec downloadthis et ce bout de code qui peut être mis juste après un graphique. reprend le fichier de données, tel quel, modifié éventuellement pour enlever ou renommer une colonne, et qui sera disponible en csv, UTF8, avec des virgules comme séprateurs et des points comme marque décimale (.e. pas ce qu’Excel FR attend ☠️). Pour que les boutons soient sur la même ligne utilise la syntaxe inline 'r une_expression_R' : Taux mensuels  Taux quotidiens peut aussi les mettre dans la marge en entourant le chunk R de ::: column-margin ⏎ un_code_r``⏎``::: (visuellement c’est mieux quand il y le graphique juste avant le div).","code":"library(downloadthis) b1 <- download_this(   spreads_m |> select(-tooltip),   icon = \"fa fa-download\",   class = \"dbtn\",   button_label  = \"Taux mensuels\",   output_name = \"taux_mensuels\" ) b2 <- download_this(   spreads_data,   icon = \"fa fa-download\",   class = \"dbtn\",   button_label  = \"Taux quotidiens\",   output_name = \"taux_quotidiens\" )"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ofce.github.io/ofce/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Malliet. Author, maintainer. Anissa Saumtally. Author. Xavier Timbeau. Author.","code":""},{"path":"https://ofce.github.io/ofce/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Malliet P, Saumtally , Timbeau X (2024). ofce: Documents scientifiques aux normes OFCE. R package version 1.1.0, https://ofce.github.io/ofce/.","code":"@Manual{,   title = {ofce: Documents scientifiques aux normes OFCE},   author = {Paul Malliet and Anissa Saumtally and Xavier Timbeau},   year = {2024},   note = {R package version 1.1.0},   url = {https://ofce.github.io/ofce/}, }"},{"path":"https://ofce.github.io/ofce/index.html","id":"publication-de-documents-scientifiques-","dir":"","previous_headings":"","what":"Documents scientifiques aux normes OFCE","title":"Documents scientifiques aux normes OFCE","text":"Ce package met à disposition des outils utilisés régulièrement à l’OFCE, que ce soit pour la production de documents quarto ou de mise en page de graphiques ggplot2. La charte graphique, les instructions de flux de travail, des exemples de documents et de code, des tutos sont sur https://ofce.github.io/ofce/. N’hésitez pas à poster des issues sur ce dépôt pour toute remarque ou requête.","code":""},{"path":"https://ofce.github.io/ofce/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Documents scientifiques aux normes OFCE","text":"Le package s’installe par la commande du package pak (si vous ne l’avez pas déjà installé, install.packages(\"pak\"))","code":"pak::pak(\"ofce/ofce\")"},{"path":"https://ofce.github.io/ofce/index.html","id":"mise-à-jour-des-templates-quarto-ofce","dir":"","previous_headings":"","what":"Mise à jour des templates quarto OFCE","title":"Documents scientifiques aux normes OFCE","text":"Les templates existants sont mis à jour ; pour récupérer la dernière version, il suffit de lancer la commande ofce::setup_quarto() qui installera en local la dernière version des extensions pour votre projet. Les formats disponibles sont :","code":"--- format:   ofce-html: default # une page en html   wp-html: default # Document de travail en html   wp-pdf: default # Document de travail en pdf   wp-en-html: default # Document de travail html en anglais   wp-en-html: default # Document de travail pdf en anglais   pres-revealjs: default # presentation   blog-html: default # Post de blog en html   blog-pdf: default # Post de blog en pdf ---"},{"path":"https://ofce.github.io/ofce/index.html","id":"utilisation","dir":"","previous_headings":"","what":"Utilisation","title":"Documents scientifiques aux normes OFCE","text":"Pour une description plus complète, vous pouvez lancez la commande suivante dans la console RStudio qui recense l’ensemble des fonctions du package : library(help=\"ofce\") ou ?nom_de_la_function. Sur le site qui documente le package vous trouverez des documents détaillant tous les aspects de l’utilisation du package et de la réalisation de documents à l’OFCE – les chartes graphiques.","code":""},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Add label unit — add_label_unit","title":"Add label unit — add_label_unit","text":"Ajoute un label pour les unités sur le plus grand des labels y","code":""},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add label unit — add_label_unit","text":"","code":"add_label_unit(plot, ylabel = \"\")"},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add label unit — add_label_unit","text":"plot un graphique ggplot ylabel string, un label","code":""},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add label unit — add_label_unit","text":"un graphique ggplot","code":""},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add label unit — add_label_unit","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) plot <- ggplot(mtcars) +         geom_point(aes(x=mpg, y=hp, size=cyl, col=gear)) +         theme_ofce(base_family=\"Nunito\") # plot |> add_label_unit(\"horse power\") } # }"},{"path":"https://ofce.github.io/ofce/reference/add_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Add logo — add_logo","title":"Add logo — add_logo","text":"Ajoute le logo de l'OFCE sur le graphique (inside donc)","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add logo — add_logo","text":"","code":"add_logo(plot, logo = NULL, size = 0.25)"},{"path":"https://ofce.github.io/ofce/reference/add_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add logo — add_logo","text":"plot un graphique ggplot logo un logo au format png, avec une transparence (si NULL utilise le logo OFCE) size la taille du logo (relative)","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add logo — add_logo","text":"un graphique ggplot","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add logo — add_logo","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) plot <- ggplot(mtcars) +         geom_point(aes(x=mpg, y=hp, size=cyl, col=gear)) +         theme_ofce() # plot |> add_logo() } # }"},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":null,"dir":"Reference","previous_headings":"","what":"Add logo — add_logo_ofce","title":"Add logo — add_logo_ofce","text":"Ajoute le logo de l'OFCE en bas à droite du graphique","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add logo — add_logo_ofce","text":"","code":"add_logo_ofce(plot, logo = NULL, size = 0.04)"},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add logo — add_logo_ofce","text":"plot un graphique ggplot logo un logo au format png, avec une transparence size la taille du logo (relative)","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add logo — add_logo_ofce","text":"un graphique ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add logo — add_logo_ofce","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) plot <- ggplot(mtcars) +     geom_point(aes(x=mpg, y=hp, size=cyl, col=gear)) +     theme_ofce() # plot |> add_logo_ofce() } # }"},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":null,"dir":"Reference","previous_headings":"","what":"Add logo inside — add_logo_ofce_inside","title":"Add logo inside — add_logo_ofce_inside","text":"Ajoute le logo de l'OFCE sur le graphique (inside donc)","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add logo inside — add_logo_ofce_inside","text":"","code":"add_logo_ofce_inside(plot, logo = NULL, size = 0.25)"},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add logo inside — add_logo_ofce_inside","text":"plot un graphique ggplot logo un logo au format png, avec une transparence size la taille du logo (relative)","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add logo inside — add_logo_ofce_inside","text":"un graphique ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add logo inside — add_logo_ofce_inside","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) plot <- ggplot(mtcars) +         geom_point(aes(x=mpg, y=hp, size=cyl, col=gear)) +         theme_ofce() # plot |> add_logo_ofce_inside() } # }"},{"path":"https://ofce.github.io/ofce/reference/annotate2.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate2 from ggplot2 — annotate2","title":"Annotate2 from ggplot2 — annotate2","text":"Variation de ggplot2::annotate pour intégrer une position","code":""},{"path":"https://ofce.github.io/ofce/reference/annotate2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate2 from ggplot2 — annotate2","text":"","code":"annotate2(   geom,   x = NULL,   y = NULL,   xmin = NULL,   xmax = NULL,   ymin = NULL,   ymax = NULL,   xend = NULL,   yend = NULL,   position = PositionIdentity,   ...,   na.rm = FALSE )"},{"path":"https://ofce.github.io/ofce/reference/annotate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate2 from ggplot2 — annotate2","text":"geom name geom use annotation x, y, xmin, ymin, xmax, ymax, xend, yend positioning aesthetics - must specify least one . position fonction position (comme position_nudge()) pour modifier la position de l'annotation ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed.","code":""},{"path":"https://ofce.github.io/ofce/reference/annotate2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate2 from ggplot2 — annotate2","text":"une layer","code":""},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3","code":""},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"","code":"f2si2(number, rounding = TRUE, digits = 1, unit = \"median\")"},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"number le nombre ou le vecteur à formatter (numérique) rounding doit-arrondir le chiffre ? digits Combien de chiffres après la virgule unit Arrondi soit à la \"median\" soit au \"max\"","code":""},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"une chaine de caractère (character) formattée","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"","code":"f2si2(100000) #> [1] \"100k\""},{"path":"https://ofce.github.io/ofce/reference/graph2jpg.html","id":null,"dir":"Reference","previous_headings":"","what":"Enregistre un graphe en jpg à la taille revue — graph2jpg","title":"Enregistre un graphe en jpg à la taille revue — graph2jpg","text":"Enregistrement d'un graphique avec une taille par défaut de 18 cm de large et un ratio de 4/3 Les paramètres peuvent être facilement modifiés","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2jpg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enregistre un graphe en jpg à la taille revue — graph2jpg","text":"","code":"graph2jpg(   graph,   file = \"\",   rep = \"svg\",   ratio = 4/3,   height = width/ratio,   width = 18,   units = \"cm\",   bg = \"white\",   quality = 100,   dpi = 600,   ... )"},{"path":"https://ofce.github.io/ofce/reference/graph2jpg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enregistre un graphe en jpg à la taille revue — graph2jpg","text":"graph un objet graphique (grid, un ggplot plus communément mais aussi un objet tmap) file Le chemin vers le fichier résultat (string) rep le répertoire dans lequel met les graphiques ratio le ratio entre largeu r et hauteur height la hauteur, si la hauteur est spécifiée la ratio est ignoré width la largeur units l'unité (\"cm\" par exemple) bg couleur du fond (background) quality qualité du fichier (par défault 100) dpi résolution du fichier image crée (par défault 600) ... autres arguments à passer dans la fonction","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2jpg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enregistre un graphe en jpg à la taille revue — graph2jpg","text":"l'objet en entrée, invisible, enregistre un .jpeg dans le répertoire avec le nom donné","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2png.html","id":null,"dir":"Reference","previous_headings":"","what":"Enregistre un graphe en png à la taille revue — graph2png","title":"Enregistre un graphe en png à la taille revue — graph2png","text":"Enregistrement d'un graphique avec une taille par défaut de 18 cm de large et un ratio de 4/3 Les paramètres peuvent être facilement modifiés. Le propblème de la résolution est résolu (dsl) en utilisant showtext.","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enregistre un graphe en png à la taille revue — graph2png","text":"","code":"graph2png(   graph,   file = \"\",   rep = \"svg\",   ratio = 4/3,   height = width/ratio,   width = 18,   units = \"cm\",   bg = \"white\",   dpi = 600,   ... )"},{"path":"https://ofce.github.io/ofce/reference/graph2png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enregistre un graphe en png à la taille revue — graph2png","text":"graph un objet graphique (grid, un ggplot plus communément mais aussi un objet tmap) file Le chemin vers le fichier résultat (string) rep le répertoire dans lequel met les graphiques ratio le ratio entre largeur et hauteur height la hauteur, si la hauteur est spécifiée la ratio est ignoré width la largeur units l'unité (\"cm\" par exemple) bg couleur du fond (background) dpi résolution du fichier image crée (par défault 600) ... autres arguments à passer dans la fonction","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enregistre un graphe en png à la taille revue — graph2png","text":"l'objet en entrée, invisible, enregistre un .png dans le répertoire avec le nom donné","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2svg.html","id":null,"dir":"Reference","previous_headings":"","what":"Enregistre un graphe en svg à la taille revue — graph2svg","title":"Enregistre un graphe en svg à la taille revue — graph2svg","text":"Enregistrement d'un graphique avec une taille par défaut de 18 cm de large et un ratio de 4/3 Les paramètres peuvent être facilement modifiés","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2svg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enregistre un graphe en svg à la taille revue — graph2svg","text":"","code":"graph2svg(   graph,   file = \"\",   rep = \"svg\",   ratio = 4/3,   height = width/ratio,   width = 18,   units = \"cm\",   bg = \"white\",   ... )"},{"path":"https://ofce.github.io/ofce/reference/graph2svg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enregistre un graphe en svg à la taille revue — graph2svg","text":"graph un objet graphique (grid, un ggplot plus communément, mais aussi un objet tmap) file Le chemin vers le fichier résultat (string) rep le répertoire dans lequel met les graphiques ratio le ratio entre largeur et hauteur height la hauteur, si la hauteur est spécifiée la ratio est ignoré width la largeur units l'unité (\"cm\" par exemple) bg couleur du fond (background) ... autres arguments à passer dans la fonction","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2svg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enregistre un graphe en svg à la taille revue — graph2svg","text":"l'objet en entrée, invisible, enregistre un .svg dans le répertoire avec le nom donné","code":""},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforme une chaîne formatté SI en nombre — if2si2","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"Transforme une chaîne formatté SI en nombre","code":""},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"","code":"if2si2(text)"},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"text le nombre ou le vecteur de nombres formattés à transformer","code":""},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"un nombre","code":""},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"","code":"if2si2(\"100k\") #>     k  #> 1e+05"},{"path":"https://ofce.github.io/ofce/reference/init_qmd.html","id":null,"dir":"Reference","previous_headings":"","what":"exécute le fichier rinit.R à la racine du file, ou au dessus s'il ne le trouve pas il utilise une version par défaut, stockée dans le package — init_qmd","title":"exécute le fichier rinit.R à la racine du file, ou au dessus s'il ne le trouve pas il utilise une version par défaut, stockée dans le package — init_qmd","text":"exécute le fichier rinit.R à la racine du file, ou au dessus s'il ne le trouve pas il utilise une version par défaut, stockée dans le package","code":""},{"path":"https://ofce.github.io/ofce/reference/init_qmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"exécute le fichier rinit.R à la racine du file, ou au dessus s'il ne le trouve pas il utilise une version par défaut, stockée dans le package — init_qmd","text":"","code":"init_qmd(init = \"rinit.r\")"},{"path":"https://ofce.github.io/ofce/reference/init_qmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"exécute le fichier rinit.R à la racine du file, ou au dessus s'il ne le trouve pas il utilise une version par défaut, stockée dans le package — init_qmd","text":"init Nom du projet, \"pres\" par défaut,","code":""},{"path":"https://ofce.github.io/ofce/reference/make_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"make filename — make_filename","title":"make filename — make_filename","text":"make filename","code":""},{"path":"https://ofce.github.io/ofce/reference/make_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make filename — make_filename","text":"","code":"make_filename(x, file = \"\", rep = \"\", env, ext)"},{"path":"https://ofce.github.io/ofce/reference/make_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make filename — make_filename","text":"x nom de l'objet file nom du fichier crée (par défaut nom de x) rep stringr env environnement ext nom de l'extension du fichier (.png, .jpg,...)","code":""},{"path":"https://ofce.github.io/ofce/reference/make_filename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make filename — make_filename","text":"un nom de fichier","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"","code":"ofce_palette(n = 2)"},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"n number un nombre de couleurs à retenir pour la palette","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"un vector de couleurs de taille compris entre 2 et 5","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"","code":"ofce_palette(n = 2) #> [1] \"#185CA1\" \"#D40F14\""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"","code":"ofce_palette_div(colors = c(\"#005DA4\", \"#C51315\"), n = NULL)"},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"colors un vecteur de deux couleurs à partir duquel la palette est générée. n integer, nombre de couleurs","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"un vecteur de couleurs de taille n","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"","code":"ofce_palette_div(n = 4) #> [1] \"#005DA4\" \"#2263A6\" \"#9E4545\" \"#993D3D\""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_pays.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","text":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_pays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","text":"","code":"ofce_palette_pays(list_iso3 = NULL, HEX = NULL, RVB = NULL)"},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_pays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","text":"list_iso3 chr, une liste de nom de pays HEX boolean (default) set TRUE color code HEX RVB boolean set TRUE color code RVB","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_pays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","text":"une palette de couleur (format HEX)","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","title":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","text":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","text":"","code":"ofce_palette_seq(colors = c(\"#005DA4\", \"#C51315\"), n = NULL)"},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","text":"colors vecteur de deux couleurs à partir duquel la palette est générée n integer, nombre de couleurs","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","text":"une palette de couleurs (format HEX)","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_degrades.html","id":null,"dir":"Reference","previous_headings":"","what":"palette_degrades — palette_degrades","title":"palette_degrades — palette_degrades","text":"Description.","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_degrades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"palette_degrades — palette_degrades","text":"","code":"palette_degrades"},{"path":"https://ofce.github.io/ofce/reference/palette_degrades.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"palette_degrades — palette_degrades","text":"data frame 26 rows 2 variables: Nom character Code character","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_degrades.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"palette_degrades — palette_degrades","text":"Source","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_pays.html","id":null,"dir":"Reference","previous_headings":"","what":"palette_pays — palette_pays","title":"palette_pays — palette_pays","text":"Description.","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_pays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"palette_pays — palette_pays","text":"","code":"palette_pays"},{"path":"https://ofce.github.io/ofce/reference/palette_pays.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"palette_pays — palette_pays","text":"data frame 41 rows 5 variables: ISO3 character label_fr character label_en character HEX character R-V-B character","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_pays.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"palette_pays — palette_pays","text":"Source","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_principale.html","id":null,"dir":"Reference","previous_headings":"","what":"palette_principale — palette_principale","title":"palette_principale — palette_principale","text":"Description.","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_principale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"palette_principale — palette_principale","text":"","code":"palette_principale"},{"path":"https://ofce.github.io/ofce/reference/palette_principale.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"palette_principale — palette_principale","text":"data frame 8 rows 4 variables: Nom numeric Code character R-V-B character Observations character","code":""},{"path":"https://ofce.github.io/ofce/reference/palette_principale.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"palette_principale — palette_principale","text":"Source","code":""},{"path":"https://ofce.github.io/ofce/reference/scale_color_pays.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — scale_color_pays","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — scale_color_pays","text":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/scale_color_pays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — scale_color_pays","text":"","code":"scale_color_pays(list_iso3 = NULL, lang = NULL)"},{"path":"https://ofce.github.io/ofce/reference/scale_color_pays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — scale_color_pays","text":"list_iso3 chr, une liste de nom de pays lang chr, le choix de la langue c(\"fr\",\"en\")","code":""},{"path":"https://ofce.github.io/ofce/reference/scale_color_pays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — scale_color_pays","text":"une palette de couleur (format HEX)","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_blog.html","id":null,"dir":"Reference","previous_headings":"","what":"installe un squelette de présentation — setup_blog","title":"installe un squelette de présentation — setup_blog","text":"prépare un dossier, avec un exemple et les extensions nécessaires pour le formattage OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_blog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"installe un squelette de présentation — setup_blog","text":"","code":"setup_blog(dir = NULL, nom = NULL)"},{"path":"https://ofce.github.io/ofce/reference/setup_blog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"installe un squelette de présentation — setup_blog","text":"dir Répertoire à créer \"pres\" par défaut nom Nom du projet, \"pres\" par défaut,","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_english.html","id":null,"dir":"Reference","previous_headings":"","what":"Set RStudio to english dictionary — setup_english","title":"Set RStudio to english dictionary — setup_english","text":"Pour écrire en anglais dans RStudio Attention un dictionnaire ne garantit en rien la qualité de l'expression","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_english.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set RStudio to english dictionary — setup_english","text":"","code":"setup_english()"},{"path":"https://ofce.github.io/ofce/reference/setup_english.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set RStudio to english dictionary — setup_english","text":"","code":"if(interactive()) setup_english()"},{"path":"https://ofce.github.io/ofce/reference/setup_french.html","id":null,"dir":"Reference","previous_headings":"","what":"Set RStudio to french dictionary — setup_french","title":"Set RStudio to french dictionary — setup_french","text":"Pour écrire en français dans RStudio Attention un dictionnaire ne garantit en rien la qualité de l'expression","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_french.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set RStudio to french dictionary — setup_french","text":"","code":"setup_french()"},{"path":"https://ofce.github.io/ofce/reference/setup_french.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set RStudio to french dictionary — setup_french","text":"","code":"if(interactive()) setup_french()"},{"path":"https://ofce.github.io/ofce/reference/setup_pres.html","id":null,"dir":"Reference","previous_headings":"","what":"installe un squelette de présentation — setup_pres","title":"installe un squelette de présentation — setup_pres","text":"prépare un dossier, avec un exemple et les extensions nécessaires pour le formattage OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_pres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"installe un squelette de présentation — setup_pres","text":"","code":"setup_pres(dir = NULL, nom = NULL)"},{"path":"https://ofce.github.io/ofce/reference/setup_pres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"installe un squelette de présentation — setup_pres","text":"dir Répertoire à créer \"pres\" par défaut nom Nom du projet, \"pres\" par défaut,","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Extensions OFCE pour quarto — setup_quarto","title":"Extensions OFCE pour quarto — setup_quarto","text":"Installe gentiment les extensions quarto suivantles templates OFCE Trois templates sont prévus et s'insèrent dans un yml (ou dans la section yml) comme suit format: ofce-html: default # peut ajouter tous les champs html ofce-pdf: default # pour les pdf, à affiner ofce-revealjs: default # pour les présentations","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extensions OFCE pour quarto — setup_quarto","text":"","code":"setup_quarto(dir = \".\", quiet = FALSE)"},{"path":"https://ofce.github.io/ofce/reference/setup_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extensions OFCE pour quarto — setup_quarto","text":"dir Répertoire dans lequel l'extension est installée quiet Ne fait pas de bruit (défault FALSE)","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_quarto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extensions OFCE pour quarto — setup_quarto","text":"Il est possible de spécifier toutes les éléments habituels des formats sous jacents par la syntaxe habituelle Si le document à rendre est dans un dossier, il faut utiliser l'argument dir et l'extension sera installé à cet endroit","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_RStudio.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset RStudio prefs — setup_RStudio","title":"Reset RStudio prefs — setup_RStudio","text":"Principalement, pas d'enregistrement de l'environnement, pipe natif, ragg en backend graphique","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_RStudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset RStudio prefs — setup_RStudio","text":"","code":"setup_RStudio(theme = \"iPlastic\", right_console = TRUE)"},{"path":"https://ofce.github.io/ofce/reference/setup_RStudio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset RStudio prefs — setup_RStudio","text":"theme Theme à utiliser (défaut \"iPlastic\") right_console Met la console à droite (défaut TRUE)","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_RStudio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset RStudio prefs — setup_RStudio","text":"","code":"if(interactive()) setup_RStudio()"},{"path":"https://ofce.github.io/ofce/reference/setup_wp.html","id":null,"dir":"Reference","previous_headings":"","what":"installe un squelette de document de travail — setup_wp","title":"installe un squelette de document de travail — setup_wp","text":"prépare un dossier, avec un exemple et les extensions nécessaires pour le formattage OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_wp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"installe un squelette de document de travail — setup_wp","text":"","code":"setup_wp(dir = NULL, nom = NULL)"},{"path":"https://ofce.github.io/ofce/reference/setup_wp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"installe un squelette de document de travail — setup_wp","text":"dir Répertoire à créer \"wp\" par défaut nom Nom du projet, \"wp\" par défaut,","code":""},{"path":"https://ofce.github.io/ofce/reference/set_faicon_reveal.html","id":null,"dir":"Reference","previous_headings":"","what":"Modifie l'icône de titre pour la présentation — set_faicon_reveal","title":"Modifie l'icône de titre pour la présentation — set_faicon_reveal","text":"Attention cette fonction est un hack en attendant mieux Elle est assez fragile et peut ne pas fonctionner","code":""},{"path":"https://ofce.github.io/ofce/reference/set_faicon_reveal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modifie l'icône de titre pour la présentation — set_faicon_reveal","text":"","code":"set_faicon_reveal(path = \".\", unicode = \"f101\")"},{"path":"https://ofce.github.io/ofce/reference/set_faicon_reveal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modifie l'icône de titre pour la présentation — set_faicon_reveal","text":"path chemin vers la présentation à modifier (le dossier qui contient la présentation) icon code unicode hexa de l'icone (f101 par défaut)","code":""},{"path":"https://ofce.github.io/ofce/reference/set_fontsize_reveal.html","id":null,"dir":"Reference","previous_headings":"","what":"Modifie la taille de police pour revealjs — set_fontsize_reveal","title":"Modifie la taille de police pour revealjs — set_fontsize_reveal","text":"Attention cette fonction est un hack en attendant mieux Elle est assez fragile et peut ne pas fonctionner","code":""},{"path":"https://ofce.github.io/ofce/reference/set_fontsize_reveal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modifie la taille de police pour revealjs — set_fontsize_reveal","text":"","code":"set_fontsize_reveal(path = \".\", size = 20)"},{"path":"https://ofce.github.io/ofce/reference/set_fontsize_reveal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modifie la taille de police pour revealjs — set_fontsize_reveal","text":"path chemin vers la présentation à modifier (le dossier qui contient la présentation) size taille en \"px\" de la police pour revealjs (20 par défaut)","code":""},{"path":"https://ofce.github.io/ofce/reference/set_justify.html","id":null,"dir":"Reference","previous_headings":"","what":"Modifie la justification des textes en HTML — set_justify","title":"Modifie la justification des textes en HTML — set_justify","text":"Attention cette fonction est un hack en attendant mieux Elle est assez fragile et peut ne pas fonctionner","code":""},{"path":"https://ofce.github.io/ofce/reference/set_justify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modifie la justification des textes en HTML — set_justify","text":"","code":"set_justify(path = \".\", justify = TRUE, ext = \"ofce\")"},{"path":"https://ofce.github.io/ofce/reference/set_justify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modifie la justification des textes en HTML — set_justify","text":"path chemin vers le ou les documents HTML justify (boolean) TRUE pour justifier, FALSE pour aligner à gauche ext (string) extension des fichiers à modifier (ofce par défaut)","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilisation mémoire par objet — showMemoryUse","title":"Utilisation mémoire par objet — showMemoryUse","text":"Permet de lister les plus gros objets en mémoire et de connaître leur empreinte.","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilisation mémoire par objet — showMemoryUse","text":"","code":"showMemoryUse(   sort = \"size\",   decreasing = TRUE,   limit = 10,   envir = parent.frame() )"},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilisation mémoire par objet — showMemoryUse","text":"sort Variable sur lequel le tri est fait (défaut \"size\", alternative \"alphabetical\") decreasing En sens décroissant (défaut TRUE) limit Nombre de lignes affichées (défaut 10) envir l'environement dans lequel sont listé les objets. Mieux vaut ne pas le toucher si ne sait pas à quoi ça sert.","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utilisation mémoire par objet — showMemoryUse","text":"Une liste des objets en mémoire, invisible et affiche dans la console cette liste","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utilisation mémoire par objet — showMemoryUse","text":"copié de https://rdrr.io/github/zlfccnu/econophysics/ (merci!).","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilisation mémoire par objet — showMemoryUse","text":"","code":"showMemoryUse() #> [1] \"No objects\""},{"path":"https://ofce.github.io/ofce/reference/table_ofce.html","id":null,"dir":"Reference","previous_headings":"","what":"Thème OFCE pour les tableaux pour gt — table_ofce","title":"Thème OFCE pour les tableaux pour gt — table_ofce","text":"Applique le theme ofce compatible avec la norme de la Revue de l'OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/table_ofce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thème OFCE pour les tableaux pour gt — table_ofce","text":"","code":"table_ofce(data, ...)"},{"path":"https://ofce.github.io/ofce/reference/table_ofce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thème OFCE pour les tableaux pour gt — table_ofce","text":"data un objet gt base_family character(1) string, police de charactère du thème (Stone sans par défaut)","code":""},{"path":"https://ofce.github.io/ofce/reference/table_ofce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thème OFCE pour les tableaux pour gt — table_ofce","text":"un objet gt, décoré","code":""},{"path":"https://ofce.github.io/ofce/reference/theme.gt_ofce.html","id":null,"dir":"Reference","previous_headings":"","what":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","title":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","text":"Applique le theme ofce compatible avec la norme de la Revue de l'OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/theme.gt_ofce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","text":"","code":"theme.gt_ofce(data, largeur_colonne = NULL, ...)"},{"path":"https://ofce.github.io/ofce/reference/theme.gt_ofce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","text":"data un objet gt largeur_colonne largeur de colonne (en px) ... autres arguments à passer dans la fonction","code":""},{"path":"https://ofce.github.io/ofce/reference/theme.gt_ofce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","text":"un objet gt, décoré","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme foundation — theme_foundation","title":"Theme foundation — theme_foundation","text":"theme designed foundation build new themes, meant used directly. theme_foundation() complete theme minimal number elements defined. easier create new themes extending one rather theme_gray() theme_bw(), themes define elements deep hierarchy.","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme foundation — theme_foundation","text":"","code":"theme_foundation(une_base_size = 12, base_family = \"\")"},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme foundation — theme_foundation","text":"base_family base font family","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme foundation — theme_foundation","text":"un thème qui peut être utilisé dans ggplot","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theme foundation — theme_foundation","text":"theme takes theme_gray() sets colour fill values NULL, except top-level elements (line, rect, title), colour = \"black\", fill = \"white\". leaves spacing -non colour defaults default ggplot2 themes place.","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Thème OFCE 2 — theme_ofce.2","title":"Thème OFCE 2 — theme_ofce.2","text":"Applique le theme ofce compatible avec la norme des working papers d'autres éléments de la norme comme les couleurs, l'allure générale du graphique sont à introduire par ailleurs","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thème OFCE 2 — theme_ofce.2","text":"","code":"theme_ofce.2(   base_size = getOption(\"ofce.base_size\"),   base_family = getOption(\"ofce.base_family\"),   ... )"},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thème OFCE 2 — theme_ofce.2","text":"base_size double(1) Taille des éléments texte du thème. Peut être donné globalement par options(ofce.base_size=12). base_family character(1) string, police de charactère du thème (globalement et défaut options(ofce.base_family=\"Nunito\")) ... paramètres passés à theme()","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thème OFCE 2 — theme_ofce.2","text":"un thème qui peut être utilisé dans ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.html","id":null,"dir":"Reference","previous_headings":"","what":"theme OFCE — theme_ofce","title":"theme OFCE — theme_ofce","text":"Applique le theme ofce compatible avec la norme de la Revue de l'OFCE d'autres éléments de la norme comme les couleurs, l'allure générale du graphique sont à introduire par ailleurs","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme OFCE — theme_ofce","text":"","code":"theme_ofce(   base_size = getOption(\"ofce.base_size\"),   base_family = getOption(\"ofce.base_family\"),   marquee = FALSE,   ... )"},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme OFCE — theme_ofce","text":"base_size double(1) Taille des éléments texte du thème. Peut être donné globalement par options(ofce.base_size=12). base_family character(1) string, police de charactère du thème (globalement et défaut options(ofce.base_family=\"Nunito\")) ... paramètres passés à theme()","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"theme OFCE — theme_ofce","text":"un thème qui peut être utilisé dans ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/theme_ofce_void.html","id":null,"dir":"Reference","previous_headings":"","what":"Thème OFCE void — theme_ofce_void","title":"Thème OFCE void — theme_ofce_void","text":"Applique le theme ofce compatible avec la norme de la Revue de l'OFCE Convient pour des cartes par exemple","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce_void.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thème OFCE void — theme_ofce_void","text":"","code":"theme_ofce_void(   base_size = getOption(\"ofce.base_size\"),   base_family = getOption(\"ofce.base_family\"),   marquee = FALSE,   ... )"},{"path":"https://ofce.github.io/ofce/reference/theme_ofce_void.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thème OFCE void — theme_ofce_void","text":"base_size double(1) Taille des éléments texte du thème. Peut être donné globalement par options(ofce.base_size=12). base_family character(1) string, police de charactère du thème (globalement et défaut options(ofce.base_family=\"Nunito\")) ... paramètres passés à theme()","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce_void.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thème OFCE void — theme_ofce_void","text":"un thème qui peut être utilisé dans ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatte un vecteur en produisant des éléments distincts — uf2si2","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"Utilise f2si2 pour formatter un vecteur, et arrondi tant que les éléments formattés sont tous disctints. Cela permet de les utiliser dans une échelle ou pour des noms. Les nombres en entrée doivent être différents","code":""},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"","code":"uf2si2(number, rounding = TRUE, unit = \"median\", digits_max = 4)"},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"number le nombre ou le vecteur de nombre rounding doit-arrondir ? unit Arrondi soit à la \"median\" soit au \"max\" digits_max le nombre maximal de chiffres après la virgule","code":""},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"une chaine de charactères","code":""},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"","code":"uf2si2(c(1000,1100,2000,2100)) #> [1] \"1k\"   \"1.1k\" \"2k\"   \"2.1k\""},{"path":"https://ofce.github.io/ofce/news/index.html","id":"ofce-110","dir":"Changelog","previous_headings":"","what":"OFCE 1.1.0","title":"OFCE 1.1.0","text":"documentation et vignettes","code":""},{"path":"https://ofce.github.io/ofce/news/index.html","id":"ofce-100","dir":"Changelog","previous_headings":"","what":"OFCE 1.0.0","title":"OFCE 1.0.0","text":"première version avec notamment les fonctions ** theme_ofce() ** setup_quarto() ** setup_wp()","code":""}]
