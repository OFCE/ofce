[{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"créer-un-document-blog-à-laide-du-package-ofce","dir":"Articles","previous_headings":"","what":"Créer un document blog à l’aide du package ofce","title":"Procédures du blog","text":"La première étape est de générer un template d’un document quarto intégrant l’ensemble des méta-données assurant sa compilation dans le format souhaité (render) par Rstudio. Il suffit pour cela d’executer la commande suivante: setup_blog() qui va automatiquement générer un document quarto, l’ajout des extensions qui regroupent les métadonnées associées aux questions de style, ainsi qu’un document de gestion des références bibliographiques .bib","code":""},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"yaml-du-document","dir":"Articles","previous_headings":"","what":"Yaml du document","title":"Procédures du blog","text":"Le Yaml est le préambule au script inclus entre les caractères suivants --- --- qui regroupe les métadonnées du document ainsi que certains paramètres comme le titre ou le nom des auteurs. Il se présente de la façon suivante: Les seules informations à modifier par l’auteur sont les suivantes: title: name: url: categories: description: Dans le cas où l’auteur aurait d’autres affiliation, il conviendrait de modifier également les deux lignes suivantes: affiliation: affiliation-url:","code":"--- title: \"Titre du billet\" date: today author:   - name: Albertine Retrouvée     url: https://www.ofce.sciences-po.fr/ofce/chercheurs1.php     affiliation: OFCE      affiliation-url: https://www.ofce.sciences-po.fr/      institution: \"Observatoire Français des Conjonctures Économiques\"  format:   blog-html: default   blog-pdf: default categories: [\"keyword1\", \"keyword2\"] image: image.jpg description: \"Chapeau du texte qui apparait dans la vignette du billet sur le menu\"  # A activer pour permettre les commentaires via hypothesis (https://web.hypothes.is/) # comments: #   hypothesis: true  bibliography: billet_exemple_references.bib ---"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"rédaction-du-document","dir":"Articles","previous_headings":"","what":"Rédaction du document","title":"Procédures du blog","text":"La rédaction peut se faire sur Rstudio en mode source ou en mode visual (en haut à gauche de la fenêtre). Le mode source montre le code tel qu’il est écrit, tandis que le mode visual procède à donner un rendu visuel qui s’approche de celui final (See Get). Le mode visuel intègre un menu qui permet d’accéder aux différentes commandes de mise en forme via une interface ergonomique. Les templates suivants L’ajout de notes de bas de page se fait via la commande suivante sous Quarto [^] et comprends deux manières. Une première où est intégré dans le texte une balise [^] associée à un repère (un numéro) et auquel est ensuite associé une note de bas de page. La seconde est l’intégration directe de la note de bas de page au sein de la balise [^] (Exemple 2). Les citations sont indiqué par le caractère @ suivi de la référence bibliographique du bibtex de l’article à citer. Comme la souffrance va plus loin en psychologie que la psychologie [@ryan1991vanishing] L’auteur pourra se référer à l’aide en ligne Quarto pour des explications complémentaires sur ces deux points.","code":"# Exemple 1 «Mademoiselle Albertine est revenue!»[^1]  [^1]: Elle n'a jamais été perdue.  # Exemple 2  «Mademoiselle Albertine est revenue!»[^Elle n'a jamais été perdue.] Comme la souffrance va plus loin en psychologie que la psychologie [@ryan1991vanishing]  avec le BibteX dans le fichier .bib associé au billet:  @book{ryan1991vanishing,   title={The vanishing subject: early psychology and literary modernism},   author={Ryan, Judith},   year={1991},   publisher={University of Chicago Press} }"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"gestion-des-notes-de-bas-de-page-et-des-références-bibliographiques","dir":"Articles","previous_headings":"","what":"Gestion des notes de bas de page et des références bibliographiques","title":"Procédures du blog","text":"L’ajout de notes de bas de page se fait via la commande suivante sous Quarto [^] et comprends deux manières. Une première où est intégré dans le texte une balise [^] associée à un repère (un numéro) et auquel est ensuite associé une note de bas de page. La seconde est l’intégration directe de la note de bas de page au sein de la balise [^] (Exemple 2).","code":"# Exemple 1 «Mademoiselle Albertine est revenue!»[^1]  [^1]: Elle n'a jamais été perdue.  # Exemple 2  «Mademoiselle Albertine est revenue!»[^Elle n'a jamais été perdue.]"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"gestion-des-références-bibliographiques","dir":"Articles","previous_headings":"","what":"Gestion des références bibliographiques","title":"Procédures du blog","text":"Les citations sont indiqué par le caractère @ suivi de la référence bibliographique du bibtex de l’article à citer. Comme la souffrance va plus loin en psychologie que la psychologie [@ryan1991vanishing] L’auteur pourra se référer à l’aide en ligne Quarto pour des explications complémentaires sur ces deux points.","code":"Comme la souffrance va plus loin en psychologie que la psychologie [@ryan1991vanishing]  avec le BibteX dans le fichier .bib associé au billet:  @book{ryan1991vanishing,   title={The vanishing subject: early psychology and literary modernism},   author={Ryan, Judith},   year={1991},   publisher={University of Chicago Press} }"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"transmission-au-responsable-du-blog-et-circuit-de-relecture","dir":"Articles","previous_headings":"","what":"Transmission au responsable du blog et circuit de relecture","title":"Procédures du blog","text":"La transmission du billet au responsable du blog doit se faire directement sur le repo du blog du Github de l’OFCE à l’aide d’un pull request, et en assignant le responsable (pour plus d’information, voir la page suivante). Ce dernier aura ensuite la charge de l’organisation du circuit de relecture (pour plus d’information, voir la page blog_reviewers). La transmission du billet au responsable du blog s’effectue par un envoi du dossier du billet comprenant l’ensemble des élements nécessaires à sa compilation (le document .qmd, le fichier de références .bib, les images et les données): Dossier du billet en format .qmd L’organisation de la relecture et du versionnage du document se fait sur une branche Github dédiée. L’auteur se verra notifier par mail des évolutions du statut du document, et le cas échéant de l’intégration des remarques et commentaires. Une fois le processus de relecture aboutit, le responsable pourra accepter le pull_request, et introduire la version finalisée du billet sur la branche principale à partir de laquelle le site est généré. PS: Dans le cas où des modifications ultérieures devraient être apportées, l’auteur devra réitérer la même procédure de pull_request que pour la soumission initiale, et ce sera au responsable de s’assurer de leur intégration à la branche principale.","code":"├── Billet.qmd              // Document texte du billet ├── figures/                // Dossier des images utilisées dans le document │   ├── IMG_01.png          // fichier image 1 │   └── ...                 // fichier image ... ├── data/                   // Dossier des dataset associés aux graphiques │   ├── dataset_01.csv      // fichier csv 1 │   └── ...                 // fichier csv ... └── billet_references.bib   // fichier des citations en format .bibtex"},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"procédure-principale-via-github","dir":"Articles","previous_headings":"","what":"Procédure principale via Github","title":"Procédures du blog","text":"La transmission du billet au responsable du blog doit se faire directement sur le repo du blog du Github de l’OFCE à l’aide d’un pull request, et en assignant le responsable (pour plus d’information, voir la page suivante). Ce dernier aura ensuite la charge de l’organisation du circuit de relecture (pour plus d’information, voir la page blog_reviewers).","code":""},{"path":"https://ofce.github.io/ofce/articles/blog.html","id":"procédure-alternative-et-de-dernier-recours","dir":"Articles","previous_headings":"","what":"Procédure alternative et de dernier recours","title":"Procédures du blog","text":"La transmission du billet au responsable du blog s’effectue par un envoi du dossier du billet comprenant l’ensemble des élements nécessaires à sa compilation (le document .qmd, le fichier de références .bib, les images et les données): Dossier du billet en format .qmd L’organisation de la relecture et du versionnage du document se fait sur une branche Github dédiée. L’auteur se verra notifier par mail des évolutions du statut du document, et le cas échéant de l’intégration des remarques et commentaires. Une fois le processus de relecture aboutit, le responsable pourra accepter le pull_request, et introduire la version finalisée du billet sur la branche principale à partir de laquelle le site est généré. PS: Dans le cas où des modifications ultérieures devraient être apportées, l’auteur devra réitérer la même procédure de pull_request que pour la soumission initiale, et ce sera au responsable de s’assurer de leur intégration à la branche principale.","code":"├── Billet.qmd              // Document texte du billet ├── figures/                // Dossier des images utilisées dans le document │   ├── IMG_01.png          // fichier image 1 │   └── ...                 // fichier image ... ├── data/                   // Dossier des dataset associés aux graphiques │   ├── dataset_01.csv      // fichier csv 1 │   └── ...                 // fichier csv ... └── billet_references.bib   // fichier des citations en format .bibtex"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ofce.github.io/ofce/articles/graphiques.html","id":"ggplot2","dir":"Articles","previous_headings":"","what":"ggplot2","title":"Faire un graphique","text":"La façon préférée de faire un graphique est ggplot2. Elle est la plus flexible, permet d’avoir une source unique, peut être facilement modifiée (uniformisation, traduction, correction, raffinements) et s’intègre parfaitement en html et en pdf. Avec un faible coût peut rendre le graphique interactif (avec plotly ou ggiraph). Un graphique ggplot doit contenir une couche (layer) theme_ofce() et limiter au maximum les définitions de taille (par exemple de police de caractère). Ces définitions doivent être faites de façon globale pour assurer l’homogénéité. Il est important de ne pas définir la taille de la figure, ça risque de produire des images avec des caractères trop petits. Pour changer les dimensions d’un graphique, il faut utiliser1 #| fig-asp : x ou x est le ratio entre la hauteur et la longueur. 0.61 est la valeur par défaut et correspond au nombre d’soit entre 16/9 et 16/10. Pour des graphiques particuliers (par exemple deux graphiques empilés ou une carte) peut mettre 1 (format carré) ou 1.4 quand veut prendre toute la page A4. Le code d’un graphique ggplot2 :","code":"#| label: fig-tauxapp #| fig-cap: Taux de taxation apparent sur le patrimoine des ménages #| fig-asp: 0.61 # pas besoin d'en mettre plus, echo, message, warning sont déjà définis # les données sont dans excel -- elles pourraient venir de R ou d'ailleurs data <- readxl::read_xlsx(\"analyses/Tables/patrimoine menages.v2.xlsx\", sheet = \"tapp\")   names(data) <- c(\"date\", \"vn\", \"pib\") data <- data |> mutate(date = lubridate::ym(str_c(date, \"-01\"))) |>    pivot_longer(cols  = c(vn, pib)) |>    mutate(name = factor(name, c(\"vn\", \"pib\"),                        c(\"En % de la valeur nette\", \"En % du PIB\")))                         # un ggplot et ses différentes couches ggplot(data) +    aes(x = date, y = value, group = name, col = name, fill = name) +   geom_line(linewidth = 1) +   geom_point(shape = 21, col = \"white\", size = 2) +   # important utiliser le theme_ofce pour uniformiser l'aspect des graphiques   theme_ofce(legend.position = \"bottom\") +   # scale date est important lorsqu'on présente des données temporelles   # il faut penser à convertir les dates en dates (as.Date() ou lubridate::ymd() et consorts)   # c'est important même si les dates ne sont que des années   # ca permet aussi de mélanger facilement des fréquences différentes   scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\",                 date_minor_breaks = \"year\") +   # le choix des couleurs est tjrs délicat, Paul Malliet est un maître en la matière   # uniformiser ses choix de couleurs le long d'un document c'est bien   # donner une signification à ses couleurs c'est mieux   # quand en plus c'est harmonieux, c'est PM (plus que mieux ou Paul Malliet)   PrettyCols::scale_color_pretty_d(name = NULL, palette = \"Summer\") +   PrettyCols::scale_fill_pretty_d(name = NULL, palette = \"Summer\") +   ylab(\"%\") + xlab(NULL) +   # les sources -- notez qu'on ne met pas de titre au graphique    # (voir la section références croisées)   labs(caption =          \"La fiscalité sur le patrimoine est composée ici de la taxe foncière payée par les ménages, <br>        des droits d'enregistrement sur les transactions immobilières, des droits de mutation sur les successions et les donations et de l'Impôt sur la Fortune Immobilière (ex-ISF)<br>        *Sources* : Insee, calculs OFCE\")"},{"path":"https://ofce.github.io/ofce/articles/graphiques.html","id":"copier-coller","dir":"Articles","previous_headings":"","what":"Copier-coller","title":"Faire un graphique","text":"peut copier coller un graphique (de word, d’excel, d’ailleurs) dans le mode visuel de RStudio. Ça marche mais c’est pas le mieux. Quand copie colle, fait quelque chose qui ressemble à l’option qui suit.","code":""},{"path":"https://ofce.github.io/ofce/articles/graphiques.html","id":"image-au-format-pngjpegjpgsvg","dir":"Articles","previous_headings":"","what":"Image au format png/jpeg/jpg/svg","title":"Faire un graphique","text":"peut enregistrer une image (au format que l’veut, quarto accepte pas mal d’options, dont les plus courantes) et l’insérer dans le texte. Il y deux façon de faire soit en markdown (dans le qmd, comme un lien ou autre chose), soit en utilisant include_graphics. L’intérêt par rapport au copier-coller est que si change le fichier qui contient l’image, à chaque render du document, la bonne (la dernière version) image sera utilisée. Si utilise des images venant de eviews 💀 ou stata 😵, c’est la meilleure méthode. Le répertoire est toujours relatif. Jamais de chemin absolu comme “c:/user/machin/montravail/monrepo/monimage.png” parce que ça ne marchera pas sur un autre ordinateur et en plus github ne copiera pas l’image) et par celui qui contient le .qmd. Il est toujours possible de mettre les images dans un sous dossier. Plus c’est simple et clair, mieux c’est (.e. gardez les noms courts, explicites, pas de majuscules, bien rangés, conservateurs dans l’utilisation des caractères (pas d’accents, pas de blancs, pas de symboles spéciaux). Donc donnees/img.png ou donnees/graphique 1a5.png ne sont pas des bons noms. Mais figures/revenu.png ou figures/pib_par_tete.png sont mieux. Notez la cohérence des id, nom et titre.","code":"[Titre de la figure](rep/fig.png) #| label fig-pib2008_2024 #| fig-cap: PIB entre 2008 et 2024  knitr::include_graphics(\"pib2008_2024.png\")"},{"path":"https://ofce.github.io/ofce/articles/graphiques.html","id":"les-autres-packages","dir":"Articles","previous_headings":"","what":"Les autres packages","title":"Faire un graphique","text":"peut faire des graphiques avec d’autres packages dans R, voire même utiliser base R. Nous ne recommandons pas cette voie, parce qu’elle rend très difficile l’harmonisation des graphiques et les fonctionnalités avancées. Parfois, cependant, il n’y pas d’autres solutions.","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"quelques-conseils-décriture-et-de-format","dir":"Articles","previous_headings":"","what":"Quelques conseils d’écriture et de format","title":"Premiers pas avec Quarto","text":"Tout commence par un .qmd. Il doit être placé dans un sous dossier du projet général, pour être rangé de façon compréhensible par tout le monde. Demandez à votre administratrice de projet les règles qu’elle souhaite voir appliquées. Un exemple de projet est ci-dessous. Il ne respecte pas toutes les règles recommandées, mais c’est souvent comme ça. Notez les fichiers importants : _quarto.yml : dans lequel sont spécifiés les options principales et communes ainsi que les menus et la structure du site index.qmd qui est la page de démarrage du site et qui doit toujours être à la racine du projet et s’appeler index.qmd rinit.r qui contient des options par défaut pour les chunks R README.md qui apparaît sur la première page du projet sur github.com _extensions qui contient tous les templates quarto, il faut absolument que ce dossier soit présent (et il ne faut pas y toucher). Donnez un nom simple (court, explicite, pas de majuscules, pas de caractères spéciaux), pour que le contenu soit clair, mais aussi qu’il soit facile à retaper quelque part si nécessaire. Les noms à rallonge sont donc à proscrire. Tâchez aussi d’éviter la multiplication des versions dans le dossier (dont une seule est ok), si vous avez des déchets, mettez dans un sous dossier spécifique (moi je l’appelle rkiv) de façon à garder les vieux morceaux d’essais. Le .qmd est très simple, l’entête yaml n’besoin que d’un champ : le titre. L’auteur est aussi utile, mais pas obligatoire. Pas besoin d’ajouter un format (ils sont communs au site et défini dans _quarto.yml), ni d’options spécifiques (définies aussi ailleurs). Eventuellement, peut ajouter des éléments spécifiques au texte comme le champ date ou keyword ou bibliography. Notez qu’il n’y pas de section de niveau header 1. Ce n’est pas possible parce qu’il y un titre et que le titre est considéré comme la section header 1 : une alternative au titre dans le yml est une section de niveau header 1 ou simple #. S’il n’y pas d’auteur ou d’autre champ, l’ensemble yml peut être omis avec simplement le header 1. Dernier petit détail, il faut sourcer le fichier rinit.r. Ce fichier définit les options par défaut des chunks et permet d’avoir les bonnes polices de caractère dans la bonne taille pour tous les graphiques. Il faut le mettre au début et à part pour que ces options s’appliquent aux chunks suivants. Si vos graphiques sont moches, si les polices de caractère sont toutes petites, avant d’appeler à l’aide, vérifiez 1. sur rinit.r est bien sourcé 2. que vous n’avez pas un fig-width ou un fig-heigth quelque part dans le chunk ou dans le yml. Gardez vos yml les plus simples possibles, c’est le moyen d’assurer l’homogénéité des documents sur le site. Quarto.org est une excellente source d’informations et d’aide sur l’écriture en markdown et la variante particulière que nous utilisons ici. La section “Authoring” est à avoir lu au moins une fois. Grace à quarto et un filtre développé par Romain Lesur de l’INSEE, les règles typographiques standards au français sont appliquées automatiquement. Par exemple les guillemets sont mis conformément à la pratique en France «…» à partir du caractère tapé directement (“). Les espaces avant les signes de ponctuation ( : ;) sont remplacés par des demi cadratins et les espaces séparateurs des milliers sont remplacés par des espaces insécables. Pas besoin donc de s’embêter avec ça. Juste, pensez à mettre les espaces avant”:“. Pour un document en anglais, il suffit de rajouter dans le yml la langue anglaise pour que la typographie correspondante soit appliquée. Les principaux champs (date, auteur, tableau, figure, graphique) sont aussi traduits. Les références croisées demandent un peu de soin, mais permettent de produire des documents plus propres dans lesquels : La numérotation des tableaux et figures, mais aussi tout autre type de documents (un encadré par ex.) est faite automatiquement. La mise en page est automatisée (avec quelques gains en html), les mots récurrents sont traduits automatiquement. peut appeler la référence croisée dans le texte. En html, cela créé un lien qui permet de naviguer directement vers la référence croisée. peut générer des tables des tableaux et des figures. Le secret d’une référence croisée c’est l’instruction (le tag) #| que l’met en tête d’un chunk. label est l’id du document. Il définit le type (fig pour un graphique ; tbl pour un tableau ; tip pour un encadré ; eq pour une équation) et après le tiret le nom (sans espace ni tiret) qui sera appelé dans le texte par la séquence @fig-id (voir quarto cross references pour plus de détails). définit également le titre du graphique qui est donc identifié pour être mis en page, utilisé par ailleurs (par exemple la table des figures) et agrémenté des mots récurrents (par exemple tableau pour un tableau, donc ne met pas dans le titre tableau ou son numéro). Pour un graphique (ne met pas le numéro du graphique dans le titre, c’est fait automatiquement) : Pour un tableau (ne met pas le numéro du tableau dans le titre, c’est fait automatiquement) : Pour un encadré, c’est un peu plus compliqué (pour le moment). tip est le hack pour la catégorie, .callout-tip pour le style. Le champ collapse permet de replier l’encadré par défaut et l’option \"false\" (notez les guillemets et les minuscules) permet de le déplier par défaut. Il est très facile d’insérer une bibliogrphie. La première chose est d’indiquer un (ou plusieurs) fichier .bib à quarto : Le fichier references.bib doit être à la racine du projet et contient dans la syntaxe bibtex les références. Pour entrer une référence, avec RStudio, il y plusieurs façon de faire. Dans RStudio, en mode visuel, fait insérer une citation. Plusieurs sources sont possibles : Zotero, un DOI, une recherche sur Crossref, etc… Directement en copiant dans le .bib les références (peut ainsi utiliser la biblio d’un autre document). Les appels de références sont alors simplement fait en utilisant @angel2021 où angel2021 est l’id de la référence. L’appel de référence, la biblio sera insérée et formattée automatiquement. Les appels de référence peuvent se mettre également en note de bas de page ou dans un tableau en syntaxe markdown.","code":"legislatives2024   _quarto.yml   index.qmd   about.qmd   rinit.r   README.md   .gitignore   _extensions/     ofce/       ...   programmes/     rn.qmd     nfp.qmd     Comparatif programmes législatives 2024.xlsx     ...   analyses/     transition.qmd     tissu_productif.qmd     ...     Tables/       Tableau_retraite.xlsx       Spreads.xlsx       spread.rds       ... --- title: Mon texte en qmd author: Georgette ---  ```{r, include=FALSE} source(\"../rinit.r\") ```  ## section 1  blabla  ## section 2  blabla --- title: English Version of the Document author: William lang: en --- #| label: fig-id #| fig-cap: Le titre du graphique #| fig-asp: 0.8 #| label: tbl-id #| tbl-cap: Le titre du tableau ::: {#tip-id .callout-tip collapse=\"true\"} ## titre de l'encadré texte de l'encadré ::: --- title: Mon titre bibliography: references.bib ---"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"au-commencement","dir":"Articles","previous_headings":"","what":"Au commencement","title":"Premiers pas avec Quarto","text":"Tout commence par un .qmd. Il doit être placé dans un sous dossier du projet général, pour être rangé de façon compréhensible par tout le monde. Demandez à votre administratrice de projet les règles qu’elle souhaite voir appliquées. Un exemple de projet est ci-dessous. Il ne respecte pas toutes les règles recommandées, mais c’est souvent comme ça. Notez les fichiers importants : _quarto.yml : dans lequel sont spécifiés les options principales et communes ainsi que les menus et la structure du site index.qmd qui est la page de démarrage du site et qui doit toujours être à la racine du projet et s’appeler index.qmd rinit.r qui contient des options par défaut pour les chunks R README.md qui apparaît sur la première page du projet sur github.com _extensions qui contient tous les templates quarto, il faut absolument que ce dossier soit présent (et il ne faut pas y toucher). Donnez un nom simple (court, explicite, pas de majuscules, pas de caractères spéciaux), pour que le contenu soit clair, mais aussi qu’il soit facile à retaper quelque part si nécessaire. Les noms à rallonge sont donc à proscrire. Tâchez aussi d’éviter la multiplication des versions dans le dossier (dont une seule est ok), si vous avez des déchets, mettez dans un sous dossier spécifique (moi je l’appelle rkiv) de façon à garder les vieux morceaux d’essais. Le .qmd est très simple, l’entête yaml n’besoin que d’un champ : le titre. L’auteur est aussi utile, mais pas obligatoire. Pas besoin d’ajouter un format (ils sont communs au site et défini dans _quarto.yml), ni d’options spécifiques (définies aussi ailleurs). Eventuellement, peut ajouter des éléments spécifiques au texte comme le champ date ou keyword ou bibliography. Notez qu’il n’y pas de section de niveau header 1. Ce n’est pas possible parce qu’il y un titre et que le titre est considéré comme la section header 1 : une alternative au titre dans le yml est une section de niveau header 1 ou simple #. S’il n’y pas d’auteur ou d’autre champ, l’ensemble yml peut être omis avec simplement le header 1. Dernier petit détail, il faut sourcer le fichier rinit.r. Ce fichier définit les options par défaut des chunks et permet d’avoir les bonnes polices de caractère dans la bonne taille pour tous les graphiques. Il faut le mettre au début et à part pour que ces options s’appliquent aux chunks suivants. Si vos graphiques sont moches, si les polices de caractère sont toutes petites, avant d’appeler à l’aide, vérifiez 1. sur rinit.r est bien sourcé 2. que vous n’avez pas un fig-width ou un fig-heigth quelque part dans le chunk ou dans le yml. Gardez vos yml les plus simples possibles, c’est le moyen d’assurer l’homogénéité des documents sur le site. Quarto.org est une excellente source d’informations et d’aide sur l’écriture en markdown et la variante particulière que nous utilisons ici. La section “Authoring” est à avoir lu au moins une fois.","code":"legislatives2024   _quarto.yml   index.qmd   about.qmd   rinit.r   README.md   .gitignore   _extensions/     ofce/       ...   programmes/     rn.qmd     nfp.qmd     Comparatif programmes législatives 2024.xlsx     ...   analyses/     transition.qmd     tissu_productif.qmd     ...     Tables/       Tableau_retraite.xlsx       Spreads.xlsx       spread.rds       ... --- title: Mon texte en qmd author: Georgette ---  ```{r, include=FALSE} source(\"../rinit.r\") ```  ## section 1  blabla  ## section 2  blabla"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"les-règles-typographiques","dir":"Articles","previous_headings":"","what":"les règles typographiques","title":"Premiers pas avec Quarto","text":"Grace à quarto et un filtre développé par Romain Lesur de l’INSEE, les règles typographiques standards au français sont appliquées automatiquement. Par exemple les guillemets sont mis conformément à la pratique en France «…» à partir du caractère tapé directement (“). Les espaces avant les signes de ponctuation ( : ;) sont remplacés par des demi cadratins et les espaces séparateurs des milliers sont remplacés par des espaces insécables. Pas besoin donc de s’embêter avec ça. Juste, pensez à mettre les espaces avant”:“. Pour un document en anglais, il suffit de rajouter dans le yml la langue anglaise pour que la typographie correspondante soit appliquée. Les principaux champs (date, auteur, tableau, figure, graphique) sont aussi traduits.","code":"--- title: English Version of the Document author: William lang: en ---"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"les-références-croisées","dir":"Articles","previous_headings":"","what":"Les références croisées","title":"Premiers pas avec Quarto","text":"Les références croisées demandent un peu de soin, mais permettent de produire des documents plus propres dans lesquels : La numérotation des tableaux et figures, mais aussi tout autre type de documents (un encadré par ex.) est faite automatiquement. La mise en page est automatisée (avec quelques gains en html), les mots récurrents sont traduits automatiquement. peut appeler la référence croisée dans le texte. En html, cela créé un lien qui permet de naviguer directement vers la référence croisée. peut générer des tables des tableaux et des figures. Le secret d’une référence croisée c’est l’instruction (le tag) #| que l’met en tête d’un chunk. label est l’id du document. Il définit le type (fig pour un graphique ; tbl pour un tableau ; tip pour un encadré ; eq pour une équation) et après le tiret le nom (sans espace ni tiret) qui sera appelé dans le texte par la séquence @fig-id (voir quarto cross references pour plus de détails). définit également le titre du graphique qui est donc identifié pour être mis en page, utilisé par ailleurs (par exemple la table des figures) et agrémenté des mots récurrents (par exemple tableau pour un tableau, donc ne met pas dans le titre tableau ou son numéro). Pour un graphique (ne met pas le numéro du graphique dans le titre, c’est fait automatiquement) : Pour un tableau (ne met pas le numéro du tableau dans le titre, c’est fait automatiquement) : Pour un encadré, c’est un peu plus compliqué (pour le moment). tip est le hack pour la catégorie, .callout-tip pour le style. Le champ collapse permet de replier l’encadré par défaut et l’option \"false\" (notez les guillemets et les minuscules) permet de le déplier par défaut.","code":"#| label: fig-id #| fig-cap: Le titre du graphique #| fig-asp: 0.8 #| label: tbl-id #| tbl-cap: Le titre du tableau ::: {#tip-id .callout-tip collapse=\"true\"} ## titre de l'encadré texte de l'encadré :::"},{"path":"https://ofce.github.io/ofce/articles/quarto.html","id":"la-bibliographie","dir":"Articles","previous_headings":"","what":"La bibliographie","title":"Premiers pas avec Quarto","text":"Il est très facile d’insérer une bibliogrphie. La première chose est d’indiquer un (ou plusieurs) fichier .bib à quarto : Le fichier references.bib doit être à la racine du projet et contient dans la syntaxe bibtex les références. Pour entrer une référence, avec RStudio, il y plusieurs façon de faire. Dans RStudio, en mode visuel, fait insérer une citation. Plusieurs sources sont possibles : Zotero, un DOI, une recherche sur Crossref, etc… Directement en copiant dans le .bib les références (peut ainsi utiliser la biblio d’un autre document). Les appels de références sont alors simplement fait en utilisant @angel2021 où angel2021 est l’id de la référence. L’appel de référence, la biblio sera insérée et formattée automatiquement. Les appels de référence peuvent se mettre également en note de bas de page ou dans un tableau en syntaxe markdown.","code":"--- title: Mon titre bibliography: references.bib ---"},{"path":"https://ofce.github.io/ofce/articles/site.html","id":"comment-contribuer-pull-request","dir":"Articles","previous_headings":"","what":"Comment contribuer : pull request","title":"Des sites dédiés","text":"Pour contribuer nous vous demandons de suivre une procédure stricte. Elle peut paraître compliquée, mais elle est fluide et permet d’éviter des bêtises. En effet, la branche master et la branche du site (gh-pages) sont protégées : il faut des droits administrateur pour les modifier. Cela évite les mauvaises manipulations et sécurise le site. Il est possible d’utiliser plusieurs outils pour travailler. Le premier combo est RStudio, combiné à github desktop et github.com. Une alternative est VSCode qui regroupe l’éditeur quarto et l’interface github dans un même logiciel. La vignette(\"outils\") détaille les configurations et les instructions d’installation. créer une branche à partir de master. C’est simple avec github desktop (menu branch/new branch). Cette branche est modifiable par celui qui l’créée (mais aussi par d’autres, s’il le souhaite, ce qui peut permettre la mise au point). Elle contient une copie de master donc vous pouvez tout modifier dedans. Cependant, afin d’éviter le chaos, il est préférable de modifier le contenu pour lequel est contributeur et s’en tenir à ça. Si vous voulez corriger le contenu d’autres auteurs ou intervenir sur la structure générale c’est bien sûr possible. Si vous continuez sur votre branche, elle est sans doute en retard. Vous pouvez la mettre à jour à partir de master (menu branch/Update master dans github desktop) afin d’éviter de vous trouver trop en retard et Vous pouvez aussi faire un merge de master dans votre branche. Ne pas le faire va multiplier les conflits et rendre l’inclusion de vos modifications pénibles. Modifier, ajouter, bricoler et… tester. Dans RStudio vous pouvez à tout moment faire un render du site (bouton render). Si ça ne marche pas dans votre branche, il y peu de chance que ça s’arrange tout seul en suite. Vous pouvez toujours appeler à l’aide quand ça ne marche pas. Vérifiez que les liens sont bons, que la mise en page vous convient, etc. chaque fois que vous avez franchi une étape dans votre travail, faites un commit. Pas besoin nécessairement de le pusher (c’est mieux pour sauvegarder ou partager avec quelqu’un ce qu’il y dans votre branche). Un commit c’est une sauvegarde. Avant de lancer une nouvelle tâche, faites le commit, ça pourra toujours servir et il n’y pas d’excès de commit. Quand vous êtes satisfait, vous faites une pull request (facile dans github desktop, il le propose une fois pushé votre dernier commit). La pull request n’est possible que lorsque tous vos changements sont commités et que votre branche est pushée. La possibilité de le faire apparaît dans la fenêtre principale de github desktop lorsque les conditions sont réunies. Si vous êtes consciencieux, vous pouvez vérifier que votre branche est compatible avec master et faire le merge. Passez par le menu branch/update master avant de faire la pull request. Cela permet de vérifier (et de résoudre) les éventuels conflits qui existeraient entre votre branche la branche master. Une fois la pull request envoyée, elle va être validée par les administrateurs (et les conflits résolus si vous ne l’avez pas fait). Au moment de la pull request vous pouvez assigner un reviewer. Une fois validée, votre branche est intégrée (mergée) à la branche master ce qui permettra de mettre à jour le site en ligne et de détruire votre branche. (Pourquoi la détruire ? 1. votre travail est intégré dans master donc il est en sécurité, 2. si vous refaites des modifications, il faut partir de la dernière version disponible, .e. master et non pas votre branche qui va devenir très en retard).","code":""},{"path":"https://ofce.github.io/ofce/articles/site.html","id":"comment-faire","dir":"Articles","previous_headings":"","what":"Comment faire ?","title":"Des sites dédiés","text":"créer une branche à partir de master. C’est simple avec github desktop (menu branch/new branch). Cette branche est modifiable par celui qui l’créée (mais aussi par d’autres, s’il le souhaite, ce qui peut permettre la mise au point). Elle contient une copie de master donc vous pouvez tout modifier dedans. Cependant, afin d’éviter le chaos, il est préférable de modifier le contenu pour lequel est contributeur et s’en tenir à ça. Si vous voulez corriger le contenu d’autres auteurs ou intervenir sur la structure générale c’est bien sûr possible. Si vous continuez sur votre branche, elle est sans doute en retard. Vous pouvez la mettre à jour à partir de master (menu branch/Update master dans github desktop) afin d’éviter de vous trouver trop en retard et Vous pouvez aussi faire un merge de master dans votre branche. Ne pas le faire va multiplier les conflits et rendre l’inclusion de vos modifications pénibles. Modifier, ajouter, bricoler et… tester. Dans RStudio vous pouvez à tout moment faire un render du site (bouton render). Si ça ne marche pas dans votre branche, il y peu de chance que ça s’arrange tout seul en suite. Vous pouvez toujours appeler à l’aide quand ça ne marche pas. Vérifiez que les liens sont bons, que la mise en page vous convient, etc. chaque fois que vous avez franchi une étape dans votre travail, faites un commit. Pas besoin nécessairement de le pusher (c’est mieux pour sauvegarder ou partager avec quelqu’un ce qu’il y dans votre branche). Un commit c’est une sauvegarde. Avant de lancer une nouvelle tâche, faites le commit, ça pourra toujours servir et il n’y pas d’excès de commit. Quand vous êtes satisfait, vous faites une pull request (facile dans github desktop, il le propose une fois pushé votre dernier commit). La pull request n’est possible que lorsque tous vos changements sont commités et que votre branche est pushée. La possibilité de le faire apparaît dans la fenêtre principale de github desktop lorsque les conditions sont réunies. Si vous êtes consciencieux, vous pouvez vérifier que votre branche est compatible avec master et faire le merge. Passez par le menu branch/update master avant de faire la pull request. Cela permet de vérifier (et de résoudre) les éventuels conflits qui existeraient entre votre branche la branche master. Une fois la pull request envoyée, elle va être validée par les administrateurs (et les conflits résolus si vous ne l’avez pas fait). Au moment de la pull request vous pouvez assigner un reviewer. Une fois validée, votre branche est intégrée (mergée) à la branche master ce qui permettra de mettre à jour le site en ligne et de détruire votre branche. (Pourquoi la détruire ? 1. votre travail est intégré dans master donc il est en sécurité, 2. si vous refaites des modifications, il faut partir de la dernière version disponible, .e. master et non pas votre branche qui va devenir très en retard).","code":""},{"path":"https://ofce.github.io/ofce/articles/site.html","id":"quelques-conseils-aux-administrateurs-de-projets","dir":"Articles","previous_headings":"","what":"Quelques conseils aux administrateurs de projets","title":"Des sites dédiés","text":"Définissez à l’avance la structure du projet et communiquez là aux auteurs. Parfois, envie de changer en cours de route, c’est toujours possible, mais source de confusion et potentiellement d’erreurs. Protégez la branche master et définissez ceux qui ont droit de la modifier. Cela évitera aussi de nombreuses erreurs. Protégez aussi gh-pages. Ces opérations se réalisent très simplement depuis github.com. Si votre dépôt est sur OFCE, il sera lisible par les membres de l’OFCE et les admins d’OFCE pourront intervenir dessus. Si il est dans votre espace personnel, vous êtes seul maître à bord et donc sans assistance possible. Au démarrage du projet, il y quelques configurations à faire. Rien de compliqué, mais c’est dispersé dans de nombreux écrans. Une fois configuré, c’est assez simple à faire fonctionner. Ne bricolez pas trop le _quarto.yml. Certaines options assurent l’homogénéité des sites entre eux. Pensez faire aussi ofce::quarto_setup() dans R pour s’assurer d’avoir la dernière version des templates. Attention, il faut quand même modifier le _quarto.yml puisqu’il contient la structure des menus et l’architecture du site, ainsi que les twitter cards ou le numéro google analytics. N’hésitez pas à la faire la police (qmd dans les bons dossiers, yml nettoyés, chasse aux chemins absolus. force, les déviances devraient se réduire. Répondez rapidement aux pull request. est souvent impatient de voir son travail déployé.","code":""},{"path":"https://ofce.github.io/ofce/articles/tableaux.html","id":"comment-faire-un-tableau","dir":"Articles","previous_headings":"","what":"Comment faire un tableau","title":"Recommandations pour les tableaux OFCE","text":"Pour faire un tableau, nous conseillons vivement d’utiliser gt. Le principe est assez simple, un peu comme dans ggplot2 ajoute des couches qui petit à petit construisent le tableau. Ca peut paraître fastidieux, mais ça ne l’est pas tant que ça : c’est ce qu’fait dans excel ou word pour mettre en forme un tableau. L’intérêt de gt c’est de dissocier la phase données de la phase mise en page. Le manuel de gt est d’une lecture simple, avec plein d’exemples : Easily Create Presentation-Ready Display Tables • gt (rstudio.com) Le code d’un gt est du genre : Le pire du pire est de mettre le tableau comme une copie d’écran d’excel ou d’un pdf. C’est à banir. Moins pire est d’utiliser la syntaxe markdown. Ca peut paraître plus simple mais c’est rapidement dépassé et permet très peu de présentation avancée.","code":"library(gt)  # le fichier excel est préformaté, un onglet contient les données  # prêtes à l'utilisation readxl::read_xlsx(   \"analyses/Tables/patrimoine menages.v2.xlsx\",    sheet = \"masspat\") |>    # on filtre les lignes les colonnes dont on a besoin   filter(tranche %in% c(\"0-90%\", \"90-99%\", \"99-100%\", \"Total\")) |>    select(-revraw) |>    # on les met dans l'ordre souhaité,    # plus le tibble est comme le tableau final le mieux c'est   relocate(tranche, revdisp) |>    # pour avoir les chiffres par tête on fait un dernier mutate   mutate(across(c(revdisp, tot, fi, pro, imm, autre), ~.x/30.5*1000/men)) |>   select(-men) |>    mutate(tranche = str_replace(tranche, \"Total\", \"Moyenne\")) |>   # gt sert à fabriquer le tableau mis en forme   # a partir de là, plus de manip possible    gt() |>    # le spanner regroupe des colonnes sous un même label    tab_spanner(columns = -c(tranche, revdisp), label  = \"Patrimoine\") |>    # on a gardé les noms simples dans les données, on les traduit en clair ici   # on privilégie cette approche : qui permet de corriger dans le qmd le texte   # qui permet de traduire   # qui permet d'uniformiser les labels si on a plusieurs tableaux   cols_label(tranche = \"\", revdisp = \"Revenu disponible\",               tot = \"Total\", fi = \"Financier\",               pro  = \"Professionnel\", imm = \"Immobilier\",               autre = \"Autres\") |>    # idem, on passe des nombres, on les formatte ici   fmt_number(columns = -tranche, scale = 1,              n_sigfig = 3,  decimals = 0, sep_mark = \" \" ) |>    # on met en gras en en darkred une ligne -- notez la syntaxe élégante de gt   tab_style(style = cell_text(weight = \"bold\", color = \"darkred\"),              locations = cells_body(rows = tranche == \"Moyenne\")) |>    # indispensable, les sources. md() permet d'avoir un texte enrichi qui comprend markdown   # <br> retourne à la ligne dans la note   # on met les notes ici, ca permet corrections, uniformisation et traduction   tab_source_note(     md(       \"Revenu disponible brut et actifs bruts (hors passif) par ménage, en euros, année 2022       <br>Calculs réalisés à partir de l'enquête patrimoine des ménages 2017-2018 de l'Insee croisés avec les comptes nationaux du patrimoine de l'Insee de 2022       <br>*Sources* : Insee, calculs OFCE\"))"},{"path":"https://ofce.github.io/ofce/articles/tableaux.html","id":"dautres-solutions-pour-les-tableaux","dir":"Articles","previous_headings":"","what":"D’autres solutions pour les tableaux","title":"Recommandations pour les tableaux OFCE","text":"Le pire du pire est de mettre le tableau comme une copie d’écran d’excel ou d’un pdf. C’est à banir. Moins pire est d’utiliser la syntaxe markdown. Ca peut paraître plus simple mais c’est rapidement dépassé et permet très peu de présentation avancée.","code":""},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"données","dir":"Articles","previous_headings":"","what":"données","title":"Séries temporelles","text":"Pour les séries temporelles, il y deux recommandations pour les données : utilisez le format long pour le graphique. Il peut être plus simple pour calculer des taux de croissance ou des ratios de passer en format large, mais c’est mieux de passer en format long pour la partie graphique, avec une ou plusieurs colonnes pour différencier les lignes. Cela permettra d’associer une couleur à chaque série et une facette à chque pays par exemple. le champ décrivant les dates doit être en type date. ce n’est pas toujours évident quand les séries sont à fréquence annuelle, mais c’est très utile pour mélanger des séries de fréquence irrégulière, pour homogénéiser l’aspect des axes de dates ert mieux maîtriser le formatage des dates. Pour convertir une date en date, soit elle est au format charactere et de type “2022-12-01” et la fonction base::.Date() fonctionne très bien. Sinon, pur les autres cas, le package lubridate (formation R niv. 1) est très pratique et dispose de plein de fonctions permettant d’absorber beaucoup de cas (les fonctions sont par exemple lubridate::ymd lubridate::dmy lubridate::etc…). Prenons l’exemple du graphiques sur les spreads (legislatives2024, Blot Gerrolf Plane). Les données sont égénrées par un scrapping sur investing.com (en attendant une solution API sur une banque de données bien faite). Les données se présentent sous la forme. Le fichier est au format long (avec deux modalités pour pays), les dates sont au format <date>, donc tout va presque bien. La colonne pays est un peu brute. la transforme pour avoir un label plus propre et en facteur, pour contrôler l’ordre (met France en premier, Italie en second). Il y plusieurs méthodes pour arriver à ce résultat. Ici, reste très simple parce qu’il n’y que deux modalités. Si il y en avait plus de deux (et surtout un grand nombre, possiblement évolutif), aurait fait quelques manipulations de chaînes et aurait utilisé le package countrycode pour transformer les code pays en texte lisible, possiblement traduit dans différentes langues.","code":"dates <- c(2023, 2024, 2025) as.Date(as.character(dates), format  = \"%Y\") [1] \"2023-07-08\" \"2024-07-08\" \"2025-07-08\" dates <- c(\"1/2023\", \"2/2024\", \"3/2025\") lubridate::my(dates) [1] \"2023-01-01\" \"2024-02-01\" \"2025-03-01\" library(ofce) library(tidyverse, quietly = TRUE) ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ✔ dplyr     1.1.4     ✔ readr     2.1.5 ✔ forcats   1.0.0     ✔ stringr   1.5.1 ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 ✔ purrr     1.0.2 ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ✖ dplyr::filter() masks stats::filter() ✖ dplyr::lag()    masks stats::lag() ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors spreads # A tibble: 10,117 × 3    date       pays        taux    <date>     <chr>      <dbl>  1 2007-01-02 spreadfra 0.0130  2 2007-01-03 spreadfra 0.0360  3 2007-01-04 spreadfra 0.0280  4 2007-01-05 spreadfra 0.0190  5 2007-01-08 spreadfra 0.0440  6 2007-01-09 spreadfra 0.0430  7 2007-01-10 spreadfra 0.0290  8 2007-01-11 spreadfra 0.0370  9 2007-01-12 spreadfra 0.0340 10 2007-01-15 spreadfra 0.0380 # ℹ 10,107 more rows spreads <- spreads |>    mutate(pays = factor( pays, c(\"spreadfra\", \"spreadita\"), c(\"France\", \"Italie\"))) spreads # A tibble: 10,117 × 3    date       pays     taux    <date>     <fct>   <dbl>  1 2007-01-02 France 0.0130  2 2007-01-03 France 0.0360  3 2007-01-04 France 0.0280  4 2007-01-05 France 0.0190  5 2007-01-08 France 0.0440  6 2007-01-09 France 0.0430  7 2007-01-10 France 0.0290  8 2007-01-11 France 0.0370  9 2007-01-12 France 0.0340 10 2007-01-15 France 0.0380 # ℹ 10,107 more rows"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"la-base-du-graphique","dir":"Articles","previous_headings":"","what":"la base du graphique","title":"Séries temporelles","text":"Le graphique de base est alors simple à contruire. utilise une couche geom_line et geom_point, une couche aes avec comme x les dates, y les taux et couleurs les pays. Pour geom_line, il faut préciser le groupe (cela peut paraître redondant, mais cela peut servir si veut colorer en fonction d’une autre variable).  utilise la palette summer de PrettyCols (affaire de goût). utilise la fonction theme_ofce() pour homogénéiser la présentation des graphiques. précise les labels des axes inutile pour x, explicite pour y. Et la source, en notant que l’peut utiliser markdown dans le texte de la source, ce qui permet de mettre Source en italique. Le recours à scale_x_date permet de spécifier facilement le format des dates (avec la syntaxe de base::strptime()) et la fonction scale::label_date_short() permet un formatage élégant des dates (voir plus bas la partie insert). ajoute au graphique des annotations. C’est ici faid de façon laborieuse, peut construire des fonctions (formation R niv. 2) ou utiliser esquisse ou {gganotate} mais ces deux solutions ont des défauts.","code":"library(ofce) cc <- PrettyCols::prettycols(\"Summer\", n=2) date_maj <- \"2024-07-01\" main <- ggplot(spreads) +   aes(x=date, y=taux, color=pays, group=pays) +   geom_line(linewidth = 0.75, alpha = 0.5) +   geom_point(stroke = 0.1, size = 0.75)+   scale_color_manual(name = NULL, values = cc) +   labs(     y=\"Ecart de taux à 10 ans en %\",     x=NULL,     caption=\"Source: investing.com\") +   theme_ofce()+   guides(x = guide_axis(minor.ticks = TRUE),          y = guide_axis(minor.ticks = TRUE)) +   theme(legend.position = \"none\")+   labs(colour=NULL,        caption = glue::glue(\"*Source* : investing.com<br>Mis à jour : {date_maj}\")) +    scale_x_date(labels = scales::label_date_short(format = c(\"%Y\")),                date_breaks = \"5 years\") main Warning: Removed 858 rows containing missing values or values outside the scale range (`geom_point()`). Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not found in Windows font database Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not found in Windows font database Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"les-annotations","dir":"Articles","previous_headings":"","what":"les annotations","title":"Séries temporelles","text":"Le résultat est intéressant, mais le graphique cependant un défaut, il y trop de points, ce qui est du à la fréquence quotidienne et donc il perd en clarté. va donc faire deux choses : réduire la fréquence en agrégeant les données par mois, puis va ajouter un insert.","code":"annotations <-  list(   annotate(     \"text\", x = as.Date(\"2013-12-01\"), y= 1,      label=\"France\" , color=cc[[1]] , size=3, fontface =\"bold\"),   annotate(     \"text\", x = as.Date(\"2010-06-01\"), y= 3 ,     label=\"Italie\" , color=cc[[2]], size=3, fontface =\"bold\"),   annotate(     \"text\",      x = as.Date(\"2009-12-01\"),      y= 5 ,      label=\"Crise des dettes souveraines\\n26 juillet 2012 : Mario Draghi \\n 'Whatever it takes'\" ,     color= \"grey33\",      size=2,     hjust=1),   annotate(     \"segment\",      x = as.Date(\"2010-03-01\"),      xend = as.Date(\"2011-07-01\"),      y = 5,      yend = 4.6,      colour = \"grey33\",     linewidth=0.25,     arrow= arrow(length = unit(4, \"point\"))),   annotate(     \"text\",     x = as.Date(\"2017-9-01\"),     y= 4.5 ,     size = 2,     label=\"4 mars 2018 : Élections italiennes\\n1er juin : gouvernement de coalition\" ,     color= \"grey33\"),   annotate(     \"segment\",     x = as.Date(\"2017-09-01\"),      xend = as.Date(\"2018-05-01\"),      y = 4.2,     yend = 3,     colour = \"grey33\",      linewidth=0.25,      arrow=arrow(length = unit(4, \"point\"))),   annotate(     \"text\",     x = as.Date(\"2022-01-01\"),      hjust = 1,      y= 0.8,      label=\"Annonce de la dissolution\" ,      color= \"grey33\",     size=2),   annotate(     \"segment\",     x = as.Date(\"2022-03-01\"),      xend = as.Date(\"2024-04-01\"),      y = 0.8,      yend = 0.7,      colour = \"grey33\",     linewidth=0.25,     arrow= arrow(length = unit(4, \"point\"))))  main + annotations Warning: Removed 858 rows containing missing values or values outside the scale range (`geom_point()`). Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"fréquence-mensuelle-et-insert","dir":"Articles","previous_headings":"","what":"fréquence mensuelle et insert","title":"Séries temporelles","text":"Pour construire les données à la fréquence mensuelle, va créer un champ de date, mais retenant une seule date par mois (au milieu du mois). peut alors facilement modifier le graphique main en utilisant %+% (cette instruction modifie les données en entrée du graphique par le nouveau jeu de données qu’vient de construire qui exactement la même structure, comme utilisé les dates le passage du quotidien au mensuel se fait automatiquement, les axes sont parfaitement construits) :  L’insert est le même graphique, en enlevant les annotations, en simplifiant les axes et en zoomant sur les deux derniers mois.  l’insère dans le graphique principal en utilisant patchwork, ce qui donne le graphique, plus lisible et plus élégant.","code":"dates <- spreads$date lubridate::day(dates) <- 15 spreads_m <- spreads |>    mutate( date = dates) |>    group_by(date, pays) |>    summarize(taux_max = max(taux, na.rm=TRUE),             taux_min = min(taux, na.rm=TRUE),             taux = mean(taux, na.rm=TRUE)) `summarise()` has grouped output by 'date'. You can override using the `.groups` argument. spreads_m # A tibble: 422 × 5 # Groups:   date [211]    date       pays   taux_max taux_min   taux    <date>     <fct>     <dbl>    <dbl>  <dbl>  1 2007-01-15 France   0.0580   0.0130 0.0409  2 2007-01-15 Italie   0.278    0.154  0.229  3 2007-02-15 France   0.0560   0.0380 0.0440  4 2007-02-15 Italie   0.284    0.17   0.211  5 2007-03-15 France   0.0630   0.0350 0.0466  6 2007-03-15 Italie   0.318    0.192  0.239  7 2007-04-15 France   0.0690   0.0410 0.0496  8 2007-04-15 Italie   0.285    0.153  0.225  9 2007-05-15 France   0.0980   0.0330 0.0464 10 2007-05-15 Italie   0.291    0.175  0.222 # ℹ 412 more rows main %+% spreads_m Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database inset <- ggplot(spreads) +   aes(x=date, y=taux, color=pays, group=pays) +   geom_vline(xintercept = as.Date(\"2024-06-09\"),              linewidth = 0.1,              color = \"grey50\") +   geom_line( linewidth = 0.25, alpha=0.75) +   geom_point(stroke = 0.1, size = .75)+   guides(color = \"none\") +   scale_color_manual(name = NULL, values = cc) +   theme_ofce(base_size = 7,              axis.line.x = element_blank(),              axis.line.y = element_blank(),              plot.background = element_rect(fill = \"white\")) +    scale_x_date(labels = scales::label_date_short(format = c(\"%Y\", \"%B\")),                date_breaks = \"1 month\",                limits = c(Sys.Date()-months(2), NA)) +   ylim(c(0, 2)) + xlab(NULL) +ylab(NULL)  inset Warning: Removed 10033 rows containing missing values or values outside the scale range (`geom_line()`). Warning: Removed 10033 rows containing missing values or values outside the scale range (`geom_point()`). Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not found in Windows font database library(patchwork) main <- (main + annotations) %+% spreads_m main  + inset_element(inset, 0.75, 0.5, 1, 1) Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning: Removed 10033 rows containing missing values or values outside the scale range (`geom_line()`). Warning: Removed 10033 rows containing missing values or values outside the scale range (`geom_point()`). Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : font family not found in Windows font database"},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"interactif","dir":"Articles","previous_headings":"","what":"Interactif","title":"Séries temporelles","text":"La dernière étape est l’interctaivité. utilise le package ggiraph qui va permettre d’intégrer des tooltips très simplement et très efficacement. peut aussi avec des sélections dyanamiques ou encore des zooms.","code":""},{"path":"https://ofce.github.io/ofce/articles/temporelles.html","id":"double-échelle","dir":"Articles","previous_headings":"","what":"double échelle","title":"Séries temporelles","text":"Non mais ca va pas ?","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ofce.github.io/ofce/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://ofce.github.io/ofce/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Malliet P, Saumtally , Timbeau X (2024). ofce: Aide à la rédaction de documents scientifiques aux normes OFCE. R package version 1.1.0, https://ofce.github.io/ofce/.","code":"@Manual{,   title = {ofce: Aide à la rédaction de documents scientifiques aux normes OFCE},   author = {Paul Malliet and Anissa Saumtally and Xavier Timbeau},   year = {2024},   note = {R package version 1.1.0},   url = {https://ofce.github.io/ofce/}, }"},{"path":"https://ofce.github.io/ofce/index.html","id":"package-ofce-pour-r","dir":"","previous_headings":"","what":"Aide à la rédaction de documents scientifiques aux normes OFCE","title":"Aide à la rédaction de documents scientifiques aux normes OFCE","text":"Ce package met à dispositon des outils utilisés régulièrement à l’OFCE, que ce soit pour la production de documents quarto ou de mise en page de graphiques ggplot2","code":""},{"path":"https://ofce.github.io/ofce/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Aide à la rédaction de documents scientifiques aux normes OFCE","text":"Le package s’installe par la commande du package pak(si vous ne l’avez pas déjà installé, lancez d’abord la commande suivante:install.packages(\"pak\"))","code":"pak::pak(\"ofce/ofce\")"},{"path":"https://ofce.github.io/ofce/index.html","id":"mise-à-jour-des-templates-quarto-ofce","dir":"","previous_headings":"","what":"Mise à jour des templates quarto OFCE","title":"Aide à la rédaction de documents scientifiques aux normes OFCE","text":"Les templates existants (hébergés sur le repo ofce-quarto-extensions) sont mis-à-jour de manière continue dans un souçi d’amélioration constant. Pour récupérer la dernière version, il suffit de lançer la commande setup_quartoqui installera en local la dernière version des extensions pour votre document.","code":""},{"path":"https://ofce.github.io/ofce/index.html","id":"utilisation","dir":"","previous_headings":"","what":"Utilisation","title":"Aide à la rédaction de documents scientifiques aux normes OFCE","text":"La présentation du 13 Novembre en séminaire lunch est une rapide introduction au package (reproduite via ce lien). Pour une description plus complète, vous pouvez lancez la commande suivante dans la console RStudio qui recense l’ensemble des fonctions du package : library(help=\"ofce\") ou ?nom_de_la_function. Sur le site qui documente le package) vous trouverez des documents détaillant tous les aspects de l’utilisation du package et de la réalisation de documents à l’OFCE – les chartes graphiques.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ofce.github.io/ofce/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Add label unit — add_label_unit","title":"Add label unit — add_label_unit","text":"Ajoute un label pour les unités sur le plus grand des labels y","code":""},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add label unit — add_label_unit","text":"","code":"add_label_unit(plot, ylabel = \"\")"},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add label unit — add_label_unit","text":"plot un graphique ggplot ylabel string, un label","code":""},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add label unit — add_label_unit","text":"un graphique ggplot","code":""},{"path":"https://ofce.github.io/ofce/reference/add_label_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add label unit — add_label_unit","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) plot <- ggplot(mtcars) +         geom_point(aes(x=mpg, y=hp, size=cyl, col=gear)) +         theme_ofce(base_family=\"Nunito\") # plot |> add_label_unit(\"horse power\") } # }"},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":null,"dir":"Reference","previous_headings":"","what":"Add logo — add_logo_ofce","title":"Add logo — add_logo_ofce","text":"Ajoute le logo de l'OFCE en bas à droite du graphique","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add logo — add_logo_ofce","text":"","code":"add_logo_ofce(plot, logo = NULL, size = 0.04)"},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add logo — add_logo_ofce","text":"plot un graphique ggplot logo un logo au format png, avec une transparence size la taille du logo (relative)","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add logo — add_logo_ofce","text":"un graphique ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add logo — add_logo_ofce","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) plot <- ggplot(mtcars) +     geom_point(aes(x=mpg, y=hp, size=cyl, col=gear)) +     theme_ofce() # plot |> add_logo_ofce() } # }"},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":null,"dir":"Reference","previous_headings":"","what":"Add logo inside — add_logo_ofce_inside","title":"Add logo inside — add_logo_ofce_inside","text":"Ajoute le logo de l'OFCE sur le graphique (inside donc)","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add logo inside — add_logo_ofce_inside","text":"","code":"add_logo_ofce_inside(plot, logo = NULL, size = 0.25)"},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add logo inside — add_logo_ofce_inside","text":"plot un graphique ggplot logo un logo au format png, avec une transparence size la taille du logo (relative)","code":""},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add logo inside — add_logo_ofce_inside","text":"un graphique ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/add_logo_ofce_inside.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add logo inside — add_logo_ofce_inside","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) plot <- ggplot(mtcars) +         geom_point(aes(x=mpg, y=hp, size=cyl, col=gear)) +         theme_ofce() # plot |> add_logo_ofce_inside() } # }"},{"path":"https://ofce.github.io/ofce/reference/annotate2.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate2 from ggplot2 — annotate2","title":"Annotate2 from ggplot2 — annotate2","text":"Variation de ggplot2::annotate pour intégrer une position","code":""},{"path":"https://ofce.github.io/ofce/reference/annotate2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate2 from ggplot2 — annotate2","text":"","code":"annotate2(   geom,   x = NULL,   y = NULL,   xmin = NULL,   xmax = NULL,   ymin = NULL,   ymax = NULL,   xend = NULL,   yend = NULL,   position = PositionIdentity,   ...,   na.rm = FALSE )"},{"path":"https://ofce.github.io/ofce/reference/annotate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate2 from ggplot2 — annotate2","text":"geom name geom use annotation x, y, xmin, ymin, xmax, ymax, xend, yend positioning aesthetics - must specify least one . position fonction position (comme position_nudge()) pour modifier la position de l'annotation ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed.","code":""},{"path":"https://ofce.github.io/ofce/reference/annotate2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate2 from ggplot2 — annotate2","text":"une layer","code":""},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3","code":""},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"","code":"f2si2(number, rounding = TRUE, digits = 1, unit = \"median\")"},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"number le nombre ou le vecteur à formatter (numérique) rounding doit-arrondir le chiffre ? digits Combien de chiffres après la virgule unit Arrondi soit à la \"median\" soit au \"max\"","code":""},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"une chaine de caractère (character) formattée","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/f2si2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilise le SI pour formatter les nombres en fonction des mulitples de 10^3 — f2si2","text":"","code":"f2si2(100000) #> [1] \"100k\""},{"path":"https://ofce.github.io/ofce/reference/graph2jpg.html","id":null,"dir":"Reference","previous_headings":"","what":"Enregistre un graphe en jpg à la taille revue — graph2jpg","title":"Enregistre un graphe en jpg à la taille revue — graph2jpg","text":"Enregistrement d'un graphique avec une taille par défaut de 18 cm de large et un ratio de 4/3 Les paramètres peuvent être facilement modifiés","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2jpg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enregistre un graphe en jpg à la taille revue — graph2jpg","text":"","code":"graph2jpg(   graph,   file = \"\",   rep = \"svg\",   ratio = 4/3,   height = width/ratio,   width = 18,   units = \"cm\",   bg = \"white\",   quality = 100,   dpi = 600,   ... )"},{"path":"https://ofce.github.io/ofce/reference/graph2jpg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enregistre un graphe en jpg à la taille revue — graph2jpg","text":"graph un objet graphique (grid, un ggplot plus communément mais aussi un objet tmap) file Le chemin vers le fichier résultat (string) rep le répertoire dans lequel met les graphiques ratio le ratio entre largeu r et hauteur height la hauteur, si la hauteur est spécifiée la ratio est ignoré width la largeur units l'unité (\"cm\" par exemple) bg couleur du fond (background) quality qualité du fichier (par défault 100) dpi résolution du fichier image crée (par défault 600) ... autres arguments à passer dans la fonction","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2jpg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enregistre un graphe en jpg à la taille revue — graph2jpg","text":"l'objet en entrée, invisible, enregistre un .jpeg dans le répertoire avec le nom donné","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2png.html","id":null,"dir":"Reference","previous_headings":"","what":"Enregistre un graphe en png à la taille revue — graph2png","title":"Enregistre un graphe en png à la taille revue — graph2png","text":"Enregistrement d'un graphique avec une taille par défaut de 18 cm de large et un ratio de 4/3 Les paramètres peuvent être facilement modifiés. Le propblème de la résolution est résolu (dsl) en utilisant showtext.","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enregistre un graphe en png à la taille revue — graph2png","text":"","code":"graph2png(   graph,   file = \"\",   rep = \"svg\",   ratio = 4/3,   height = width/ratio,   width = 18,   units = \"cm\",   bg = \"white\",   dpi = 600,   ... )"},{"path":"https://ofce.github.io/ofce/reference/graph2png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enregistre un graphe en png à la taille revue — graph2png","text":"graph un objet graphique (grid, un ggplot plus communément mais aussi un objet tmap) file Le chemin vers le fichier résultat (string) rep le répertoire dans lequel met les graphiques ratio le ratio entre largeur et hauteur height la hauteur, si la hauteur est spécifiée la ratio est ignoré width la largeur units l'unité (\"cm\" par exemple) bg couleur du fond (background) dpi résolution du fichier image crée (par défault 600) ... autres arguments à passer dans la fonction","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enregistre un graphe en png à la taille revue — graph2png","text":"l'objet en entrée, invisible, enregistre un .png dans le répertoire avec le nom donné","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2svg.html","id":null,"dir":"Reference","previous_headings":"","what":"Enregistre un graphe en svg à la taille revue — graph2svg","title":"Enregistre un graphe en svg à la taille revue — graph2svg","text":"Enregistrement d'un graphique avec une taille par défaut de 18 cm de large et un ratio de 4/3 Les paramètres peuvent être facilement modifiés","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2svg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enregistre un graphe en svg à la taille revue — graph2svg","text":"","code":"graph2svg(   graph,   file = \"\",   rep = \"svg\",   ratio = 4/3,   height = width/ratio,   width = 18,   units = \"cm\",   bg = \"white\",   ... )"},{"path":"https://ofce.github.io/ofce/reference/graph2svg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enregistre un graphe en svg à la taille revue — graph2svg","text":"graph un objet graphique (grid, un ggplot plus communément, mais aussi un objet tmap) file Le chemin vers le fichier résultat (string) rep le répertoire dans lequel met les graphiques ratio le ratio entre largeur et hauteur height la hauteur, si la hauteur est spécifiée la ratio est ignoré width la largeur units l'unité (\"cm\" par exemple) bg couleur du fond (background) ... autres arguments à passer dans la fonction","code":""},{"path":"https://ofce.github.io/ofce/reference/graph2svg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enregistre un graphe en svg à la taille revue — graph2svg","text":"l'objet en entrée, invisible, enregistre un .svg dans le répertoire avec le nom donné","code":""},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforme une chaîne formatté SI en nombre — if2si2","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"Transforme une chaîne formatté SI en nombre","code":""},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"","code":"if2si2(text)"},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"text le nombre ou le vecteur de nombres formattés à transformer","code":""},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"un nombre","code":""},{"path":"https://ofce.github.io/ofce/reference/if2si2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transforme une chaîne formatté SI en nombre — if2si2","text":"","code":"if2si2(\"100k\") #>     k  #> 1e+05"},{"path":"https://ofce.github.io/ofce/reference/make_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"make filename — make_filename","title":"make filename — make_filename","text":"make filename","code":""},{"path":"https://ofce.github.io/ofce/reference/make_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make filename — make_filename","text":"","code":"make_filename(x, file = \"\", rep = \"\", env, ext)"},{"path":"https://ofce.github.io/ofce/reference/make_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make filename — make_filename","text":"x nom de l'objet file nom du fichier crée (par défaut nom de x) rep stringr env environnement ext nom de l'extension du fichier (.png, .jpg,...)","code":""},{"path":"https://ofce.github.io/ofce/reference/make_filename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make filename — make_filename","text":"un nom de fichier","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"","code":"ofce_palette(n = 2)"},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"n number un nombre de couleurs à retenir pour la palette","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"un vector de couleurs de taille compris entre 2 et 5","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Palette de cinq couleurs principales compatible avec les normes graphiques de la revue OFCE — ofce_palette","text":"","code":"ofce_palette(n = 3) #> [1] \"#005DA4\" \"#F59C00\" \"#C51315\""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"","code":"ofce_palette_div(colors = c(\"#005DA4\", \"#C51315\"), n = NULL)"},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"colors un vecteur de deux couleurs à partir duquel la palette est générée. n integer, nombre de couleurs","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"un vecteur de couleurs de taille n","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_div.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Palette de couleurs associée de type divergente qui à partir de deux codes HEX génère une palette de n couleurs compatible avec les normes graphiques de la revue OFCE — ofce_palette_div","text":"","code":"ofce_palette_div(n = 4) #> [1] \"#005DA4\" \"#2263A6\" \"#9E4545\" \"#993D3D\""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_pays.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","text":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_pays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","text":"","code":"ofce_palette_pays(list_iso3 = palette.ofce$ISO)"},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_pays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","text":"list_iso3 chr, une liste de nom de pays","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_pays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de couleur associée à un sous-ensemble de pays, compatible avec les normes graphiques de la revue OFCE — ofce_palette_pays","text":"une palette de couleur (format HEX)","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","title":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","text":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","text":"","code":"ofce_palette_seq(colors = c(\"#005DA4\", \"#C51315\"), n = NULL)"},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","text":"colors vecteur de deux couleurs à partir duquel la palette est générée n integer, nombre de couleurs","code":""},{"path":"https://ofce.github.io/ofce/reference/ofce_palette_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palette de couleurs associée de type sequentiel qui à partir de deux codes HEX génère une palette de n couleur compatible avec les normes graphiques de la revue OFCE — ofce_palette_seq","text":"une palette de couleurs (format HEX)","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_blog.html","id":null,"dir":"Reference","previous_headings":"","what":"installe un squelette de présentation — setup_blog","title":"installe un squelette de présentation — setup_blog","text":"prépare un dossier, avec un exemple et les extensions nécessaires pour le formattage OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_blog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"installe un squelette de présentation — setup_blog","text":"","code":"setup_blog(dir = NULL, nom = NULL)"},{"path":"https://ofce.github.io/ofce/reference/setup_blog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"installe un squelette de présentation — setup_blog","text":"dir Répertoire à créer \"pres\" par défaut nom Nom du projet, \"pres\" par défaut,","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_english.html","id":null,"dir":"Reference","previous_headings":"","what":"Set RStudio to english dictionary — setup_english","title":"Set RStudio to english dictionary — setup_english","text":"Pour écrire en anglais dans RStudio Attention un dictionnaire ne garantit en rien la qualité de l'expression","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_english.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set RStudio to english dictionary — setup_english","text":"","code":"setup_english()"},{"path":"https://ofce.github.io/ofce/reference/setup_english.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set RStudio to english dictionary — setup_english","text":"","code":"if(interactive()) setup_english()"},{"path":"https://ofce.github.io/ofce/reference/setup_french.html","id":null,"dir":"Reference","previous_headings":"","what":"Set RStudio to french dictionary — setup_french","title":"Set RStudio to french dictionary — setup_french","text":"Pour écrire en français dans RStudio Attention un dictionnaire ne garantit en rien la qualité de l'expression","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_french.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set RStudio to french dictionary — setup_french","text":"","code":"setup_french()"},{"path":"https://ofce.github.io/ofce/reference/setup_french.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set RStudio to french dictionary — setup_french","text":"","code":"if(interactive()) setup_french()"},{"path":"https://ofce.github.io/ofce/reference/setup_pres.html","id":null,"dir":"Reference","previous_headings":"","what":"installe un squelette de présentation — setup_pres","title":"installe un squelette de présentation — setup_pres","text":"prépare un dossier, avec un exemple et les extensions nécessaires pour le formattage OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_pres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"installe un squelette de présentation — setup_pres","text":"","code":"setup_pres(dir = NULL, nom = NULL)"},{"path":"https://ofce.github.io/ofce/reference/setup_pres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"installe un squelette de présentation — setup_pres","text":"dir Répertoire à créer \"pres\" par défaut nom Nom du projet, \"pres\" par défaut,","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Extensions OFCE pour quarto — setup_quarto","title":"Extensions OFCE pour quarto — setup_quarto","text":"Installe gentiment les extensions quarto suivantles templates OFCE Trois templates sont prévus et s'insèrent dans un yml (ou dans la section yml) comme suit format: ofce-html: default # peut ajouter tous les champs html ofce-pdf: default # pour les pdf, à affiner ofce-revealjs: default # pour les présentations","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extensions OFCE pour quarto — setup_quarto","text":"","code":"setup_quarto(dir = \".\", quiet = FALSE)"},{"path":"https://ofce.github.io/ofce/reference/setup_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extensions OFCE pour quarto — setup_quarto","text":"dir Répertoire dans lequel l'extension est installée quiet Ne fait pas de bruit (défault FALSE)","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_quarto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extensions OFCE pour quarto — setup_quarto","text":"Il est possible de spécifier toutes les éléments habituels des formats sous jacents par la syntaxe habituelle Si le document à rendre est dans un dossier, il faut utiliser l'argument dir et l'extension sera installé à cet endroit","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_RStudio.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset RStudio prefs — setup_RStudio","title":"Reset RStudio prefs — setup_RStudio","text":"Principalement, pas d'enregistrement de l'environnement, pipe natif, ragg en backend graphique","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_RStudio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset RStudio prefs — setup_RStudio","text":"","code":"setup_RStudio(theme = \"iPlastic\", right_console = TRUE)"},{"path":"https://ofce.github.io/ofce/reference/setup_RStudio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset RStudio prefs — setup_RStudio","text":"theme Theme à utiliser (défaut \"iPlastic\") right_console Met la console à droite (défaut TRUE)","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_RStudio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset RStudio prefs — setup_RStudio","text":"","code":"if(interactive()) setup_RStudio()"},{"path":"https://ofce.github.io/ofce/reference/setup_wp.html","id":null,"dir":"Reference","previous_headings":"","what":"installe un squelette de document de travail — setup_wp","title":"installe un squelette de document de travail — setup_wp","text":"prépare un dossier, avec un exemple et les extensions nécessaires pour le formattage OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/setup_wp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"installe un squelette de document de travail — setup_wp","text":"","code":"setup_wp(dir = NULL, nom = NULL)"},{"path":"https://ofce.github.io/ofce/reference/setup_wp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"installe un squelette de document de travail — setup_wp","text":"dir Répertoire à créer \"wp\" par défaut nom Nom du projet, \"wp\" par défaut,","code":""},{"path":"https://ofce.github.io/ofce/reference/set_faicon_reveal.html","id":null,"dir":"Reference","previous_headings":"","what":"Modifie l'icône de titre pour la présentation — set_faicon_reveal","title":"Modifie l'icône de titre pour la présentation — set_faicon_reveal","text":"Attention cette fonction est un hack en attendant mieux Elle est assez fragile et peut ne pas fonctionner","code":""},{"path":"https://ofce.github.io/ofce/reference/set_faicon_reveal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modifie l'icône de titre pour la présentation — set_faicon_reveal","text":"","code":"set_faicon_reveal(path = \".\", unicode = \"f101\")"},{"path":"https://ofce.github.io/ofce/reference/set_faicon_reveal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modifie l'icône de titre pour la présentation — set_faicon_reveal","text":"path chemin vers la présentation à modifier (le dossier qui contient la présentation) icon code unicode hexa de l'icone (f101 par défaut)","code":""},{"path":"https://ofce.github.io/ofce/reference/set_fontsize_reveal.html","id":null,"dir":"Reference","previous_headings":"","what":"Modifie la taille de police pour revealjs — set_fontsize_reveal","title":"Modifie la taille de police pour revealjs — set_fontsize_reveal","text":"Attention cette fonction est un hack en attendant mieux Elle est assez fragile et peut ne pas fonctionner","code":""},{"path":"https://ofce.github.io/ofce/reference/set_fontsize_reveal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modifie la taille de police pour revealjs — set_fontsize_reveal","text":"","code":"set_fontsize_reveal(path = \".\", size = 20)"},{"path":"https://ofce.github.io/ofce/reference/set_fontsize_reveal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modifie la taille de police pour revealjs — set_fontsize_reveal","text":"path chemin vers la présentation à modifier (le dossier qui contient la présentation) size taille en \"px\" de la police pour revealjs (20 par défaut)","code":""},{"path":"https://ofce.github.io/ofce/reference/set_justify.html","id":null,"dir":"Reference","previous_headings":"","what":"Modifie la justification des textes en HTML — set_justify","title":"Modifie la justification des textes en HTML — set_justify","text":"Attention cette fonction est un hack en attendant mieux Elle est assez fragile et peut ne pas fonctionner","code":""},{"path":"https://ofce.github.io/ofce/reference/set_justify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modifie la justification des textes en HTML — set_justify","text":"","code":"set_justify(path = \".\", justify = TRUE, ext = \"ofce\")"},{"path":"https://ofce.github.io/ofce/reference/set_justify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modifie la justification des textes en HTML — set_justify","text":"path chemin vers le ou les documents HTML justify (boolean) TRUE pour justifier, FALSE pour aligner à gauche ext (string) extension des fichiers à modifier (ofce par défaut)","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilisation mémoire par objet — showMemoryUse","title":"Utilisation mémoire par objet — showMemoryUse","text":"Permet de lister les plus gros objets en mémoire et de connaître leur empreinte.","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilisation mémoire par objet — showMemoryUse","text":"","code":"showMemoryUse(   sort = \"size\",   decreasing = TRUE,   limit = 10,   envir = parent.frame() )"},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilisation mémoire par objet — showMemoryUse","text":"sort Variable sur lequel le tri est fait (défaut \"size\", alternative \"alphabetical\") decreasing En sens décroissant (défaut TRUE) limit Nombre de lignes affichées (défaut 10) envir l'environement dans lequel sont listé les objets. Mieux vaut ne pas le toucher si ne sait pas à quoi ça sert.","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utilisation mémoire par objet — showMemoryUse","text":"Une liste des objets en mémoire, invisible et affiche dans la console cette liste","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utilisation mémoire par objet — showMemoryUse","text":"copié de https://rdrr.io/github/zlfccnu/econophysics/ (merci!).","code":""},{"path":"https://ofce.github.io/ofce/reference/showMemoryUse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilisation mémoire par objet — showMemoryUse","text":"","code":"showMemoryUse() #> [1] \"No objects\""},{"path":"https://ofce.github.io/ofce/reference/table_ofce.html","id":null,"dir":"Reference","previous_headings":"","what":"Thème OFCE pour les tableaux pour gt — table_ofce","title":"Thème OFCE pour les tableaux pour gt — table_ofce","text":"Applique le theme ofce compatible avec la norme de la Revue de l'OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/table_ofce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thème OFCE pour les tableaux pour gt — table_ofce","text":"","code":"table_ofce(data, ...)"},{"path":"https://ofce.github.io/ofce/reference/table_ofce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thème OFCE pour les tableaux pour gt — table_ofce","text":"data un objet gt base_family character(1) string, police de charactère du thème (Stone sans par défaut)","code":""},{"path":"https://ofce.github.io/ofce/reference/table_ofce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thème OFCE pour les tableaux pour gt — table_ofce","text":"un objet gt, décoré","code":""},{"path":"https://ofce.github.io/ofce/reference/theme.gt_ofce.html","id":null,"dir":"Reference","previous_headings":"","what":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","title":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","text":"Applique le theme ofce compatible avec la norme de la Revue de l'OFCE","code":""},{"path":"https://ofce.github.io/ofce/reference/theme.gt_ofce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","text":"","code":"theme.gt_ofce(data, largeur_colonne = NULL, ...)"},{"path":"https://ofce.github.io/ofce/reference/theme.gt_ofce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","text":"data un objet gt largeur_colonne largeur de colonne (en px) ... autres arguments à passer dans la fonction","code":""},{"path":"https://ofce.github.io/ofce/reference/theme.gt_ofce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thème OFCE pour les tableaux pour gt — theme.gt_ofce","text":"un objet gt, décoré","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme foundation — theme_foundation","title":"Theme foundation — theme_foundation","text":"theme designed foundation build new themes, meant used directly. theme_foundation() complete theme minimal number elements defined. easier create new themes extending one rather theme_gray() theme_bw(), themes define elements deep hierarchy.","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme foundation — theme_foundation","text":"","code":"theme_foundation(une_base_size = 12, base_family = \"\")"},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme foundation — theme_foundation","text":"base_family base font family","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme foundation — theme_foundation","text":"un thème qui peut être utilisé dans ggplot","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_foundation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theme foundation — theme_foundation","text":"theme takes theme_gray() sets colour fill values NULL, except top-level elements (line, rect, title), colour = \"black\", fill = \"white\". leaves spacing -non colour defaults default ggplot2 themes place.","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Thème OFCE 2 — theme_ofce.2","title":"Thème OFCE 2 — theme_ofce.2","text":"Applique le theme ofce compatible avec la norme des working papers d'autres éléments de la norme comme les couleurs, l'allure générale du graphique sont à introduire par ailleurs","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thème OFCE 2 — theme_ofce.2","text":"","code":"theme_ofce.2(   base_size = getOption(\"ofce.base_size\"),   base_family = getOption(\"ofce.base_family\"),   ... )"},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thème OFCE 2 — theme_ofce.2","text":"base_size double(1) Taille des éléments texte du thème. Peut être donné globalement par options(ofce.base_size=12). base_family character(1) string, police de charactère du thème (globalement et défaut options(ofce.base_family=\"Nunito\")) ... paramètres passés à theme()","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thème OFCE 2 — theme_ofce.2","text":"un thème qui peut être utilisé dans ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.html","id":null,"dir":"Reference","previous_headings":"","what":"theme OFCE — theme_ofce","title":"theme OFCE — theme_ofce","text":"Applique le theme ofce compatible avec la norme de la Revue de l'OFCE d'autres éléments de la norme comme les couleurs, l'allure générale du graphique sont à introduire par ailleurs","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme OFCE — theme_ofce","text":"","code":"theme_ofce(   base_size = getOption(\"ofce.base_size\"),   base_family = getOption(\"ofce.base_family\"),   marquee = FALSE,   ... )"},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme OFCE — theme_ofce","text":"base_size double(1) Taille des éléments texte du thème. Peut être donné globalement par options(ofce.base_size=12). base_family character(1) string, police de charactère du thème (globalement et défaut options(ofce.base_family=\"Nunito\")) ... paramètres passés à theme()","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"theme OFCE — theme_ofce","text":"un thème qui peut être utilisé dans ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/theme_ofce_void.html","id":null,"dir":"Reference","previous_headings":"","what":"Thème OFCE void — theme_ofce_void","title":"Thème OFCE void — theme_ofce_void","text":"Applique le theme ofce compatible avec la norme de la Revue de l'OFCE Convient pour des cartes par exemple","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce_void.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thème OFCE void — theme_ofce_void","text":"","code":"theme_ofce_void(   base_size = getOption(\"ofce.base_size\"),   base_family = getOption(\"ofce.base_family\"),   ... )"},{"path":"https://ofce.github.io/ofce/reference/theme_ofce_void.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thème OFCE void — theme_ofce_void","text":"base_size double(1) Taille des éléments texte du thème. Peut être donné globalement par options(ofce.base_size=12). base_family character(1) string, police de charactère du thème (globalement et défaut options(ofce.base_family=\"Nunito\")) ... paramètres passés à theme()","code":""},{"path":"https://ofce.github.io/ofce/reference/theme_ofce_void.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thème OFCE void — theme_ofce_void","text":"un thème qui peut être utilisé dans ggplot","code":""},{"path":[]},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatte un vecteur en produisant des éléments distincts — uf2si2","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"Utilise f2si2 pour formatter un vecteur, et arrondi tant que les éléments formattés sont tous disctints. Cela permet de les utiliser dans une échelle ou pour des noms. Les nombres en entrée doivent être différents","code":""},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"","code":"uf2si2(number, rounding = TRUE, unit = \"median\", digits_max = 4)"},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"number le nombre ou le vecteur de nombre rounding doit-arrondir ? unit Arrondi soit à la \"median\" soit au \"max\" digits_max le nombre maximal de chiffres après la virgule","code":""},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"une chaine de charactères","code":""},{"path":"https://ofce.github.io/ofce/reference/uf2si2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Formatte un vecteur en produisant des éléments distincts — uf2si2","text":"","code":"uf2si2(c(1000,1100,2000,2100)) #> [1] \"1k\"   \"1.1k\" \"2k\"   \"2.1k\""},{"path":"https://ofce.github.io/ofce/news/index.html","id":"ofce-110","dir":"Changelog","previous_headings":"","what":"OFCE 1.1.0","title":"OFCE 1.1.0","text":"documentation et vignettes","code":""},{"path":"https://ofce.github.io/ofce/news/index.html","id":"ofce-100","dir":"Changelog","previous_headings":"","what":"OFCE 1.0.0","title":"OFCE 1.0.0","text":"première version avec notamment les fonctions ** theme_ofce() ** setup_quarto() ** setup_wp()","code":""}]
