---
title: "Séminaire Lunch : Le package ofce"
subtitle: "*C'est vraiment pas compliqué*"
author:
  - name: Paul Malliet
  - name: Anissa Saumtally
  - name: Xavier Timbeau
author-footer: Package OFCE
institution: Observatoire Français des Conjonctures Économiques
date: today
lang: fr
#bibliography: lunchseminar_references.bib
toc-depth: 1
format: 
  pres-revealjs: default
  # slide-level niveau des slides à prendre en compte (2 par défaut)
  # utiliser set_fontsize_reveal(chemin, 32) pour changer la taille des caractères
---

```{r, include=FALSE}
library(knitr)
library(tidyverse) 
library(showtext) 
library(ofce)

opts_chunk$set(
  echo = FALSE,
  warning = FALSE,
  message = FALSE,
  fig.pos="H", 
  out.extra="",
  dev="ragg_png",
  fig.showtext=TRUE,
  cache=FALSE)

showtext_opts(dpi=200)
showtext_auto()
```

# Introduction

## Rappel sur les packages R

## Package OFCE : Pourquoi ?

## Installation du package

# les templates Quarto

## Résumé des fonctions

<br>

Quelque part, sont ajoutés tous les éléments pour le `yaml`, des bouts de code html, latex pour faire le document. Tout se trouve dans `_extension`s.

<br> On l'ajoute dans le dossier où se trouve le `qmd` et on fait référence dans le `yaml` avec les lignes :

<br>

``` bash
---
format:
   wp-html: default
   wp-pdf: default
---
```

## Les différents types de document

-   *working paper* : ajoute le dossier `_extensions` et fait un document exemple que l'on peut modifier\
    `setup_wp()` ou pour le faire dans un dossier spécifique `setup_wp("mon_dossier")`

-   *blog* : `setup_blog()`

-   *présentation* : `setup_pres()`

-   pour appliquer à un `qmd` existant\
    `setup_quarto()` (ne fait que remettre `_extensions` à jour)

Il est possible de spécifier

-   des paramètres dans le `yaml`

-   d'ajouter des filtres lua

-   de modifier les codes `html`, `latex`, `scss`

## Demo Time!

# theme_ofce

## Fonctions

## Utilisation

# Autres fonctionnalités

## Exporter un graphique

<br>

Ces trois fonctions aident à exporter un graphique. Elles utilisent `showtext` pour assurer la bonne sortie des caractères à la bonne taille

-   `graph2png(graph, file="", rep="svg", ratio = 4/3, dpi = 600)`

pour un texte imprimé (A4), un bon ratio est 4/3, pour une présentation (16/10). Pour une carte ratio 1.

-   `graph2svg`

-   `graph2jpg`

## f2si2

<br>

cette fonction sert à appliquer le Système International pour produire une chaîne de caractère compacte et lisible en utilisant des puissance de 1 000 et une notation standardisée (k, M, G, T, ...).

Pratique pour les messages ou les échelles.

```{r, echo=TRUE}
ofce::f2si2(c(2000000, 3000000), digits = 2) 
ofce::f2si2(c(142010, 2000000, 100.1928), digits = 2) 
purrr::map_chr(c(142010, 2000000, 0.1928), ofce::f2si2)
ofce::uf2si2(c(1100,1110,2000,2100))
```

## Préférences de RStudio

<br>

la fonction `setup_RStudio()` force les préférences de RStudio à être :

-   pas de `save` de `.Rdata`

-   utilisation du "pipe natif"

-   utilisation du moteur graphique `ragg`

-   thème "iPlastic" (peut être un autre thème avec `theme="Unautretheme"`)

-   console à droite

-   et quelques autres

## Evolutivité du package `{ofce}`

![](weneedyou.png){fig-align="center"}

## Conclusion

## Pour Résumer

## Alors ?

## Prochaines étapes

<br>

-   package encore en évolution : signalez vos difficultés, les bugs, vos souhaits
-   modèle de documents supplémentaires (policy brief, rapport)

```{=html}
<!-- -->
```
-   définition d'une charte graphique du site web (html) aux documents (pdf)
-   intégration de la production de documents quarto directement sur le site via un processus simple (github)
    -   blogs

    -   documents de travail

    -   policy brief

## Merci pour votre attention

## Références

::: {#refs}
:::
