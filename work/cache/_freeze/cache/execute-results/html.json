{
  "hash": "040b2b4372f4c2c52da900ba4f6c74fd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cache\"\nsubtitle: \"hello cache\"\nformat:\n  html: default\nfreeze: auto\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nSys.getenv(\"QUARTO_PROJECT_ROOT\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/Users/xt/GitHub/ofce/work/cache\"\n```\n\n\n:::\n\n```{.r .cell-code}\nSys.getenv(\"QUARTO_DOCUMENT_PATH\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/Users/xt/GitHub/ofce/work/cache\"\n```\n\n\n:::\n:::\n\n::: {#tbl-table1 .cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nCalled from: source_data(\"testsource.R\", track = list(\"data.csv\"), quiet = FALSE)\ndebug: new_qmds <- unique(c(qmds, qmd_file))\ndebug: if (force & !prevent) {\n    our_data <- exec_source(src, exec_wd, args)\n    if (our_data$ok) {\n        our_data$lapse <- lapse\n        our_data$src <- relname\n        our_data$src_hash <- src_hash\n        our_data$arg_hash <- arg_hash\n        our_data$track_hash <- list(track_hash)\n        our_data$wd <- wd\n        our_data$qmd_file <- new_qmds\n        our_data$root <- root\n        our_data$cache <- cache_rep\n        cache_data(our_data, cache_rep = full_cache_rep, name = basename, \n            uid = uid)\n        if (metadata) {\n            return(our_data)\n        }\n        else {\n            return(our_data$data)\n        }\n    }\n    else {\n        if (!quiet) \n            cli::cli_alert_warning(\"le fichier {src} retourne une erreur, on cherche dans le cache\")\n    }\n}\ndebug: meme_null <- function(x, n, def = 0) ifelse(is.null(x[[n]]), \n    def, x[[n]])\ndebug: if (hash & !prevent) good_datas <- purrr::keep(purrr::keep(purrr::keep(good_datas, \n    ~meme_null(.x, \"src_hash\") == src_hash), ~meme_null(.x, \"arg_hash\", \n    digest::digest(list())) == arg_hash), ~meme_null(.x, \"track_hash\") == \n    track_hash)\ndebug: good_datas <- purrr::keep(purrr::keep(purrr::keep(good_datas, \n    ~meme_null(.x, \"src_hash\") == src_hash), ~meme_null(.x, \"arg_hash\", \n    digest::digest(list())) == arg_hash), ~meme_null(.x, \"track_hash\") == \n    track_hash)\ndebug: if (lapse != \"never\" & !prevent) {\n    alapse <- what_lapse(lapse)\n    good_datas <- purrr::keep(good_datas, ~lubridate::now() - \n        .x[[\"date\"]] <= alapse)\n}\ndebug: if (length(good_datas) == 0) {\n    if (prevent) {\n        if (!quiet) \n            cli::cli_alert_warning(\"Pas de données en cache et pas d'exécution\")\n        return(NULL)\n    }\n    our_data <- exec_source(src, exec_wd, args)\n    if (our_data$ok) {\n        our_data$lapse <- lapse\n        our_data$src <- relname\n        our_data$src_hash <- src_hash\n        our_data$qmd_file <- new_qmds\n        our_data$arg_hash <- arg_hash\n        our_data$track_hash <- list(track_hash)\n        our_data$root <- root\n        our_data$cache <- cache_rep\n        cache_data(our_data, cache_rep = full_cache_rep, name = basename, \n            uid = uid)\n        if (metadata) {\n            return(our_data)\n        }\n        else {\n            return(our_data$data)\n        }\n    }\n    else {\n        if (!quiet) \n            cli::cli_alert_warning(\"le fichier {src} retourne une erreur et rien dans le cache\")\n        return(NULL)\n    }\n}\ndebug: dates <- purrr::map(good_datas, \"date\")\ndebug: good_good_data <- good_datas[[which.max(dates)]]\ndebug: if (!quiet) cli::cli_alert_warning(\"Données lues dans {.file {names(good_datas)[[which.max(dates)]]}}\")\ndebug: cli::cli_alert_warning(\"Données lues dans {.file {names(good_datas)[[which.max(dates)]]}}\")\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\ndebug: ggd_lapse <- good_good_data$lapse %||% \"never\"\ndebug: ggd_wd <- good_good_data$wd %||% \"file\"\ndebug: ggd_qmds <- setequal(good_good_data$qmd_file, new_qmds)\ndebug: if (ggd_lapse != lapse | ggd_wd != wd | !ggd_qmds) {\n    good_good_data$lapse <- lapse\n    good_good_data$wd <- wd\n    good_good_data$qmd_file <- new_qmds\n    cache_data(good_good_data, cache_rep = full_cache_rep, name = basename, \n        uid = uid)\n}\ndebug: good_good_data$lapse <- lapse\ndebug: good_good_data$wd <- wd\ndebug: good_good_data$qmd_file <- new_qmds\ndebug: cache_data(good_good_data, cache_rep = full_cache_rep, name = basename, \n    uid = uid)\ndebug: if (metadata) {\n    return(good_good_data)\n} else {\n    return(good_good_data$data)\n}\ndebug: return(good_good_data$data)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"/Users/xt/GitHub/ofce/work/cache/cache2.qmd\"\n[2] \"/Users/xt/GitHub/ofce/work/cache/cache.qmd\" \n```\n\n\n:::\n:::\n\n\n\ntexte avant\n\n::: {.callout-tip collapse=\"true\" icon=\"false\"}\n## titre de l'encadré\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nggplot(cars)+geom_point(aes(x=speed, y=dist))+ofce::theme_ofce()\n```\n\n::: {.cell-output-display}\n![](cache_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nblablbl\n\n\n\n::: {#tbl-table2 .cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ezloinjfjt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ezloinjfjt table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ezloinjfjt thead, #ezloinjfjt tbody, #ezloinjfjt tfoot, #ezloinjfjt tr, #ezloinjfjt td, #ezloinjfjt th {\n  border-style: none;\n}\n\n#ezloinjfjt p {\n  margin: 0;\n  padding: 0;\n}\n\n#ezloinjfjt .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ezloinjfjt .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ezloinjfjt .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ezloinjfjt .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ezloinjfjt .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ezloinjfjt .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ezloinjfjt .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ezloinjfjt .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ezloinjfjt .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ezloinjfjt .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ezloinjfjt .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ezloinjfjt .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ezloinjfjt .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ezloinjfjt .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ezloinjfjt .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ezloinjfjt .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ezloinjfjt .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ezloinjfjt .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ezloinjfjt .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ezloinjfjt .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ezloinjfjt .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ezloinjfjt .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ezloinjfjt .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ezloinjfjt .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ezloinjfjt .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ezloinjfjt .gt_left {\n  text-align: left;\n}\n\n#ezloinjfjt .gt_center {\n  text-align: center;\n}\n\n#ezloinjfjt .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ezloinjfjt .gt_font_normal {\n  font-weight: normal;\n}\n\n#ezloinjfjt .gt_font_bold {\n  font-weight: bold;\n}\n\n#ezloinjfjt .gt_font_italic {\n  font-style: italic;\n}\n\n#ezloinjfjt .gt_super {\n  font-size: 65%;\n}\n\n#ezloinjfjt .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ezloinjfjt .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ezloinjfjt .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ezloinjfjt .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ezloinjfjt .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ezloinjfjt .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ezloinjfjt .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#ezloinjfjt .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#ezloinjfjt div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"a\">a</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"b\">b</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"c\">c</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"a\" class=\"gt_row gt_left\">text</td>\n<td headers=\"b\" class=\"gt_row gt_right\">1</td>\n<td headers=\"c\" class=\"gt_row gt_left\">Long text aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaargh</td></tr>\n    <tr><td headers=\"a\" class=\"gt_row gt_left\">others</td>\n<td headers=\"b\" class=\"gt_row gt_right\">2</td>\n<td headers=\"c\" class=\"gt_row gt_left\">Long text aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaargh</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\ncontinuing\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}