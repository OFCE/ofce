---
title: "Les tableaux dans quartos"
subtitle: "- atelier de rentr√©e -"
author:
  - name: Paul, Anissa, et Xavier
author-footer: Paul, Anissa, et Xavier
institution: "OFCE - Lunch-S√©minaire"
date: today
lang: fr
code-fold: true
format: 
  pres-revealjs: 
    incremental: true   
    toc: false
  # slide-level niveau des slides √† prendre en compte (2 par d√©faut)
  # utiliser set_fontsize_reveal(chemin, 32) pour changer la taille des caract√®res
---

```{r, include=FALSE}
library(knitr)
library(tidyverse) 
library(showtext) 
library(ofce)
library(gt)

opts_chunk$set(
  echo = FALSE,
  warning = FALSE,
  message = FALSE,
  fig.pos="H", 
  out.extra="",
  dev="ragg_png",
  fig.showtext=TRUE,
  cache=FALSE)

showtext_opts(dpi=200)
showtext_auto()
tableau <- sample(iris)
```

# Introduction

## Objectif de la session

-   Pr√©senter les outils disponibles pour la visualisation des donn√©es sous forme de tableau dans vos documents markdown

-   Montrer pas √† pas comment √† partir d'un tableau de donn√©es brutes, on obtient un tableau pr√©sentable dans un document

## Comment ne pas mettre un tableau ?

<br>

-   Toute mauvaise r√©ponse est la bienvenue

<br>

-   **La copie d'√©cran image coll√©e**
-   aussi connue sous la forme de "Je fais dans excel et je mets une image dans quarto"

<br>

-   Pourquoi ?

-   parce que nous valons tous mieux que √ßa.

-   ce n'est pas √©ditable dans le code, ce qui implique :

    -   Pas de tra√ßabilit√© des changements
    -   Des aller-retours entre plusieurs programmes
    -   Uniformisation des formats fastidieuses
    -   Peu de contr√¥le sur l'affichage

## Comment mettre un tableau : niveau 0

<br>

-   Par exemple si dans votre code de qmd il y a √ßa :

```{r}
#| eval: false
#| echo: true

head(iris)

```

-   Cela affichera √ßa

```{r}
#| eval: true
#| echo: false

head(iris)

```

-   --\> Probl√®mes ?

## Comment mettre un tableau manuellement sans jeux de donn√©es

### La syntaxe markdown

-   Ce format peut convenir pour les tableaux √† texte.

-   √ßa ressemble √† √ßa dans votre .qmd (en dehors d'un chunk)

```{r}
#| eval: false
#| echo: true

    |  Du texte | Du chiffre | Un emoji |
    |-----------|------------|----------|
    |  Or       | 16         | ü•á       |
    | Argent    | 26         | ü•à       |
    | Bronze    | 22         | ü•â       |

```

-   la structure peut se faire automatiquement dans le mode `visual` en faisant \`insert`>`\`table\`

    | Du texte | Du chiffre | Un emoji |
    |----------|------------|----------|
    | Or       | 16         | ü•á       |
    | Argent   | 26         | ü•à       |
    | Bronze   | 22         | ü•â       |

-   Il est cependant difficile √† formater et √©diter.

## Comment mettre un *beau* tableau

### L'utilisation de packages R pour les tableaux format√©s

-   Cette m√©thode est √† priviligier pour tout tableau contenant des donn√©es principalement num√©riques ou extraites de base de donn√©es.

-   Plusieurs packages existent: `huxtable`, `flextable`, `formattable`, `gt` etc..

-   **Le package privil√©gi√© pour l'ofce est `gt`.**

-   *On notera cependant que d'autres packages peuvent pr√©senter quelques fonctionnalit√©s suppl√©mentaires qui peuvent √™tre int√©ressantes pour certaines applications. Par exemple, le package `flextable` est tr√®s utile si le document de sortie est un `.docx` et est plus flexible sur la gestion des cellules merg√©es.*

## Le package `gt`

-   Le package gt est con√ßu pour g√©n√©rer des tableaux dans R avec une syntaxe simple et bien int√©gr√©e dans le `tidyverse`

-   Il permet de cr√©er des tableaux propres, lisibles et personnalisables pour les inclure dans un document

-   Compar√© √† d'autres packages, gt offre une approche plus intuitive pour la stylisation des tableaux.

## Installation

```{r}
#| echo: true
#| eval: false


```

## Organisation du format des tableaux `gt`

<br>

![](gt_parts_of_a_table.svg)

## Quelques rappels de bonnes pratiques au sujet des donn√©es

<br>

-   les donn√©es sur R sont stock√©es dans un objet data.frame
-   

# Un worflow avec `gt`

## Etapes

-   obtention des donn√©es
-   pr√©paration des donn√©es
-   cr√©ation de la table `gt`
-   mise en forme simple
-   ajout de titres et notes de tableaux
-   fonctions plus esth√©tiques

## Etape 0 : Tout commence au `data.frame`

-   Dans un premier temps, il vous faut obtenir les donn√©es. C'est √† dire avoir data.frame dans votre

## Etape 1 : Les donn√©es brutes

## Etape 2 : Passage √† `gt`

## Etape 3 : Mise en forme basique

## Etape 3.1 : Les groupes

## Etape 4 : En-t√™tes et Notes de bas de page

## Etape 5 : Quelques fonctions esth√©tiques

## Etape bonus : r√©f√©rences crois√©es !

## Etape super-bonus : les fonctionnalit√©s avanc√©es

<br>

-   Le package `gt` est riche en fonctionnalit√©s.

    -   La package `gtExtras` vient compl√©menter `gt` en ajoutant des options de visualisations telles que les mini graphiques dans les tableaux

    -   On peut g√©n√©rer des lignes de r√©sum√© (type ligne "total" ou "moyenne" ) automatiquement par la fonction `summary_rows()`

# Conclusion

<br>

-   Voir la doc du package sur https://gt.rstudio.com/
-   En cas de besoin : demandez !
